// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Search Field Default 1`] = `
.c4 {
  display: inline-block;
  vertical-align: text-bottom;
}

.c4 .farmblocks-icon {
  display: block;
}

.c5 {
  font-family: Lato,sans-serif;
  font-size: 16px;
  font-weight: 600;
  line-height: 1.5;
  color: #2f313a;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-bottom: 24px;
  font-family: Lato,sans-serif;
  font-size: 16px;
}

.c3 > .input {
  -webkit-order: 2;
  -ms-flex-order: 2;
  order: 2;
  box-sizing: border-box;
  border: solid 1px;
  border-radius: 4px;
  border-color: rgba(0,0,0,0.16);
  background-color: #ffffff;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  overflow: auto;
}

.c3 > .input .wrapped {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c3 > .input > input,
.select__search .c3 > .input input {
  padding: 8px 16px;
  line-height: 22px;
}

.c3 > .input > textarea {
  padding: 16px;
}

.c3 > .input input,
.c3 > .input textarea,
.c3 > .input select {
  font-family: inherit;
  font-size: inherit;
}

.c3 > .input > input,
.c3 > .input > textarea,
.select__search .c3 > .input input {
  min-width: 0;
  border: 0;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  outline: none;
  color: #2f313a;
  background: none;
}

.c3 > .input > input::-webkit-input-placeholder,
.c3 > .input > textarea::-webkit-input-placeholder,
.select__search .c3 > .input input::-webkit-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input::-moz-placeholder,
.c3 > .input > textarea::-moz-placeholder,
.select__search .c3 > .input input::-moz-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input:-ms-input-placeholder,
.c3 > .input > textarea:-ms-input-placeholder,
.select__search .c3 > .input input:-ms-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input::placeholder,
.c3 > .input > textarea::placeholder,
.select__search .c3 > .input input::placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input[type="search"],
.c3 > .input > textarea[type="search"],
.select__search .c3 > .input input[type="search"] {
  -webkit-appearance: none;
  -moz-appearance: none;
}

.c3 > .input > input[type="search"]::-webkit-search-cancel-button,
.c3 > .input > textarea[type="search"]::-webkit-search-cancel-button,
.select__search .c3 > .input input[type="search"]::-webkit-search-cancel-button {
  display: none;
}

.c3 > .input > input[type="search"]::-ms-clear,
.c3 > .input > textarea[type="search"]::-ms-clear,
.select__search .c3 > .input input[type="search"]::-ms-clear {
  width: 0;
  height: 0;
}

.c3 > .input > input[role="combobox"],
.c3 > .input > textarea[role="combobox"],
.select__search .c3 > .input input[role="combobox"] {
  cursor: pointer;
}

.c3 > .input > .icon {
  color: rgba(0,0,0,0.16);
}

.c3 > .input > .icon.left {
  margin-left: 8px;
  margin-right: -8px;
}

.c3 > .input > .icon.right {
  margin-right: 8px;
  margin-left: -8px;
}

.c3 > .input > .clear {
  color: rgba(0,0,0,0.16);
}

.c3 > .input > .clear:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #3498db;
}

.c3 > .input > .clear a {
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
}

.c3 .input.dropdown {
  cursor: pointer;
}

.c3 input[type="number"] {
  -moz-appearance: textfield;
}

.c3 input[type="number"]::-webkit-inner-spin-button,
.c3 input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.c3 .prefix {
  margin-left: 16px;
  margin-right: -8px;
}

.c3 .suffix {
  margin-right: 16px;
  margin-left: -8px;
}

.c3 .prefix,
.c3 .suffix {
  font-family: Lato,sans-serif;
  font-size: 16px;
  color: rgba(0,0,0,0.32);
}

.c3 .label {
  margin-bottom: 8px;
}

.c0 {
  font-family: lato,sans-serif;
  display: inline-block;
  position: relative;
}

.c0 *:focus {
  outline: none;
}

.c2 {
  position: relative;
}

.c2 >:first-child {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.c1 input {
  width: 100%;
  min-width: 0;
}

.c1.selected .input {
  background: #f6f8f9;
  cursor: auto;
}

<div
  className="c0 c1 undefined  "
  style={
    Object {
      "width": 200,
      "zIndex": undefined,
    }
  }
>
  <div
    className="c2"
  >
    <div
      className="c3 searchInput"
      onClick={[Function]}
      type="search"
    >
      <div
        className="input "
      >
        <div
          className="icon left"
        >
          <span
            className="c4"
            color="currentColor"
            size="1em"
          >
            <svg
              aria-hidden={true}
              className="farmblocks-icon "
              height={18}
              viewBox="2 2 20 20"
              width={18}
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M10 3a7 7 0 104.201 12.6l.009.013.083.094 5 5a1 1 0 001.497-1.32l-.083-.094-5-5a1.009 1.009 0 00-.108-.094A7 7 0 0010 3zm0 2a5 5 0 110 10 5 5 0 010-10z"
                fill="currentColor"
                fillRule="evenodd"
              />
            </svg>
          </span>
        </div>
        <input
          className="wrapped "
          data-testid="search-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          type="search"
          value=""
        />
        
      </div>
      <label
        className="c5 label"
      >
        Fruits
      </label>
    </div>
  </div>
</div>
`;

exports[`Storyshots Search Field Z-index 1`] = `
.c4 {
  display: inline-block;
  vertical-align: text-bottom;
}

.c4 .farmblocks-icon {
  display: block;
}

.c5 {
  font-family: Lato,sans-serif;
  font-size: 16px;
  font-weight: 600;
  line-height: 1.5;
  color: #2f313a;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-bottom: 24px;
  font-family: Lato,sans-serif;
  font-size: 16px;
}

.c3 > .input {
  -webkit-order: 2;
  -ms-flex-order: 2;
  order: 2;
  box-sizing: border-box;
  border: solid 1px;
  border-radius: 4px;
  border-color: rgba(0,0,0,0.16);
  background-color: #ffffff;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  overflow: auto;
}

.c3 > .input .wrapped {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c3 > .input > input,
.select__search .c3 > .input input {
  padding: 8px 16px;
  line-height: 22px;
}

.c3 > .input > textarea {
  padding: 16px;
}

.c3 > .input input,
.c3 > .input textarea,
.c3 > .input select {
  font-family: inherit;
  font-size: inherit;
}

.c3 > .input > input,
.c3 > .input > textarea,
.select__search .c3 > .input input {
  min-width: 0;
  border: 0;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  outline: none;
  color: #2f313a;
  background: none;
}

.c3 > .input > input::-webkit-input-placeholder,
.c3 > .input > textarea::-webkit-input-placeholder,
.select__search .c3 > .input input::-webkit-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input::-moz-placeholder,
.c3 > .input > textarea::-moz-placeholder,
.select__search .c3 > .input input::-moz-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input:-ms-input-placeholder,
.c3 > .input > textarea:-ms-input-placeholder,
.select__search .c3 > .input input:-ms-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input::placeholder,
.c3 > .input > textarea::placeholder,
.select__search .c3 > .input input::placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input[type="search"],
.c3 > .input > textarea[type="search"],
.select__search .c3 > .input input[type="search"] {
  -webkit-appearance: none;
  -moz-appearance: none;
}

.c3 > .input > input[type="search"]::-webkit-search-cancel-button,
.c3 > .input > textarea[type="search"]::-webkit-search-cancel-button,
.select__search .c3 > .input input[type="search"]::-webkit-search-cancel-button {
  display: none;
}

.c3 > .input > input[type="search"]::-ms-clear,
.c3 > .input > textarea[type="search"]::-ms-clear,
.select__search .c3 > .input input[type="search"]::-ms-clear {
  width: 0;
  height: 0;
}

.c3 > .input > input[role="combobox"],
.c3 > .input > textarea[role="combobox"],
.select__search .c3 > .input input[role="combobox"] {
  cursor: pointer;
}

.c3 > .input > .icon {
  color: rgba(0,0,0,0.16);
}

.c3 > .input > .icon.left {
  margin-left: 8px;
  margin-right: -8px;
}

.c3 > .input > .icon.right {
  margin-right: 8px;
  margin-left: -8px;
}

.c3 > .input > .clear {
  color: rgba(0,0,0,0.16);
}

.c3 > .input > .clear:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #3498db;
}

.c3 > .input > .clear a {
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
}

.c3 .input.dropdown {
  cursor: pointer;
}

.c3 input[type="number"] {
  -moz-appearance: textfield;
}

.c3 input[type="number"]::-webkit-inner-spin-button,
.c3 input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.c3 .prefix {
  margin-left: 16px;
  margin-right: -8px;
}

.c3 .suffix {
  margin-right: 16px;
  margin-left: -8px;
}

.c3 .prefix,
.c3 .suffix {
  font-family: Lato,sans-serif;
  font-size: 16px;
  color: rgba(0,0,0,0.32);
}

.c3 .label {
  margin-bottom: 8px;
}

.c0 {
  font-family: lato,sans-serif;
  display: inline-block;
  position: relative;
}

.c0 *:focus {
  outline: none;
}

.c2 {
  position: relative;
}

.c2 >:first-child {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.c1 input {
  width: 100%;
  min-width: 0;
}

.c1.selected .input {
  background: #f6f8f9;
  cursor: auto;
}

<div>
  <div
    style={
      Object {
        "background": "gray",
        "height": 400,
        "position": "absolute",
        "top": 150,
        "width": 200,
        "zIndex": 10,
      }
    }
  >
    Z-index: 10
  </div>
  <div
    className="c0 c1 undefined  "
    style={
      Object {
        "width": 200,
        "zIndex": 11,
      }
    }
  >
    <div
      className="c2"
    >
      <div
        className="c3 searchInput"
        onClick={[Function]}
        type="search"
      >
        <div
          className="input "
        >
          <div
            className="icon left"
          >
            <span
              className="c4"
              color="currentColor"
              size="1em"
            >
              <svg
                aria-hidden={true}
                className="farmblocks-icon "
                height={18}
                viewBox="2 2 20 20"
                width={18}
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M10 3a7 7 0 104.201 12.6l.009.013.083.094 5 5a1 1 0 001.497-1.32l-.083-.094-5-5a1.009 1.009 0 00-.108-.094A7 7 0 0010 3zm0 2a5 5 0 110 10 5 5 0 010-10z"
                  fill="currentColor"
                  fillRule="evenodd"
                />
              </svg>
            </span>
          </div>
          <input
            className="wrapped "
            data-testid="search-input"
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            type="search"
            value=""
          />
          
        </div>
        <label
          className="c5 label"
        >
          Fruits
        </label>
      </div>
    </div>
  </div>
  <div
    style={
      Object {
        "background": "blue",
        "height": 200,
        "left": 100,
        "position": "absolute",
        "top": 150,
        "width": 300,
        "zIndex": 12,
      }
    }
  >
    Z-index: 12
  </div>
</div>
`;

exports[`Storyshots Search Field custom debounce delay 1`] = `
.c4 {
  display: inline-block;
  vertical-align: text-bottom;
}

.c4 .farmblocks-icon {
  display: block;
}

.c5 {
  font-family: Lato,sans-serif;
  font-size: 16px;
  font-weight: 600;
  line-height: 1.5;
  color: #2f313a;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-bottom: 24px;
  font-family: Lato,sans-serif;
  font-size: 16px;
}

.c3 > .input {
  -webkit-order: 2;
  -ms-flex-order: 2;
  order: 2;
  box-sizing: border-box;
  border: solid 1px;
  border-radius: 4px;
  border-color: rgba(0,0,0,0.16);
  background-color: #ffffff;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  overflow: auto;
}

.c3 > .input .wrapped {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c3 > .input > input,
.select__search .c3 > .input input {
  padding: 8px 16px;
  line-height: 22px;
}

.c3 > .input > textarea {
  padding: 16px;
}

.c3 > .input input,
.c3 > .input textarea,
.c3 > .input select {
  font-family: inherit;
  font-size: inherit;
}

.c3 > .input > input,
.c3 > .input > textarea,
.select__search .c3 > .input input {
  min-width: 0;
  border: 0;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  outline: none;
  color: #2f313a;
  background: none;
}

.c3 > .input > input::-webkit-input-placeholder,
.c3 > .input > textarea::-webkit-input-placeholder,
.select__search .c3 > .input input::-webkit-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input::-moz-placeholder,
.c3 > .input > textarea::-moz-placeholder,
.select__search .c3 > .input input::-moz-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input:-ms-input-placeholder,
.c3 > .input > textarea:-ms-input-placeholder,
.select__search .c3 > .input input:-ms-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input::placeholder,
.c3 > .input > textarea::placeholder,
.select__search .c3 > .input input::placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input[type="search"],
.c3 > .input > textarea[type="search"],
.select__search .c3 > .input input[type="search"] {
  -webkit-appearance: none;
  -moz-appearance: none;
}

.c3 > .input > input[type="search"]::-webkit-search-cancel-button,
.c3 > .input > textarea[type="search"]::-webkit-search-cancel-button,
.select__search .c3 > .input input[type="search"]::-webkit-search-cancel-button {
  display: none;
}

.c3 > .input > input[type="search"]::-ms-clear,
.c3 > .input > textarea[type="search"]::-ms-clear,
.select__search .c3 > .input input[type="search"]::-ms-clear {
  width: 0;
  height: 0;
}

.c3 > .input > input[role="combobox"],
.c3 > .input > textarea[role="combobox"],
.select__search .c3 > .input input[role="combobox"] {
  cursor: pointer;
}

.c3 > .input > .icon {
  color: rgba(0,0,0,0.16);
}

.c3 > .input > .icon.left {
  margin-left: 8px;
  margin-right: -8px;
}

.c3 > .input > .icon.right {
  margin-right: 8px;
  margin-left: -8px;
}

.c3 > .input > .clear {
  color: rgba(0,0,0,0.16);
}

.c3 > .input > .clear:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #3498db;
}

.c3 > .input > .clear a {
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
}

.c3 .input.dropdown {
  cursor: pointer;
}

.c3 input[type="number"] {
  -moz-appearance: textfield;
}

.c3 input[type="number"]::-webkit-inner-spin-button,
.c3 input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.c3 .prefix {
  margin-left: 16px;
  margin-right: -8px;
}

.c3 .suffix {
  margin-right: 16px;
  margin-left: -8px;
}

.c3 .prefix,
.c3 .suffix {
  font-family: Lato,sans-serif;
  font-size: 16px;
  color: rgba(0,0,0,0.32);
}

.c3 .label {
  margin-bottom: 8px;
}

.c0 {
  font-family: lato,sans-serif;
  display: inline-block;
  position: relative;
}

.c0 *:focus {
  outline: none;
}

.c2 {
  position: relative;
}

.c2 >:first-child {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.c1 input {
  width: 100%;
  min-width: 0;
}

.c1.selected .input {
  background: #f6f8f9;
  cursor: auto;
}

<div
  className="c0 c1 undefined  "
  style={
    Object {
      "width": 200,
      "zIndex": undefined,
    }
  }
>
  <div
    className="c2"
  >
    <div
      className="c3 searchInput"
      onClick={[Function]}
      type="search"
    >
      <div
        className="input "
      >
        <div
          className="icon left"
        >
          <span
            className="c4"
            color="currentColor"
            size="1em"
          >
            <svg
              aria-hidden={true}
              className="farmblocks-icon "
              height={18}
              viewBox="2 2 20 20"
              width={18}
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M10 3a7 7 0 104.201 12.6l.009.013.083.094 5 5a1 1 0 001.497-1.32l-.083-.094-5-5a1.009 1.009 0 00-.108-.094A7 7 0 0010 3zm0 2a5 5 0 110 10 5 5 0 010-10z"
                fill="currentColor"
                fillRule="evenodd"
              />
            </svg>
          </span>
        </div>
        <input
          className="wrapped "
          data-testid="search-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          placeholder="3s delay"
          type="search"
          value=""
        />
        
      </div>
      <label
        className="c5 label"
      >
        Fruits
      </label>
    </div>
  </div>
</div>
`;

exports[`Storyshots Search Field custom menu height 1`] = `
.c4 {
  display: inline-block;
  vertical-align: text-bottom;
}

.c4 .farmblocks-icon {
  display: block;
}

.c5 {
  font-family: Lato,sans-serif;
  font-size: 16px;
  font-weight: 600;
  line-height: 1.5;
  color: #2f313a;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-bottom: 24px;
  font-family: Lato,sans-serif;
  font-size: 16px;
}

.c3 > .input {
  -webkit-order: 2;
  -ms-flex-order: 2;
  order: 2;
  box-sizing: border-box;
  border: solid 1px;
  border-radius: 4px;
  border-color: rgba(0,0,0,0.16);
  background-color: #ffffff;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  overflow: auto;
}

.c3 > .input .wrapped {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c3 > .input > input,
.select__search .c3 > .input input {
  padding: 8px 16px;
  line-height: 22px;
}

.c3 > .input > textarea {
  padding: 16px;
}

.c3 > .input input,
.c3 > .input textarea,
.c3 > .input select {
  font-family: inherit;
  font-size: inherit;
}

.c3 > .input > input,
.c3 > .input > textarea,
.select__search .c3 > .input input {
  min-width: 0;
  border: 0;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  outline: none;
  color: #2f313a;
  background: none;
}

.c3 > .input > input::-webkit-input-placeholder,
.c3 > .input > textarea::-webkit-input-placeholder,
.select__search .c3 > .input input::-webkit-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input::-moz-placeholder,
.c3 > .input > textarea::-moz-placeholder,
.select__search .c3 > .input input::-moz-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input:-ms-input-placeholder,
.c3 > .input > textarea:-ms-input-placeholder,
.select__search .c3 > .input input:-ms-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input::placeholder,
.c3 > .input > textarea::placeholder,
.select__search .c3 > .input input::placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input[type="search"],
.c3 > .input > textarea[type="search"],
.select__search .c3 > .input input[type="search"] {
  -webkit-appearance: none;
  -moz-appearance: none;
}

.c3 > .input > input[type="search"]::-webkit-search-cancel-button,
.c3 > .input > textarea[type="search"]::-webkit-search-cancel-button,
.select__search .c3 > .input input[type="search"]::-webkit-search-cancel-button {
  display: none;
}

.c3 > .input > input[type="search"]::-ms-clear,
.c3 > .input > textarea[type="search"]::-ms-clear,
.select__search .c3 > .input input[type="search"]::-ms-clear {
  width: 0;
  height: 0;
}

.c3 > .input > input[role="combobox"],
.c3 > .input > textarea[role="combobox"],
.select__search .c3 > .input input[role="combobox"] {
  cursor: pointer;
}

.c3 > .input > .icon {
  color: rgba(0,0,0,0.16);
}

.c3 > .input > .icon.left {
  margin-left: 8px;
  margin-right: -8px;
}

.c3 > .input > .icon.right {
  margin-right: 8px;
  margin-left: -8px;
}

.c3 > .input > .clear {
  color: rgba(0,0,0,0.16);
}

.c3 > .input > .clear:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #3498db;
}

.c3 > .input > .clear a {
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
}

.c3 .input.dropdown {
  cursor: pointer;
}

.c3 input[type="number"] {
  -moz-appearance: textfield;
}

.c3 input[type="number"]::-webkit-inner-spin-button,
.c3 input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.c3 .prefix {
  margin-left: 16px;
  margin-right: -8px;
}

.c3 .suffix {
  margin-right: 16px;
  margin-left: -8px;
}

.c3 .prefix,
.c3 .suffix {
  font-family: Lato,sans-serif;
  font-size: 16px;
  color: rgba(0,0,0,0.32);
}

.c3 .label {
  margin-bottom: 8px;
}

.c0 {
  font-family: lato,sans-serif;
  display: inline-block;
  position: relative;
}

.c0 *:focus {
  outline: none;
}

.c2 {
  position: relative;
}

.c2 >:first-child {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.c1 input {
  width: 100%;
  min-width: 0;
}

.c1.selected .input {
  background: #f6f8f9;
  cursor: auto;
}

<div
  className="c0 c1 undefined  "
  style={
    Object {
      "width": 200,
      "zIndex": undefined,
    }
  }
>
  <div
    className="c2"
  >
    <div
      className="c3 searchInput"
      onClick={[Function]}
      type="search"
    >
      <div
        className="input "
      >
        <div
          className="icon left"
        >
          <span
            className="c4"
            color="currentColor"
            size="1em"
          >
            <svg
              aria-hidden={true}
              className="farmblocks-icon "
              height={18}
              viewBox="2 2 20 20"
              width={18}
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M10 3a7 7 0 104.201 12.6l.009.013.083.094 5 5a1 1 0 001.497-1.32l-.083-.094-5-5a1.009 1.009 0 00-.108-.094A7 7 0 0010 3zm0 2a5 5 0 110 10 5 5 0 010-10z"
                fill="currentColor"
                fillRule="evenodd"
              />
            </svg>
          </span>
        </div>
        <input
          className="wrapped "
          data-testid="search-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          type="search"
          value=""
        />
        
      </div>
      <label
        className="c5 label"
      >
        Fruits
      </label>
    </div>
  </div>
</div>
`;

exports[`Storyshots Search Field custom width 1`] = `
.c4 {
  display: inline-block;
  vertical-align: text-bottom;
}

.c4 .farmblocks-icon {
  display: block;
}

.c5 {
  font-family: Lato,sans-serif;
  font-size: 16px;
  font-weight: 600;
  line-height: 1.5;
  color: #2f313a;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-bottom: 24px;
  font-family: Lato,sans-serif;
  font-size: 16px;
}

.c3 > .input {
  -webkit-order: 2;
  -ms-flex-order: 2;
  order: 2;
  box-sizing: border-box;
  border: solid 1px;
  border-radius: 4px;
  border-color: rgba(0,0,0,0.16);
  background-color: #ffffff;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  overflow: auto;
}

.c3 > .input .wrapped {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c3 > .input > input,
.select__search .c3 > .input input {
  padding: 8px 16px;
  line-height: 22px;
}

.c3 > .input > textarea {
  padding: 16px;
}

.c3 > .input input,
.c3 > .input textarea,
.c3 > .input select {
  font-family: inherit;
  font-size: inherit;
}

.c3 > .input > input,
.c3 > .input > textarea,
.select__search .c3 > .input input {
  min-width: 0;
  border: 0;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  outline: none;
  color: #2f313a;
  background: none;
}

.c3 > .input > input::-webkit-input-placeholder,
.c3 > .input > textarea::-webkit-input-placeholder,
.select__search .c3 > .input input::-webkit-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input::-moz-placeholder,
.c3 > .input > textarea::-moz-placeholder,
.select__search .c3 > .input input::-moz-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input:-ms-input-placeholder,
.c3 > .input > textarea:-ms-input-placeholder,
.select__search .c3 > .input input:-ms-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input::placeholder,
.c3 > .input > textarea::placeholder,
.select__search .c3 > .input input::placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input[type="search"],
.c3 > .input > textarea[type="search"],
.select__search .c3 > .input input[type="search"] {
  -webkit-appearance: none;
  -moz-appearance: none;
}

.c3 > .input > input[type="search"]::-webkit-search-cancel-button,
.c3 > .input > textarea[type="search"]::-webkit-search-cancel-button,
.select__search .c3 > .input input[type="search"]::-webkit-search-cancel-button {
  display: none;
}

.c3 > .input > input[type="search"]::-ms-clear,
.c3 > .input > textarea[type="search"]::-ms-clear,
.select__search .c3 > .input input[type="search"]::-ms-clear {
  width: 0;
  height: 0;
}

.c3 > .input > input[role="combobox"],
.c3 > .input > textarea[role="combobox"],
.select__search .c3 > .input input[role="combobox"] {
  cursor: pointer;
}

.c3 > .input > .icon {
  color: rgba(0,0,0,0.16);
}

.c3 > .input > .icon.left {
  margin-left: 8px;
  margin-right: -8px;
}

.c3 > .input > .icon.right {
  margin-right: 8px;
  margin-left: -8px;
}

.c3 > .input > .clear {
  color: rgba(0,0,0,0.16);
}

.c3 > .input > .clear:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #3498db;
}

.c3 > .input > .clear a {
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
}

.c3 .input.dropdown {
  cursor: pointer;
}

.c3 input[type="number"] {
  -moz-appearance: textfield;
}

.c3 input[type="number"]::-webkit-inner-spin-button,
.c3 input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.c3 .prefix {
  margin-left: 16px;
  margin-right: -8px;
}

.c3 .suffix {
  margin-right: 16px;
  margin-left: -8px;
}

.c3 .prefix,
.c3 .suffix {
  font-family: Lato,sans-serif;
  font-size: 16px;
  color: rgba(0,0,0,0.32);
}

.c3 .label {
  margin-bottom: 8px;
}

.c0 {
  font-family: lato,sans-serif;
  display: inline-block;
  position: relative;
}

.c0 *:focus {
  outline: none;
}

.c2 {
  position: relative;
}

.c2 >:first-child {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.c1 input {
  width: 100%;
  min-width: 0;
}

.c1.selected .input {
  background: #f6f8f9;
  cursor: auto;
}

<div
  className="c0 c1 undefined  "
  style={
    Object {
      "width": "50%",
      "zIndex": undefined,
    }
  }
>
  <div
    className="c2"
  >
    <div
      className="c3 searchInput"
      onClick={[Function]}
      type="search"
    >
      <div
        className="input "
      >
        <div
          className="icon left"
        >
          <span
            className="c4"
            color="currentColor"
            size="1em"
          >
            <svg
              aria-hidden={true}
              className="farmblocks-icon "
              height={18}
              viewBox="2 2 20 20"
              width={18}
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M10 3a7 7 0 104.201 12.6l.009.013.083.094 5 5a1 1 0 001.497-1.32l-.083-.094-5-5a1.009 1.009 0 00-.108-.094A7 7 0 0010 3zm0 2a5 5 0 110 10 5 5 0 010-10z"
                fill="currentColor"
                fillRule="evenodd"
              />
            </svg>
          </span>
        </div>
        <input
          className="wrapped "
          data-testid="search-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          type="search"
          value=""
        />
        
      </div>
      <label
        className="c5 label"
      >
        Fruits
      </label>
    </div>
  </div>
</div>
`;

exports[`Storyshots Search Field disabled 1`] = `
.c4 {
  display: inline-block;
  vertical-align: text-bottom;
}

.c4 .farmblocks-icon {
  display: block;
}

.c5 {
  font-family: Lato,sans-serif;
  font-size: 16px;
  font-weight: 600;
  line-height: 1.5;
  color: rgba(0,0,0,0.32);
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-bottom: 24px;
  font-family: Lato,sans-serif;
  font-size: 16px;
}

.c3 > .input {
  -webkit-order: 2;
  -ms-flex-order: 2;
  order: 2;
  box-sizing: border-box;
  border: solid 1px;
  border-radius: 4px;
  border-color: rgba(0,0,0,0.16);
  background-color: rgba(0,0,0,0.16);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  overflow: auto;
}

.c3 > .input .wrapped {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c3 > .input > input,
.select__search .c3 > .input input {
  padding: 8px 16px;
  line-height: 22px;
}

.c3 > .input > textarea {
  padding: 16px;
}

.c3 > .input input,
.c3 > .input textarea,
.c3 > .input select {
  font-family: inherit;
  font-size: inherit;
}

.c3 > .input > input,
.c3 > .input > textarea,
.select__search .c3 > .input input {
  min-width: 0;
  border: 0;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  outline: none;
  color: rgba(0,0,0,0.32);
  background: none;
}

.c3 > .input > input::-webkit-input-placeholder,
.c3 > .input > textarea::-webkit-input-placeholder,
.select__search .c3 > .input input::-webkit-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input::-moz-placeholder,
.c3 > .input > textarea::-moz-placeholder,
.select__search .c3 > .input input::-moz-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input:-ms-input-placeholder,
.c3 > .input > textarea:-ms-input-placeholder,
.select__search .c3 > .input input:-ms-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input::placeholder,
.c3 > .input > textarea::placeholder,
.select__search .c3 > .input input::placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input[type="search"],
.c3 > .input > textarea[type="search"],
.select__search .c3 > .input input[type="search"] {
  -webkit-appearance: none;
  -moz-appearance: none;
}

.c3 > .input > input[type="search"]::-webkit-search-cancel-button,
.c3 > .input > textarea[type="search"]::-webkit-search-cancel-button,
.select__search .c3 > .input input[type="search"]::-webkit-search-cancel-button {
  display: none;
}

.c3 > .input > input[type="search"]::-ms-clear,
.c3 > .input > textarea[type="search"]::-ms-clear,
.select__search .c3 > .input input[type="search"]::-ms-clear {
  width: 0;
  height: 0;
}

.c3 > .input > input[role="combobox"],
.c3 > .input > textarea[role="combobox"],
.select__search .c3 > .input input[role="combobox"] {
  cursor: default;
}

.c3 > .input > .icon {
  color: rgba(0,0,0,0.16);
}

.c3 > .input > .icon.left {
  margin-left: 8px;
  margin-right: -8px;
}

.c3 > .input > .icon.right {
  margin-right: 8px;
  margin-left: -8px;
}

.c3 > .input > .clear {
  color: rgba(0,0,0,0.16);
}

.c3 > .input > .clear:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #3498db;
}

.c3 > .input > .clear a {
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
}

.c3 .input.dropdown {
  cursor: default;
}

.c3 input[type="number"] {
  -moz-appearance: textfield;
}

.c3 input[type="number"]::-webkit-inner-spin-button,
.c3 input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.c3 .prefix {
  margin-left: 16px;
  margin-right: -8px;
}

.c3 .suffix {
  margin-right: 16px;
  margin-left: -8px;
}

.c3 .prefix,
.c3 .suffix {
  font-family: Lato,sans-serif;
  font-size: 16px;
  color: rgba(0,0,0,0.32);
}

.c3 .label {
  margin-bottom: 8px;
}

.c0 {
  font-family: lato,sans-serif;
  display: inline-block;
  position: relative;
}

.c0 *:focus {
  outline: none;
}

.c2 {
  position: relative;
}

.c2 >:first-child {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.c1 input {
  width: 100%;
  min-width: 0;
}

.c1.selected .input {
  background: #f6f8f9;
  cursor: auto;
}

<div
  className="c0 c1 undefined  disabled"
  style={
    Object {
      "width": 200,
      "zIndex": undefined,
    }
  }
>
  <div
    className="c2"
  >
    <div
      className="c3 searchInput"
      disabled={true}
      onClick={[Function]}
      type="search"
    >
      <div
        className="input "
      >
        <div
          className="icon left"
        >
          <span
            className="c4"
            color="currentColor"
            size="1em"
          >
            <svg
              aria-hidden={true}
              className="farmblocks-icon "
              height={18}
              viewBox="2 2 20 20"
              width={18}
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M10 3a7 7 0 104.201 12.6l.009.013.083.094 5 5a1 1 0 001.497-1.32l-.083-.094-5-5a1.009 1.009 0 00-.108-.094A7 7 0 0010 3zm0 2a5 5 0 110 10 5 5 0 010-10z"
                fill="currentColor"
                fillRule="evenodd"
              />
            </svg>
          </span>
        </div>
        <input
          className="wrapped "
          data-testid="search-input"
          disabled={true}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          type="search"
          value=""
        />
        
      </div>
      <label
        className="c5 label"
        disabled={true}
      >
        Fruits
      </label>
    </div>
  </div>
</div>
`;

exports[`Storyshots Search Field extended style 1`] = `
.c5 {
  display: inline-block;
  vertical-align: text-bottom;
}

.c5 .farmblocks-icon {
  display: block;
}

.c6 {
  font-family: Lato,sans-serif;
  font-size: 16px;
  font-weight: 600;
  line-height: 1.5;
  color: #2f313a;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-bottom: 24px;
  font-family: Lato,sans-serif;
  font-size: 16px;
}

.c4 > .input {
  -webkit-order: 2;
  -ms-flex-order: 2;
  order: 2;
  box-sizing: border-box;
  border: solid 1px;
  border-radius: 4px;
  border-color: rgba(0,0,0,0.16);
  background-color: #ffffff;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  overflow: auto;
}

.c4 > .input .wrapped {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c4 > .input > input,
.select__search .c4 > .input input {
  padding: 8px 16px;
  line-height: 22px;
}

.c4 > .input > textarea {
  padding: 16px;
}

.c4 > .input input,
.c4 > .input textarea,
.c4 > .input select {
  font-family: inherit;
  font-size: inherit;
}

.c4 > .input > input,
.c4 > .input > textarea,
.select__search .c4 > .input input {
  min-width: 0;
  border: 0;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  outline: none;
  color: #2f313a;
  background: none;
}

.c4 > .input > input::-webkit-input-placeholder,
.c4 > .input > textarea::-webkit-input-placeholder,
.select__search .c4 > .input input::-webkit-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c4 > .input > input::-moz-placeholder,
.c4 > .input > textarea::-moz-placeholder,
.select__search .c4 > .input input::-moz-placeholder {
  color: rgba(0,0,0,0.32);
}

.c4 > .input > input:-ms-input-placeholder,
.c4 > .input > textarea:-ms-input-placeholder,
.select__search .c4 > .input input:-ms-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c4 > .input > input::placeholder,
.c4 > .input > textarea::placeholder,
.select__search .c4 > .input input::placeholder {
  color: rgba(0,0,0,0.32);
}

.c4 > .input > input[type="search"],
.c4 > .input > textarea[type="search"],
.select__search .c4 > .input input[type="search"] {
  -webkit-appearance: none;
  -moz-appearance: none;
}

.c4 > .input > input[type="search"]::-webkit-search-cancel-button,
.c4 > .input > textarea[type="search"]::-webkit-search-cancel-button,
.select__search .c4 > .input input[type="search"]::-webkit-search-cancel-button {
  display: none;
}

.c4 > .input > input[type="search"]::-ms-clear,
.c4 > .input > textarea[type="search"]::-ms-clear,
.select__search .c4 > .input input[type="search"]::-ms-clear {
  width: 0;
  height: 0;
}

.c4 > .input > input[role="combobox"],
.c4 > .input > textarea[role="combobox"],
.select__search .c4 > .input input[role="combobox"] {
  cursor: pointer;
}

.c4 > .input > .icon {
  color: rgba(0,0,0,0.16);
}

.c4 > .input > .icon.left {
  margin-left: 8px;
  margin-right: -8px;
}

.c4 > .input > .icon.right {
  margin-right: 8px;
  margin-left: -8px;
}

.c4 > .input > .clear {
  color: rgba(0,0,0,0.16);
}

.c4 > .input > .clear:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #3498db;
}

.c4 > .input > .clear a {
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
}

.c4 .input.dropdown {
  cursor: pointer;
}

.c4 input[type="number"] {
  -moz-appearance: textfield;
}

.c4 input[type="number"]::-webkit-inner-spin-button,
.c4 input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.c4 .prefix {
  margin-left: 16px;
  margin-right: -8px;
}

.c4 .suffix {
  margin-right: 16px;
  margin-left: -8px;
}

.c4 .prefix,
.c4 .suffix {
  font-family: Lato,sans-serif;
  font-size: 16px;
  color: rgba(0,0,0,0.32);
}

.c4 .label {
  margin-bottom: 8px;
}

.c0 {
  font-family: lato,sans-serif;
  display: inline-block;
  position: relative;
}

.c0 *:focus {
  outline: none;
}

.c3 {
  position: relative;
}

.c3 >:first-child {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.c1 input {
  width: 100%;
  min-width: 0;
}

.c1.selected .input {
  background: #f6f8f9;
  cursor: auto;
}

.c2 {
  background: lightgray;
  padding: 16px;
}

.c2 .input {
  border: inset 2px;
  border-radius: 0;
  box-shadow: none;
}

.c2 .searchInput .clear {
  color: tomato;
}

.c2 .scroll::-webkit-scrollbar-track {
  background: darkgray;
  border: inset 2px;
}

.c2 .scroll::-webkit-scrollbar {
  width: 16px;
}

.c2 .scroll::-webkit-scrollbar-thumb {
  background: lightgray;
  border: outset 2px;
}

.c2 .menu .itemWrapper {
  background: silver;
  color: black;
  border: outset 2px;
}

.c2 .menu .itemWrapper:hover {
  background: navy;
  color: white;
}

<div
  className="c0 c1 c2  "
  style={
    Object {
      "width": 200,
      "zIndex": undefined,
    }
  }
>
  <div
    className="c3"
  >
    <div
      className="c4 searchInput"
      onClick={[Function]}
      type="search"
    >
      <div
        className="input "
      >
        <div
          className="icon left"
        >
          <span
            className="c5"
            color="currentColor"
            size="1em"
          >
            <svg
              aria-hidden={true}
              className="farmblocks-icon "
              height={18}
              viewBox="2 2 20 20"
              width={18}
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M10 3a7 7 0 104.201 12.6l.009.013.083.094 5 5a1 1 0 001.497-1.32l-.083-.094-5-5a1.009 1.009 0 00-.108-.094A7 7 0 0010 3zm0 2a5 5 0 110 10 5 5 0 010-10z"
                fill="currentColor"
                fillRule="evenodd"
              />
            </svg>
          </span>
        </div>
        <input
          className="wrapped "
          data-testid="search-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          type="search"
          value=""
        />
        
      </div>
      <label
        className="c6 label"
      >
        Fruits
      </label>
    </div>
  </div>
</div>
`;

exports[`Storyshots Search Field loading 1`] = `
.c4 {
  display: inline-block;
  vertical-align: text-bottom;
}

.c4 .farmblocks-icon {
  display: block;
}

.c5 {
  font-family: Lato,sans-serif;
  font-size: 16px;
  font-weight: 600;
  line-height: 1.5;
  color: #2f313a;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-bottom: 24px;
  font-family: Lato,sans-serif;
  font-size: 16px;
}

.c3 > .input {
  -webkit-order: 2;
  -ms-flex-order: 2;
  order: 2;
  box-sizing: border-box;
  border: solid 1px;
  border-radius: 4px;
  border-color: rgba(0,0,0,0.16);
  background-color: #ffffff;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  overflow: auto;
}

.c3 > .input .wrapped {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c3 > .input > input,
.select__search .c3 > .input input {
  padding: 8px 16px;
  line-height: 22px;
}

.c3 > .input > textarea {
  padding: 16px;
}

.c3 > .input input,
.c3 > .input textarea,
.c3 > .input select {
  font-family: inherit;
  font-size: inherit;
}

.c3 > .input > input,
.c3 > .input > textarea,
.select__search .c3 > .input input {
  min-width: 0;
  border: 0;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  outline: none;
  color: #2f313a;
  background: none;
}

.c3 > .input > input::-webkit-input-placeholder,
.c3 > .input > textarea::-webkit-input-placeholder,
.select__search .c3 > .input input::-webkit-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input::-moz-placeholder,
.c3 > .input > textarea::-moz-placeholder,
.select__search .c3 > .input input::-moz-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input:-ms-input-placeholder,
.c3 > .input > textarea:-ms-input-placeholder,
.select__search .c3 > .input input:-ms-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input::placeholder,
.c3 > .input > textarea::placeholder,
.select__search .c3 > .input input::placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input[type="search"],
.c3 > .input > textarea[type="search"],
.select__search .c3 > .input input[type="search"] {
  -webkit-appearance: none;
  -moz-appearance: none;
}

.c3 > .input > input[type="search"]::-webkit-search-cancel-button,
.c3 > .input > textarea[type="search"]::-webkit-search-cancel-button,
.select__search .c3 > .input input[type="search"]::-webkit-search-cancel-button {
  display: none;
}

.c3 > .input > input[type="search"]::-ms-clear,
.c3 > .input > textarea[type="search"]::-ms-clear,
.select__search .c3 > .input input[type="search"]::-ms-clear {
  width: 0;
  height: 0;
}

.c3 > .input > input[role="combobox"],
.c3 > .input > textarea[role="combobox"],
.select__search .c3 > .input input[role="combobox"] {
  cursor: pointer;
}

.c3 > .input > .icon {
  color: rgba(0,0,0,0.16);
}

.c3 > .input > .icon.left {
  margin-left: 8px;
  margin-right: -8px;
}

.c3 > .input > .icon.right {
  margin-right: 8px;
  margin-left: -8px;
}

.c3 > .input > .clear {
  color: rgba(0,0,0,0.16);
}

.c3 > .input > .clear:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #3498db;
}

.c3 > .input > .clear a {
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
}

.c3 .input.dropdown {
  cursor: pointer;
}

.c3 input[type="number"] {
  -moz-appearance: textfield;
}

.c3 input[type="number"]::-webkit-inner-spin-button,
.c3 input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.c3 .prefix {
  margin-left: 16px;
  margin-right: -8px;
}

.c3 .suffix {
  margin-right: 16px;
  margin-left: -8px;
}

.c3 .prefix,
.c3 .suffix {
  font-family: Lato,sans-serif;
  font-size: 16px;
  color: rgba(0,0,0,0.32);
}

.c3 .label {
  margin-bottom: 8px;
}

.c0 {
  font-family: lato,sans-serif;
  display: inline-block;
  position: relative;
}

.c0 *:focus {
  outline: none;
}

.c2 {
  position: relative;
}

.c2 >:first-child {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.c1 input {
  width: 100%;
  min-width: 0;
}

.c1.selected .input {
  background: #f6f8f9;
  cursor: auto;
}

<div
  className="c0 c1 undefined  "
  style={
    Object {
      "width": 200,
      "zIndex": undefined,
    }
  }
>
  <div
    className="c2"
  >
    <div
      className="c3 searchInput"
      onClick={[Function]}
      type="search"
    >
      <div
        className="input "
      >
        <div
          className="icon left"
        >
          <span
            className="c4"
            color="currentColor"
            size="1em"
          >
            <svg
              aria-hidden={true}
              className="farmblocks-icon "
              height={18}
              viewBox="2 2 20 20"
              width={18}
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M10 3a7 7 0 104.201 12.6l.009.013.083.094 5 5a1 1 0 001.497-1.32l-.083-.094-5-5a1.009 1.009 0 00-.108-.094A7 7 0 0010 3zm0 2a5 5 0 110 10 5 5 0 010-10z"
                fill="currentColor"
                fillRule="evenodd"
              />
            </svg>
          </span>
        </div>
        <input
          className="wrapped "
          data-testid="search-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          type="search"
          value=""
        />
        
      </div>
      <label
        className="c5 label"
      >
        Fruits
      </label>
    </div>
  </div>
</div>
`;

exports[`Storyshots Search Field onBeforeChange halting 1`] = `
.c4 {
  display: inline-block;
  vertical-align: text-bottom;
}

.c4 .farmblocks-icon {
  display: block;
}

.c5 {
  font-family: Lato,sans-serif;
  font-size: 16px;
  font-weight: 600;
  line-height: 1.5;
  color: #2f313a;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-bottom: 24px;
  font-family: Lato,sans-serif;
  font-size: 16px;
}

.c3 > .input {
  -webkit-order: 2;
  -ms-flex-order: 2;
  order: 2;
  box-sizing: border-box;
  border: solid 1px;
  border-radius: 4px;
  border-color: rgba(0,0,0,0.16);
  background-color: #ffffff;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  overflow: auto;
}

.c3 > .input .wrapped {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c3 > .input > input,
.select__search .c3 > .input input {
  padding: 8px 16px;
  line-height: 22px;
}

.c3 > .input > textarea {
  padding: 16px;
}

.c3 > .input input,
.c3 > .input textarea,
.c3 > .input select {
  font-family: inherit;
  font-size: inherit;
}

.c3 > .input > input,
.c3 > .input > textarea,
.select__search .c3 > .input input {
  min-width: 0;
  border: 0;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  outline: none;
  color: #2f313a;
  background: none;
}

.c3 > .input > input::-webkit-input-placeholder,
.c3 > .input > textarea::-webkit-input-placeholder,
.select__search .c3 > .input input::-webkit-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input::-moz-placeholder,
.c3 > .input > textarea::-moz-placeholder,
.select__search .c3 > .input input::-moz-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input:-ms-input-placeholder,
.c3 > .input > textarea:-ms-input-placeholder,
.select__search .c3 > .input input:-ms-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input::placeholder,
.c3 > .input > textarea::placeholder,
.select__search .c3 > .input input::placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input[type="search"],
.c3 > .input > textarea[type="search"],
.select__search .c3 > .input input[type="search"] {
  -webkit-appearance: none;
  -moz-appearance: none;
}

.c3 > .input > input[type="search"]::-webkit-search-cancel-button,
.c3 > .input > textarea[type="search"]::-webkit-search-cancel-button,
.select__search .c3 > .input input[type="search"]::-webkit-search-cancel-button {
  display: none;
}

.c3 > .input > input[type="search"]::-ms-clear,
.c3 > .input > textarea[type="search"]::-ms-clear,
.select__search .c3 > .input input[type="search"]::-ms-clear {
  width: 0;
  height: 0;
}

.c3 > .input > input[role="combobox"],
.c3 > .input > textarea[role="combobox"],
.select__search .c3 > .input input[role="combobox"] {
  cursor: pointer;
}

.c3 > .input > .icon {
  color: rgba(0,0,0,0.16);
}

.c3 > .input > .icon.left {
  margin-left: 8px;
  margin-right: -8px;
}

.c3 > .input > .icon.right {
  margin-right: 8px;
  margin-left: -8px;
}

.c3 > .input > .clear {
  color: rgba(0,0,0,0.16);
}

.c3 > .input > .clear:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #3498db;
}

.c3 > .input > .clear a {
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
}

.c3 .input.dropdown {
  cursor: pointer;
}

.c3 input[type="number"] {
  -moz-appearance: textfield;
}

.c3 input[type="number"]::-webkit-inner-spin-button,
.c3 input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.c3 .prefix {
  margin-left: 16px;
  margin-right: -8px;
}

.c3 .suffix {
  margin-right: 16px;
  margin-left: -8px;
}

.c3 .prefix,
.c3 .suffix {
  font-family: Lato,sans-serif;
  font-size: 16px;
  color: rgba(0,0,0,0.32);
}

.c3 .label {
  margin-bottom: 8px;
}

.c0 {
  font-family: lato,sans-serif;
  display: inline-block;
  position: relative;
}

.c0 *:focus {
  outline: none;
}

.c2 {
  position: relative;
}

.c2 >:first-child {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.c1 input {
  width: 100%;
  min-width: 0;
}

.c1.selected .input {
  background: #f6f8f9;
  cursor: auto;
}

<div
  className="c0 c1 undefined  "
  style={
    Object {
      "width": 200,
      "zIndex": undefined,
    }
  }
>
  <div
    className="c2"
  >
    <div
      className="c3 searchInput"
      onClick={[Function]}
      type="search"
    >
      <div
        className="input "
      >
        <div
          className="icon left"
        >
          <span
            className="c4"
            color="currentColor"
            size="1em"
          >
            <svg
              aria-hidden={true}
              className="farmblocks-icon "
              height={18}
              viewBox="2 2 20 20"
              width={18}
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M10 3a7 7 0 104.201 12.6l.009.013.083.094 5 5a1 1 0 001.497-1.32l-.083-.094-5-5a1.009 1.009 0 00-.108-.094A7 7 0 0010 3zm0 2a5 5 0 110 10 5 5 0 010-10z"
                fill="currentColor"
                fillRule="evenodd"
              />
            </svg>
          </span>
        </div>
        <input
          className="wrapped "
          data-testid="search-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          type="search"
          value=""
        />
        
      </div>
      <label
        className="c5 label"
      >
        Fruits
      </label>
    </div>
  </div>
</div>
`;

exports[`Storyshots Search Field onBeforeChange manipulating input 1`] = `
.c4 {
  display: inline-block;
  vertical-align: text-bottom;
}

.c4 .farmblocks-icon {
  display: block;
}

.c5 {
  font-family: Lato,sans-serif;
  font-size: 16px;
  font-weight: 600;
  line-height: 1.5;
  color: #2f313a;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-bottom: 24px;
  font-family: Lato,sans-serif;
  font-size: 16px;
}

.c3 > .input {
  -webkit-order: 2;
  -ms-flex-order: 2;
  order: 2;
  box-sizing: border-box;
  border: solid 1px;
  border-radius: 4px;
  border-color: rgba(0,0,0,0.16);
  background-color: #ffffff;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  overflow: auto;
}

.c3 > .input .wrapped {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c3 > .input > input,
.select__search .c3 > .input input {
  padding: 8px 16px;
  line-height: 22px;
}

.c3 > .input > textarea {
  padding: 16px;
}

.c3 > .input input,
.c3 > .input textarea,
.c3 > .input select {
  font-family: inherit;
  font-size: inherit;
}

.c3 > .input > input,
.c3 > .input > textarea,
.select__search .c3 > .input input {
  min-width: 0;
  border: 0;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  outline: none;
  color: #2f313a;
  background: none;
}

.c3 > .input > input::-webkit-input-placeholder,
.c3 > .input > textarea::-webkit-input-placeholder,
.select__search .c3 > .input input::-webkit-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input::-moz-placeholder,
.c3 > .input > textarea::-moz-placeholder,
.select__search .c3 > .input input::-moz-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input:-ms-input-placeholder,
.c3 > .input > textarea:-ms-input-placeholder,
.select__search .c3 > .input input:-ms-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input::placeholder,
.c3 > .input > textarea::placeholder,
.select__search .c3 > .input input::placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input[type="search"],
.c3 > .input > textarea[type="search"],
.select__search .c3 > .input input[type="search"] {
  -webkit-appearance: none;
  -moz-appearance: none;
}

.c3 > .input > input[type="search"]::-webkit-search-cancel-button,
.c3 > .input > textarea[type="search"]::-webkit-search-cancel-button,
.select__search .c3 > .input input[type="search"]::-webkit-search-cancel-button {
  display: none;
}

.c3 > .input > input[type="search"]::-ms-clear,
.c3 > .input > textarea[type="search"]::-ms-clear,
.select__search .c3 > .input input[type="search"]::-ms-clear {
  width: 0;
  height: 0;
}

.c3 > .input > input[role="combobox"],
.c3 > .input > textarea[role="combobox"],
.select__search .c3 > .input input[role="combobox"] {
  cursor: pointer;
}

.c3 > .input > .icon {
  color: rgba(0,0,0,0.16);
}

.c3 > .input > .icon.left {
  margin-left: 8px;
  margin-right: -8px;
}

.c3 > .input > .icon.right {
  margin-right: 8px;
  margin-left: -8px;
}

.c3 > .input > .clear {
  color: rgba(0,0,0,0.16);
}

.c3 > .input > .clear:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #3498db;
}

.c3 > .input > .clear a {
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
}

.c3 .input.dropdown {
  cursor: pointer;
}

.c3 input[type="number"] {
  -moz-appearance: textfield;
}

.c3 input[type="number"]::-webkit-inner-spin-button,
.c3 input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.c3 .prefix {
  margin-left: 16px;
  margin-right: -8px;
}

.c3 .suffix {
  margin-right: 16px;
  margin-left: -8px;
}

.c3 .prefix,
.c3 .suffix {
  font-family: Lato,sans-serif;
  font-size: 16px;
  color: rgba(0,0,0,0.32);
}

.c3 .label {
  margin-bottom: 8px;
}

.c0 {
  font-family: lato,sans-serif;
  display: inline-block;
  position: relative;
}

.c0 *:focus {
  outline: none;
}

.c2 {
  position: relative;
}

.c2 >:first-child {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.c1 input {
  width: 100%;
  min-width: 0;
}

.c1.selected .input {
  background: #f6f8f9;
  cursor: auto;
}

<div
  className="c0 c1 undefined  "
  style={
    Object {
      "width": 200,
      "zIndex": undefined,
    }
  }
>
  <div
    className="c2"
  >
    <div
      className="c3 searchInput"
      onClick={[Function]}
      type="search"
    >
      <div
        className="input "
      >
        <div
          className="icon left"
        >
          <span
            className="c4"
            color="currentColor"
            size="1em"
          >
            <svg
              aria-hidden={true}
              className="farmblocks-icon "
              height={18}
              viewBox="2 2 20 20"
              width={18}
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M10 3a7 7 0 104.201 12.6l.009.013.083.094 5 5a1 1 0 001.497-1.32l-.083-.094-5-5a1.009 1.009 0 00-.108-.094A7 7 0 0010 3zm0 2a5 5 0 110 10 5 5 0 010-10z"
                fill="currentColor"
                fillRule="evenodd"
              />
            </svg>
          </span>
        </div>
        <input
          className="wrapped "
          data-testid="search-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          type="search"
          value=""
        />
        
      </div>
      <label
        className="c5 label"
      >
        Fruits
      </label>
    </div>
  </div>
</div>
`;

exports[`Storyshots Search Field onBeforeChange proceeding 1`] = `
.c4 {
  display: inline-block;
  vertical-align: text-bottom;
}

.c4 .farmblocks-icon {
  display: block;
}

.c5 {
  font-family: Lato,sans-serif;
  font-size: 16px;
  font-weight: 600;
  line-height: 1.5;
  color: #2f313a;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-bottom: 24px;
  font-family: Lato,sans-serif;
  font-size: 16px;
}

.c3 > .input {
  -webkit-order: 2;
  -ms-flex-order: 2;
  order: 2;
  box-sizing: border-box;
  border: solid 1px;
  border-radius: 4px;
  border-color: rgba(0,0,0,0.16);
  background-color: #ffffff;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  overflow: auto;
}

.c3 > .input .wrapped {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c3 > .input > input,
.select__search .c3 > .input input {
  padding: 8px 16px;
  line-height: 22px;
}

.c3 > .input > textarea {
  padding: 16px;
}

.c3 > .input input,
.c3 > .input textarea,
.c3 > .input select {
  font-family: inherit;
  font-size: inherit;
}

.c3 > .input > input,
.c3 > .input > textarea,
.select__search .c3 > .input input {
  min-width: 0;
  border: 0;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  outline: none;
  color: #2f313a;
  background: none;
}

.c3 > .input > input::-webkit-input-placeholder,
.c3 > .input > textarea::-webkit-input-placeholder,
.select__search .c3 > .input input::-webkit-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input::-moz-placeholder,
.c3 > .input > textarea::-moz-placeholder,
.select__search .c3 > .input input::-moz-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input:-ms-input-placeholder,
.c3 > .input > textarea:-ms-input-placeholder,
.select__search .c3 > .input input:-ms-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input::placeholder,
.c3 > .input > textarea::placeholder,
.select__search .c3 > .input input::placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input[type="search"],
.c3 > .input > textarea[type="search"],
.select__search .c3 > .input input[type="search"] {
  -webkit-appearance: none;
  -moz-appearance: none;
}

.c3 > .input > input[type="search"]::-webkit-search-cancel-button,
.c3 > .input > textarea[type="search"]::-webkit-search-cancel-button,
.select__search .c3 > .input input[type="search"]::-webkit-search-cancel-button {
  display: none;
}

.c3 > .input > input[type="search"]::-ms-clear,
.c3 > .input > textarea[type="search"]::-ms-clear,
.select__search .c3 > .input input[type="search"]::-ms-clear {
  width: 0;
  height: 0;
}

.c3 > .input > input[role="combobox"],
.c3 > .input > textarea[role="combobox"],
.select__search .c3 > .input input[role="combobox"] {
  cursor: pointer;
}

.c3 > .input > .icon {
  color: rgba(0,0,0,0.16);
}

.c3 > .input > .icon.left {
  margin-left: 8px;
  margin-right: -8px;
}

.c3 > .input > .icon.right {
  margin-right: 8px;
  margin-left: -8px;
}

.c3 > .input > .clear {
  color: rgba(0,0,0,0.16);
}

.c3 > .input > .clear:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #3498db;
}

.c3 > .input > .clear a {
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
}

.c3 .input.dropdown {
  cursor: pointer;
}

.c3 input[type="number"] {
  -moz-appearance: textfield;
}

.c3 input[type="number"]::-webkit-inner-spin-button,
.c3 input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.c3 .prefix {
  margin-left: 16px;
  margin-right: -8px;
}

.c3 .suffix {
  margin-right: 16px;
  margin-left: -8px;
}

.c3 .prefix,
.c3 .suffix {
  font-family: Lato,sans-serif;
  font-size: 16px;
  color: rgba(0,0,0,0.32);
}

.c3 .label {
  margin-bottom: 8px;
}

.c0 {
  font-family: lato,sans-serif;
  display: inline-block;
  position: relative;
}

.c0 *:focus {
  outline: none;
}

.c2 {
  position: relative;
}

.c2 >:first-child {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.c1 input {
  width: 100%;
  min-width: 0;
}

.c1.selected .input {
  background: #f6f8f9;
  cursor: auto;
}

<div
  className="c0 c1 undefined  "
  style={
    Object {
      "width": 200,
      "zIndex": undefined,
    }
  }
>
  <div
    className="c2"
  >
    <div
      className="c3 searchInput"
      onClick={[Function]}
      type="search"
    >
      <div
        className="input "
      >
        <div
          className="icon left"
        >
          <span
            className="c4"
            color="currentColor"
            size="1em"
          >
            <svg
              aria-hidden={true}
              className="farmblocks-icon "
              height={18}
              viewBox="2 2 20 20"
              width={18}
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M10 3a7 7 0 104.201 12.6l.009.013.083.094 5 5a1 1 0 001.497-1.32l-.083-.094-5-5a1.009 1.009 0 00-.108-.094A7 7 0 0010 3zm0 2a5 5 0 110 10 5 5 0 010-10z"
                fill="currentColor"
                fillRule="evenodd"
              />
            </svg>
          </span>
        </div>
        <input
          className="wrapped "
          data-testid="search-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          type="search"
          value=""
        />
        
      </div>
      <label
        className="c5 label"
      >
        Fruits
      </label>
    </div>
  </div>
</div>
`;

exports[`Storyshots Search Field onChange 1`] = `
.c4 {
  display: inline-block;
  vertical-align: text-bottom;
}

.c4 .farmblocks-icon {
  display: block;
}

.c5 {
  font-family: Lato,sans-serif;
  font-size: 16px;
  font-weight: 600;
  line-height: 1.5;
  color: #2f313a;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-bottom: 24px;
  font-family: Lato,sans-serif;
  font-size: 16px;
}

.c3 > .input {
  -webkit-order: 2;
  -ms-flex-order: 2;
  order: 2;
  box-sizing: border-box;
  border: solid 1px;
  border-radius: 4px;
  border-color: rgba(0,0,0,0.16);
  background-color: #ffffff;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  overflow: auto;
}

.c3 > .input .wrapped {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c3 > .input > input,
.select__search .c3 > .input input {
  padding: 8px 16px;
  line-height: 22px;
}

.c3 > .input > textarea {
  padding: 16px;
}

.c3 > .input input,
.c3 > .input textarea,
.c3 > .input select {
  font-family: inherit;
  font-size: inherit;
}

.c3 > .input > input,
.c3 > .input > textarea,
.select__search .c3 > .input input {
  min-width: 0;
  border: 0;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  outline: none;
  color: #2f313a;
  background: none;
}

.c3 > .input > input::-webkit-input-placeholder,
.c3 > .input > textarea::-webkit-input-placeholder,
.select__search .c3 > .input input::-webkit-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input::-moz-placeholder,
.c3 > .input > textarea::-moz-placeholder,
.select__search .c3 > .input input::-moz-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input:-ms-input-placeholder,
.c3 > .input > textarea:-ms-input-placeholder,
.select__search .c3 > .input input:-ms-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input::placeholder,
.c3 > .input > textarea::placeholder,
.select__search .c3 > .input input::placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input[type="search"],
.c3 > .input > textarea[type="search"],
.select__search .c3 > .input input[type="search"] {
  -webkit-appearance: none;
  -moz-appearance: none;
}

.c3 > .input > input[type="search"]::-webkit-search-cancel-button,
.c3 > .input > textarea[type="search"]::-webkit-search-cancel-button,
.select__search .c3 > .input input[type="search"]::-webkit-search-cancel-button {
  display: none;
}

.c3 > .input > input[type="search"]::-ms-clear,
.c3 > .input > textarea[type="search"]::-ms-clear,
.select__search .c3 > .input input[type="search"]::-ms-clear {
  width: 0;
  height: 0;
}

.c3 > .input > input[role="combobox"],
.c3 > .input > textarea[role="combobox"],
.select__search .c3 > .input input[role="combobox"] {
  cursor: pointer;
}

.c3 > .input > .icon {
  color: rgba(0,0,0,0.16);
}

.c3 > .input > .icon.left {
  margin-left: 8px;
  margin-right: -8px;
}

.c3 > .input > .icon.right {
  margin-right: 8px;
  margin-left: -8px;
}

.c3 > .input > .clear {
  color: rgba(0,0,0,0.16);
}

.c3 > .input > .clear:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #3498db;
}

.c3 > .input > .clear a {
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
}

.c3 .input.dropdown {
  cursor: pointer;
}

.c3 input[type="number"] {
  -moz-appearance: textfield;
}

.c3 input[type="number"]::-webkit-inner-spin-button,
.c3 input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.c3 .prefix {
  margin-left: 16px;
  margin-right: -8px;
}

.c3 .suffix {
  margin-right: 16px;
  margin-left: -8px;
}

.c3 .prefix,
.c3 .suffix {
  font-family: Lato,sans-serif;
  font-size: 16px;
  color: rgba(0,0,0,0.32);
}

.c3 .label {
  margin-bottom: 8px;
}

.c0 {
  font-family: lato,sans-serif;
  display: inline-block;
  position: relative;
}

.c0 *:focus {
  outline: none;
}

.c2 {
  position: relative;
}

.c2 >:first-child {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.c1 input {
  width: 100%;
  min-width: 0;
}

.c1.selected .input {
  background: #f6f8f9;
  cursor: auto;
}

<div
  className="c0 c1 undefined  "
  style={
    Object {
      "width": 200,
      "zIndex": undefined,
    }
  }
>
  <div
    className="c2"
  >
    <div
      className="c3 searchInput"
      onClick={[Function]}
      type="search"
    >
      <div
        className="input "
      >
        <div
          className="icon left"
        >
          <span
            className="c4"
            color="currentColor"
            size="1em"
          >
            <svg
              aria-hidden={true}
              className="farmblocks-icon "
              height={18}
              viewBox="2 2 20 20"
              width={18}
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M10 3a7 7 0 104.201 12.6l.009.013.083.094 5 5a1 1 0 001.497-1.32l-.083-.094-5-5a1.009 1.009 0 00-.108-.094A7 7 0 0010 3zm0 2a5 5 0 110 10 5 5 0 010-10z"
                fill="currentColor"
                fillRule="evenodd"
              />
            </svg>
          </span>
        </div>
        <input
          className="wrapped "
          data-testid="search-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          type="search"
          value=""
        />
        
      </div>
      <label
        className="c5 label"
      >
        Fruits
      </label>
    </div>
  </div>
</div>
`;

exports[`Storyshots Search Field onScrollReachEnd 1`] = `
.c4 {
  display: inline-block;
  vertical-align: text-bottom;
}

.c4 .farmblocks-icon {
  display: block;
}

.c5 {
  font-family: Lato,sans-serif;
  font-size: 16px;
  font-weight: 600;
  line-height: 1.5;
  color: #2f313a;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-bottom: 24px;
  font-family: Lato,sans-serif;
  font-size: 16px;
}

.c3 > .input {
  -webkit-order: 2;
  -ms-flex-order: 2;
  order: 2;
  box-sizing: border-box;
  border: solid 1px;
  border-radius: 4px;
  border-color: rgba(0,0,0,0.16);
  background-color: #ffffff;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  overflow: auto;
}

.c3 > .input .wrapped {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c3 > .input > input,
.select__search .c3 > .input input {
  padding: 8px 16px;
  line-height: 22px;
}

.c3 > .input > textarea {
  padding: 16px;
}

.c3 > .input input,
.c3 > .input textarea,
.c3 > .input select {
  font-family: inherit;
  font-size: inherit;
}

.c3 > .input > input,
.c3 > .input > textarea,
.select__search .c3 > .input input {
  min-width: 0;
  border: 0;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  outline: none;
  color: #2f313a;
  background: none;
}

.c3 > .input > input::-webkit-input-placeholder,
.c3 > .input > textarea::-webkit-input-placeholder,
.select__search .c3 > .input input::-webkit-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input::-moz-placeholder,
.c3 > .input > textarea::-moz-placeholder,
.select__search .c3 > .input input::-moz-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input:-ms-input-placeholder,
.c3 > .input > textarea:-ms-input-placeholder,
.select__search .c3 > .input input:-ms-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input::placeholder,
.c3 > .input > textarea::placeholder,
.select__search .c3 > .input input::placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input[type="search"],
.c3 > .input > textarea[type="search"],
.select__search .c3 > .input input[type="search"] {
  -webkit-appearance: none;
  -moz-appearance: none;
}

.c3 > .input > input[type="search"]::-webkit-search-cancel-button,
.c3 > .input > textarea[type="search"]::-webkit-search-cancel-button,
.select__search .c3 > .input input[type="search"]::-webkit-search-cancel-button {
  display: none;
}

.c3 > .input > input[type="search"]::-ms-clear,
.c3 > .input > textarea[type="search"]::-ms-clear,
.select__search .c3 > .input input[type="search"]::-ms-clear {
  width: 0;
  height: 0;
}

.c3 > .input > input[role="combobox"],
.c3 > .input > textarea[role="combobox"],
.select__search .c3 > .input input[role="combobox"] {
  cursor: pointer;
}

.c3 > .input > .icon {
  color: rgba(0,0,0,0.16);
}

.c3 > .input > .icon.left {
  margin-left: 8px;
  margin-right: -8px;
}

.c3 > .input > .icon.right {
  margin-right: 8px;
  margin-left: -8px;
}

.c3 > .input > .clear {
  color: rgba(0,0,0,0.16);
}

.c3 > .input > .clear:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #3498db;
}

.c3 > .input > .clear a {
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
}

.c3 .input.dropdown {
  cursor: pointer;
}

.c3 input[type="number"] {
  -moz-appearance: textfield;
}

.c3 input[type="number"]::-webkit-inner-spin-button,
.c3 input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.c3 .prefix {
  margin-left: 16px;
  margin-right: -8px;
}

.c3 .suffix {
  margin-right: 16px;
  margin-left: -8px;
}

.c3 .prefix,
.c3 .suffix {
  font-family: Lato,sans-serif;
  font-size: 16px;
  color: rgba(0,0,0,0.32);
}

.c3 .label {
  margin-bottom: 8px;
}

.c0 {
  font-family: lato,sans-serif;
  display: inline-block;
  position: relative;
}

.c0 *:focus {
  outline: none;
}

.c2 {
  position: relative;
}

.c2 >:first-child {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.c1 input {
  width: 100%;
  min-width: 0;
}

.c1.selected .input {
  background: #f6f8f9;
  cursor: auto;
}

<div
  className="c0 c1 undefined  "
  style={
    Object {
      "width": 200,
      "zIndex": undefined,
    }
  }
>
  <div
    className="c2"
  >
    <div
      className="c3 searchInput"
      onClick={[Function]}
      type="search"
    >
      <div
        className="input "
      >
        <div
          className="icon left"
        >
          <span
            className="c4"
            color="currentColor"
            size="1em"
          >
            <svg
              aria-hidden={true}
              className="farmblocks-icon "
              height={18}
              viewBox="2 2 20 20"
              width={18}
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M10 3a7 7 0 104.201 12.6l.009.013.083.094 5 5a1 1 0 001.497-1.32l-.083-.094-5-5a1.009 1.009 0 00-.108-.094A7 7 0 0010 3zm0 2a5 5 0 110 10 5 5 0 010-10z"
                fill="currentColor"
                fillRule="evenodd"
              />
            </svg>
          </span>
        </div>
        <input
          className="wrapped "
          data-testid="search-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          type="search"
          value=""
        />
        
      </div>
      <label
        className="c5 label"
      >
        Fruits
      </label>
    </div>
  </div>
</div>
`;

exports[`Storyshots Search Field onSearchChange (debounced) 1`] = `
.c4 {
  display: inline-block;
  vertical-align: text-bottom;
}

.c4 .farmblocks-icon {
  display: block;
}

.c5 {
  font-family: Lato,sans-serif;
  font-size: 16px;
  font-weight: 600;
  line-height: 1.5;
  color: #2f313a;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-bottom: 24px;
  font-family: Lato,sans-serif;
  font-size: 16px;
}

.c3 > .input {
  -webkit-order: 2;
  -ms-flex-order: 2;
  order: 2;
  box-sizing: border-box;
  border: solid 1px;
  border-radius: 4px;
  border-color: rgba(0,0,0,0.16);
  background-color: #ffffff;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  overflow: auto;
}

.c3 > .input .wrapped {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c3 > .input > input,
.select__search .c3 > .input input {
  padding: 8px 16px;
  line-height: 22px;
}

.c3 > .input > textarea {
  padding: 16px;
}

.c3 > .input input,
.c3 > .input textarea,
.c3 > .input select {
  font-family: inherit;
  font-size: inherit;
}

.c3 > .input > input,
.c3 > .input > textarea,
.select__search .c3 > .input input {
  min-width: 0;
  border: 0;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  outline: none;
  color: #2f313a;
  background: none;
}

.c3 > .input > input::-webkit-input-placeholder,
.c3 > .input > textarea::-webkit-input-placeholder,
.select__search .c3 > .input input::-webkit-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input::-moz-placeholder,
.c3 > .input > textarea::-moz-placeholder,
.select__search .c3 > .input input::-moz-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input:-ms-input-placeholder,
.c3 > .input > textarea:-ms-input-placeholder,
.select__search .c3 > .input input:-ms-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input::placeholder,
.c3 > .input > textarea::placeholder,
.select__search .c3 > .input input::placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input[type="search"],
.c3 > .input > textarea[type="search"],
.select__search .c3 > .input input[type="search"] {
  -webkit-appearance: none;
  -moz-appearance: none;
}

.c3 > .input > input[type="search"]::-webkit-search-cancel-button,
.c3 > .input > textarea[type="search"]::-webkit-search-cancel-button,
.select__search .c3 > .input input[type="search"]::-webkit-search-cancel-button {
  display: none;
}

.c3 > .input > input[type="search"]::-ms-clear,
.c3 > .input > textarea[type="search"]::-ms-clear,
.select__search .c3 > .input input[type="search"]::-ms-clear {
  width: 0;
  height: 0;
}

.c3 > .input > input[role="combobox"],
.c3 > .input > textarea[role="combobox"],
.select__search .c3 > .input input[role="combobox"] {
  cursor: pointer;
}

.c3 > .input > .icon {
  color: rgba(0,0,0,0.16);
}

.c3 > .input > .icon.left {
  margin-left: 8px;
  margin-right: -8px;
}

.c3 > .input > .icon.right {
  margin-right: 8px;
  margin-left: -8px;
}

.c3 > .input > .clear {
  color: rgba(0,0,0,0.16);
}

.c3 > .input > .clear:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #3498db;
}

.c3 > .input > .clear a {
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
}

.c3 .input.dropdown {
  cursor: pointer;
}

.c3 input[type="number"] {
  -moz-appearance: textfield;
}

.c3 input[type="number"]::-webkit-inner-spin-button,
.c3 input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.c3 .prefix {
  margin-left: 16px;
  margin-right: -8px;
}

.c3 .suffix {
  margin-right: 16px;
  margin-left: -8px;
}

.c3 .prefix,
.c3 .suffix {
  font-family: Lato,sans-serif;
  font-size: 16px;
  color: rgba(0,0,0,0.32);
}

.c3 .label {
  margin-bottom: 8px;
}

.c0 {
  font-family: lato,sans-serif;
  display: inline-block;
  position: relative;
}

.c0 *:focus {
  outline: none;
}

.c2 {
  position: relative;
}

.c2 >:first-child {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.c1 input {
  width: 100%;
  min-width: 0;
}

.c1.selected .input {
  background: #f6f8f9;
  cursor: auto;
}

<div
  className="c0 c1 undefined  "
  style={
    Object {
      "width": 200,
      "zIndex": undefined,
    }
  }
>
  <div
    className="c2"
  >
    <div
      className="c3 searchInput"
      onClick={[Function]}
      type="search"
    >
      <div
        className="input "
      >
        <div
          className="icon left"
        >
          <span
            className="c4"
            color="currentColor"
            size="1em"
          >
            <svg
              aria-hidden={true}
              className="farmblocks-icon "
              height={18}
              viewBox="2 2 20 20"
              width={18}
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M10 3a7 7 0 104.201 12.6l.009.013.083.094 5 5a1 1 0 001.497-1.32l-.083-.094-5-5a1.009 1.009 0 00-.108-.094A7 7 0 0010 3zm0 2a5 5 0 110 10 5 5 0 010-10z"
                fill="currentColor"
                fillRule="evenodd"
              />
            </svg>
          </span>
        </div>
        <input
          className="wrapped "
          data-testid="search-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          type="search"
          value=""
        />
        
      </div>
      <label
        className="c5 label"
      >
        Fruits
      </label>
    </div>
  </div>
</div>
`;

exports[`Storyshots Search Field onSearchChange + onChange + custom keys 1`] = `
.c4 {
  display: inline-block;
  vertical-align: text-bottom;
}

.c4 .farmblocks-icon {
  display: block;
}

.c5 {
  font-family: Lato,sans-serif;
  font-size: 16px;
  font-weight: 600;
  line-height: 1.5;
  color: #2f313a;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-bottom: 24px;
  font-family: Lato,sans-serif;
  font-size: 16px;
}

.c3 > .input {
  -webkit-order: 2;
  -ms-flex-order: 2;
  order: 2;
  box-sizing: border-box;
  border: solid 1px;
  border-radius: 4px;
  border-color: rgba(0,0,0,0.16);
  background-color: #ffffff;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  overflow: auto;
}

.c3 > .input .wrapped {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c3 > .input > input,
.select__search .c3 > .input input {
  padding: 8px 16px;
  line-height: 22px;
}

.c3 > .input > textarea {
  padding: 16px;
}

.c3 > .input input,
.c3 > .input textarea,
.c3 > .input select {
  font-family: inherit;
  font-size: inherit;
}

.c3 > .input > input,
.c3 > .input > textarea,
.select__search .c3 > .input input {
  min-width: 0;
  border: 0;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  outline: none;
  color: #2f313a;
  background: none;
}

.c3 > .input > input::-webkit-input-placeholder,
.c3 > .input > textarea::-webkit-input-placeholder,
.select__search .c3 > .input input::-webkit-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input::-moz-placeholder,
.c3 > .input > textarea::-moz-placeholder,
.select__search .c3 > .input input::-moz-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input:-ms-input-placeholder,
.c3 > .input > textarea:-ms-input-placeholder,
.select__search .c3 > .input input:-ms-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input::placeholder,
.c3 > .input > textarea::placeholder,
.select__search .c3 > .input input::placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input[type="search"],
.c3 > .input > textarea[type="search"],
.select__search .c3 > .input input[type="search"] {
  -webkit-appearance: none;
  -moz-appearance: none;
}

.c3 > .input > input[type="search"]::-webkit-search-cancel-button,
.c3 > .input > textarea[type="search"]::-webkit-search-cancel-button,
.select__search .c3 > .input input[type="search"]::-webkit-search-cancel-button {
  display: none;
}

.c3 > .input > input[type="search"]::-ms-clear,
.c3 > .input > textarea[type="search"]::-ms-clear,
.select__search .c3 > .input input[type="search"]::-ms-clear {
  width: 0;
  height: 0;
}

.c3 > .input > input[role="combobox"],
.c3 > .input > textarea[role="combobox"],
.select__search .c3 > .input input[role="combobox"] {
  cursor: pointer;
}

.c3 > .input > .icon {
  color: rgba(0,0,0,0.16);
}

.c3 > .input > .icon.left {
  margin-left: 8px;
  margin-right: -8px;
}

.c3 > .input > .icon.right {
  margin-right: 8px;
  margin-left: -8px;
}

.c3 > .input > .clear {
  color: rgba(0,0,0,0.16);
}

.c3 > .input > .clear:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #3498db;
}

.c3 > .input > .clear a {
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
}

.c3 .input.dropdown {
  cursor: pointer;
}

.c3 input[type="number"] {
  -moz-appearance: textfield;
}

.c3 input[type="number"]::-webkit-inner-spin-button,
.c3 input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.c3 .prefix {
  margin-left: 16px;
  margin-right: -8px;
}

.c3 .suffix {
  margin-right: 16px;
  margin-left: -8px;
}

.c3 .prefix,
.c3 .suffix {
  font-family: Lato,sans-serif;
  font-size: 16px;
  color: rgba(0,0,0,0.32);
}

.c3 .label {
  margin-bottom: 8px;
}

.c0 {
  font-family: lato,sans-serif;
  display: inline-block;
  position: relative;
}

.c0 *:focus {
  outline: none;
}

.c2 {
  position: relative;
}

.c2 >:first-child {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.c1 input {
  width: 100%;
  min-width: 0;
}

.c1.selected .input {
  background: #f6f8f9;
  cursor: auto;
}

<div
  className="c0 c1 undefined  "
  style={
    Object {
      "width": 200,
      "zIndex": undefined,
    }
  }
>
  <div
    className="c2"
  >
    <div
      className="c3 searchInput"
      onClick={[Function]}
      type="search"
    >
      <div
        className="input "
      >
        <div
          className="icon left"
        >
          <span
            className="c4"
            color="currentColor"
            size="1em"
          >
            <svg
              aria-hidden={true}
              className="farmblocks-icon "
              height={18}
              viewBox="2 2 20 20"
              width={18}
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M10 3a7 7 0 104.201 12.6l.009.013.083.094 5 5a1 1 0 001.497-1.32l-.083-.094-5-5a1.009 1.009 0 00-.108-.094A7 7 0 0010 3zm0 2a5 5 0 110 10 5 5 0 010-10z"
                fill="currentColor"
                fillRule="evenodd"
              />
            </svg>
          </span>
        </div>
        <input
          className="wrapped "
          data-testid="search-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          type="search"
          value=""
        />
        
      </div>
      <label
        className="c5 label"
      >
        Fruits
      </label>
    </div>
  </div>
</div>
`;

exports[`Storyshots Search Field onSearchChange + onChange 1`] = `
.c4 {
  display: inline-block;
  vertical-align: text-bottom;
}

.c4 .farmblocks-icon {
  display: block;
}

.c5 {
  font-family: Lato,sans-serif;
  font-size: 16px;
  font-weight: 600;
  line-height: 1.5;
  color: #2f313a;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-bottom: 24px;
  font-family: Lato,sans-serif;
  font-size: 16px;
}

.c3 > .input {
  -webkit-order: 2;
  -ms-flex-order: 2;
  order: 2;
  box-sizing: border-box;
  border: solid 1px;
  border-radius: 4px;
  border-color: rgba(0,0,0,0.16);
  background-color: #ffffff;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  overflow: auto;
}

.c3 > .input .wrapped {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c3 > .input > input,
.select__search .c3 > .input input {
  padding: 8px 16px;
  line-height: 22px;
}

.c3 > .input > textarea {
  padding: 16px;
}

.c3 > .input input,
.c3 > .input textarea,
.c3 > .input select {
  font-family: inherit;
  font-size: inherit;
}

.c3 > .input > input,
.c3 > .input > textarea,
.select__search .c3 > .input input {
  min-width: 0;
  border: 0;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  outline: none;
  color: #2f313a;
  background: none;
}

.c3 > .input > input::-webkit-input-placeholder,
.c3 > .input > textarea::-webkit-input-placeholder,
.select__search .c3 > .input input::-webkit-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input::-moz-placeholder,
.c3 > .input > textarea::-moz-placeholder,
.select__search .c3 > .input input::-moz-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input:-ms-input-placeholder,
.c3 > .input > textarea:-ms-input-placeholder,
.select__search .c3 > .input input:-ms-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input::placeholder,
.c3 > .input > textarea::placeholder,
.select__search .c3 > .input input::placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input[type="search"],
.c3 > .input > textarea[type="search"],
.select__search .c3 > .input input[type="search"] {
  -webkit-appearance: none;
  -moz-appearance: none;
}

.c3 > .input > input[type="search"]::-webkit-search-cancel-button,
.c3 > .input > textarea[type="search"]::-webkit-search-cancel-button,
.select__search .c3 > .input input[type="search"]::-webkit-search-cancel-button {
  display: none;
}

.c3 > .input > input[type="search"]::-ms-clear,
.c3 > .input > textarea[type="search"]::-ms-clear,
.select__search .c3 > .input input[type="search"]::-ms-clear {
  width: 0;
  height: 0;
}

.c3 > .input > input[role="combobox"],
.c3 > .input > textarea[role="combobox"],
.select__search .c3 > .input input[role="combobox"] {
  cursor: pointer;
}

.c3 > .input > .icon {
  color: rgba(0,0,0,0.16);
}

.c3 > .input > .icon.left {
  margin-left: 8px;
  margin-right: -8px;
}

.c3 > .input > .icon.right {
  margin-right: 8px;
  margin-left: -8px;
}

.c3 > .input > .clear {
  color: rgba(0,0,0,0.16);
}

.c3 > .input > .clear:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #3498db;
}

.c3 > .input > .clear a {
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
}

.c3 .input.dropdown {
  cursor: pointer;
}

.c3 input[type="number"] {
  -moz-appearance: textfield;
}

.c3 input[type="number"]::-webkit-inner-spin-button,
.c3 input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.c3 .prefix {
  margin-left: 16px;
  margin-right: -8px;
}

.c3 .suffix {
  margin-right: 16px;
  margin-left: -8px;
}

.c3 .prefix,
.c3 .suffix {
  font-family: Lato,sans-serif;
  font-size: 16px;
  color: rgba(0,0,0,0.32);
}

.c3 .label {
  margin-bottom: 8px;
}

.c0 {
  font-family: lato,sans-serif;
  display: inline-block;
  position: relative;
}

.c0 *:focus {
  outline: none;
}

.c2 {
  position: relative;
}

.c2 >:first-child {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.c1 input {
  width: 100%;
  min-width: 0;
}

.c1.selected .input {
  background: #f6f8f9;
  cursor: auto;
}

<div
  className="c0 c1 undefined  "
  style={
    Object {
      "width": 200,
      "zIndex": undefined,
    }
  }
>
  <div
    className="c2"
  >
    <div
      className="c3 searchInput"
      onClick={[Function]}
      type="search"
    >
      <div
        className="input "
      >
        <div
          className="icon left"
        >
          <span
            className="c4"
            color="currentColor"
            size="1em"
          >
            <svg
              aria-hidden={true}
              className="farmblocks-icon "
              height={18}
              viewBox="2 2 20 20"
              width={18}
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M10 3a7 7 0 104.201 12.6l.009.013.083.094 5 5a1 1 0 001.497-1.32l-.083-.094-5-5a1.009 1.009 0 00-.108-.094A7 7 0 0010 3zm0 2a5 5 0 110 10 5 5 0 010-10z"
                fill="currentColor"
                fillRule="evenodd"
              />
            </svg>
          </span>
        </div>
        <input
          className="wrapped "
          data-testid="search-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          type="search"
          value=""
        />
        
      </div>
      <label
        className="c5 label"
      >
        Fruits
      </label>
    </div>
  </div>
</div>
`;

exports[`Storyshots Search Field update items and keep value the same 1`] = `
.c4 {
  display: inline-block;
  vertical-align: text-bottom;
}

.c4 .farmblocks-icon {
  display: block;
}

.c5 {
  font-family: Lato,sans-serif;
  display: inline-block;
  position: relative;
  font-size: 16px;
  font-weight: 600;
  line-height: 1;
  -webkit-transition: all 0.3s ease;
  transition: all 0.3s ease;
  cursor: pointer;
  color: #3498db;
}

.c5 span.margin-left {
  margin-left: 4px;
}

.c5 span.margin-right {
  margin-right: 4px;
}

.c5 a {
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c5 a:hover {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.c5 a:hover i {
  display: inline-block;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c5 > a {
  color: inherit;
}

.c5:hover {
  color: #2980b9;
}

.c6 {
  font-family: Lato,sans-serif;
  font-size: 16px;
  font-weight: 600;
  line-height: 1.5;
  color: #2f313a;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-bottom: 24px;
  font-family: Lato,sans-serif;
  font-size: 16px;
}

.c3 > .input {
  -webkit-order: 2;
  -ms-flex-order: 2;
  order: 2;
  box-sizing: border-box;
  border: solid 1px;
  border-radius: 4px;
  border-color: rgba(0,0,0,0.16);
  background-color: #ffffff;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  overflow: auto;
}

.c3 > .input .wrapped {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c3 > .input > input,
.select__search .c3 > .input input {
  padding: 8px 16px;
  line-height: 22px;
}

.c3 > .input > textarea {
  padding: 16px;
}

.c3 > .input input,
.c3 > .input textarea,
.c3 > .input select {
  font-family: inherit;
  font-size: inherit;
}

.c3 > .input > input,
.c3 > .input > textarea,
.select__search .c3 > .input input {
  min-width: 0;
  border: 0;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  outline: none;
  color: #2f313a;
  background: none;
}

.c3 > .input > input::-webkit-input-placeholder,
.c3 > .input > textarea::-webkit-input-placeholder,
.select__search .c3 > .input input::-webkit-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input::-moz-placeholder,
.c3 > .input > textarea::-moz-placeholder,
.select__search .c3 > .input input::-moz-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input:-ms-input-placeholder,
.c3 > .input > textarea:-ms-input-placeholder,
.select__search .c3 > .input input:-ms-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input::placeholder,
.c3 > .input > textarea::placeholder,
.select__search .c3 > .input input::placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input[type="search"],
.c3 > .input > textarea[type="search"],
.select__search .c3 > .input input[type="search"] {
  -webkit-appearance: none;
  -moz-appearance: none;
}

.c3 > .input > input[type="search"]::-webkit-search-cancel-button,
.c3 > .input > textarea[type="search"]::-webkit-search-cancel-button,
.select__search .c3 > .input input[type="search"]::-webkit-search-cancel-button {
  display: none;
}

.c3 > .input > input[type="search"]::-ms-clear,
.c3 > .input > textarea[type="search"]::-ms-clear,
.select__search .c3 > .input input[type="search"]::-ms-clear {
  width: 0;
  height: 0;
}

.c3 > .input > input[role="combobox"],
.c3 > .input > textarea[role="combobox"],
.select__search .c3 > .input input[role="combobox"] {
  cursor: pointer;
}

.c3 > .input > .icon {
  color: rgba(0,0,0,0.16);
}

.c3 > .input > .icon.left {
  margin-left: 8px;
  margin-right: -8px;
}

.c3 > .input > .icon.right {
  margin-right: 8px;
  margin-left: -8px;
}

.c3 > .input > .clear {
  color: rgba(0,0,0,0.16);
}

.c3 > .input > .clear:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #3498db;
}

.c3 > .input > .clear a {
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
}

.c3 .input.dropdown {
  cursor: pointer;
}

.c3 input[type="number"] {
  -moz-appearance: textfield;
}

.c3 input[type="number"]::-webkit-inner-spin-button,
.c3 input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.c3 .prefix {
  margin-left: 16px;
  margin-right: -8px;
}

.c3 .suffix {
  margin-right: 16px;
  margin-left: -8px;
}

.c3 .prefix,
.c3 .suffix {
  font-family: Lato,sans-serif;
  font-size: 16px;
  color: rgba(0,0,0,0.32);
}

.c3 .label {
  margin-bottom: 8px;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  font-family: Lato,sans-serif;
  font-size: 16px;
}

.c7 > .input {
  -webkit-order: 2;
  -ms-flex-order: 2;
  order: 2;
  box-sizing: border-box;
  border: solid 1px;
  border-color: rgba(0,0,0,0.16);
  background-color: #ffffff;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  overflow: auto;
}

.c7 > .input .wrapped {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c7 > .input > input,
.select__search .c7 > .input input {
  padding: 8px 16px;
  line-height: 22px;
}

.c7 > .input > textarea {
  padding: 16px;
}

.c7 > .input input,
.c7 > .input textarea,
.c7 > .input select {
  font-family: inherit;
  font-size: inherit;
}

.c7 > .input > input,
.c7 > .input > textarea,
.select__search .c7 > .input input {
  min-width: 0;
  border: 0;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  outline: none;
  color: #2f313a;
  background: none;
}

.c7 > .input > input::-webkit-input-placeholder,
.c7 > .input > textarea::-webkit-input-placeholder,
.select__search .c7 > .input input::-webkit-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c7 > .input > input::-moz-placeholder,
.c7 > .input > textarea::-moz-placeholder,
.select__search .c7 > .input input::-moz-placeholder {
  color: rgba(0,0,0,0.32);
}

.c7 > .input > input:-ms-input-placeholder,
.c7 > .input > textarea:-ms-input-placeholder,
.select__search .c7 > .input input:-ms-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c7 > .input > input::placeholder,
.c7 > .input > textarea::placeholder,
.select__search .c7 > .input input::placeholder {
  color: rgba(0,0,0,0.32);
}

.c7 > .input > input[type="search"],
.c7 > .input > textarea[type="search"],
.select__search .c7 > .input input[type="search"] {
  -webkit-appearance: none;
  -moz-appearance: none;
}

.c7 > .input > input[type="search"]::-webkit-search-cancel-button,
.c7 > .input > textarea[type="search"]::-webkit-search-cancel-button,
.select__search .c7 > .input input[type="search"]::-webkit-search-cancel-button {
  display: none;
}

.c7 > .input > input[type="search"]::-ms-clear,
.c7 > .input > textarea[type="search"]::-ms-clear,
.select__search .c7 > .input input[type="search"]::-ms-clear {
  width: 0;
  height: 0;
}

.c7 > .input > input[role="combobox"],
.c7 > .input > textarea[role="combobox"],
.select__search .c7 > .input input[role="combobox"] {
  cursor: pointer;
}

.c7 > .input > .icon {
  color: rgba(0,0,0,0.16);
}

.c7 > .input > .icon.left {
  margin-left: 8px;
  margin-right: -8px;
}

.c7 > .input > .icon.right {
  margin-right: 8px;
  margin-left: -8px;
}

.c7 > .input > .clear {
  color: rgba(0,0,0,0.16);
}

.c7 > .input > .clear:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #3498db;
}

.c7 > .input > .clear a {
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
}

.c7 .input.dropdown {
  cursor: pointer;
}

.c7 input[type="number"] {
  -moz-appearance: textfield;
}

.c7 input[type="number"]::-webkit-inner-spin-button,
.c7 input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.c7 .prefix {
  margin-left: 16px;
  margin-right: -8px;
}

.c7 .suffix {
  margin-right: 16px;
  margin-left: -8px;
}

.c7 .prefix,
.c7 .suffix {
  font-family: Lato,sans-serif;
  font-size: 16px;
  color: rgba(0,0,0,0.32);
}

.c7 .label {
  margin-bottom: 8px;
}

.c0 {
  font-family: lato,sans-serif;
  display: inline-block;
  position: relative;
}

.c0 *:focus {
  outline: none;
}

.c8 {
  display: block;
}

.c8 .input {
  position: absolute;
  top: 32px;
  width: 100%;
  height: 40px;
  padding: 8px 16px;
  border-radius: 4px;
  background: #f6f8f9;
  color: #2f313a;
  cursor: auto;
}

.c8 .prefix {
  margin: 0 8px 0 0;
}

.c8 .clear {
  position: absolute;
  right: 8px;
}

.c2 {
  position: relative;
}

.c2 >:first-child {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.c1 input {
  width: 100%;
  min-width: 0;
}

.c1.selected .input {
  background: #f6f8f9;
  cursor: auto;
}

<div>
  <div
    className="c0 c1 undefined protected "
    style={
      Object {
        "width": 200,
        "zIndex": undefined,
      }
    }
  >
    <div
      className="c2"
    >
      <div
        className="c3 searchInput"
        onClick={[Function]}
        type="search"
      >
        <div
          className="input "
        >
          <div
            className="icon left"
          >
            <span
              className="c4"
              color="currentColor"
              size="1em"
            >
              <svg
                aria-hidden={true}
                className="farmblocks-icon "
                height={18}
                viewBox="2 2 20 20"
                width={18}
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M10 3a7 7 0 104.201 12.6l.009.013.083.094 5 5a1 1 0 001.497-1.32l-.083-.094-5-5a1.009 1.009 0 00-.108-.094A7 7 0 0010 3zm0 2a5 5 0 110 10 5 5 0 010-10z"
                  fill="currentColor"
                  fillRule="evenodd"
                />
              </svg>
            </span>
          </div>
          <input
            className="wrapped "
            data-testid="search-input"
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            type="search"
            value="Apple"
          />
          <div
            className="c5 clear icon right"
            disabled={false}
            fontWeight="600"
            size={16}
            type="#3498db"
          >
            <span
              data-testid="input-clear"
              onClick={[Function]}
            >
              <span
                className="c4"
                color="currentColor"
                size="1em"
              >
                <svg
                  aria-hidden={true}
                  className="farmblocks-icon "
                  height={24}
                  viewBox="2 2 20 20"
                  width={24}
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M13.414 12l2.829-2.828a1 1 0 00-1.415-1.415L12 10.586 9.172 7.757a1 1 0 00-1.415 1.415L10.586 12l-2.829 2.828a1 1 0 001.415 1.415L12 13.414l2.828 2.829a1 1 0 001.415-1.415L13.414 12z"
                    fill="currentColor"
                    fillRule="evenodd"
                  />
                </svg>
              </span>
            </span>
          </div>
        </div>
        <label
          className="c6 label"
        >
          Fruits
        </label>
      </div>
      <div
        className="c7 c8 protected-input-cover"
        data-testid="protected-input-cover"
        label="Fruits"
      >
        <div
          className="input"
        >
          Apple
          <div
            className="c5 clear"
            disabled={false}
            fontWeight="600"
            size={16}
            type="#3498db"
          >
            <span
              data-testid="edit-link"
              onClick={[Function]}
              onKeyDown={[Function]}
            >
              <span
                className="c4"
                color="currentColor"
                size="1em"
              >
                <svg
                  aria-hidden={true}
                  className="farmblocks-icon "
                  height="1em"
                  viewBox="2 2 20 20"
                  width="1em"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M15.231 3.293a1 1 0 011.32-.084l.094.084 4.062 4.062a1 1 0 01.083 1.32l-.083.094-10.462 10.462a1 1 0 01-.325.217l-.124.042-5.539 1.476a1 1 0 01-1.247-1.113l.024-.111 1.476-5.538a1 1 0 01.173-.35l.087-.099L15.23 3.293zM13.23 8.12l-6.857 6.858-.962 3.609 3.61-.962 6.857-6.857L13.23 8.12zm2.708-2.708l-1.294 1.294 2.648 2.648 1.293-1.294-2.647-2.648z"
                    fill="currentColor"
                    fillRule="evenodd"
                  />
                </svg>
              </span>
            </span>
          </div>
        </div>
      </div>
    </div>
  </div>
  <br />
  <button
    onClick={[Function]}
    type="button"
  >
    Change items
  </button>
</div>
`;

exports[`Storyshots Search Field update items every 3 seconds 1`] = `
.c4 {
  display: inline-block;
  vertical-align: text-bottom;
}

.c4 .farmblocks-icon {
  display: block;
}

.c5 {
  font-family: Lato,sans-serif;
  font-size: 16px;
  font-weight: 600;
  line-height: 1.5;
  color: #2f313a;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-bottom: 24px;
  font-family: Lato,sans-serif;
  font-size: 16px;
}

.c3 > .input {
  -webkit-order: 2;
  -ms-flex-order: 2;
  order: 2;
  box-sizing: border-box;
  border: solid 1px;
  border-radius: 4px;
  border-color: rgba(0,0,0,0.16);
  background-color: #ffffff;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  overflow: auto;
}

.c3 > .input .wrapped {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c3 > .input > input,
.select__search .c3 > .input input {
  padding: 8px 16px;
  line-height: 22px;
}

.c3 > .input > textarea {
  padding: 16px;
}

.c3 > .input input,
.c3 > .input textarea,
.c3 > .input select {
  font-family: inherit;
  font-size: inherit;
}

.c3 > .input > input,
.c3 > .input > textarea,
.select__search .c3 > .input input {
  min-width: 0;
  border: 0;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  outline: none;
  color: #2f313a;
  background: none;
}

.c3 > .input > input::-webkit-input-placeholder,
.c3 > .input > textarea::-webkit-input-placeholder,
.select__search .c3 > .input input::-webkit-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input::-moz-placeholder,
.c3 > .input > textarea::-moz-placeholder,
.select__search .c3 > .input input::-moz-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input:-ms-input-placeholder,
.c3 > .input > textarea:-ms-input-placeholder,
.select__search .c3 > .input input:-ms-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input::placeholder,
.c3 > .input > textarea::placeholder,
.select__search .c3 > .input input::placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input[type="search"],
.c3 > .input > textarea[type="search"],
.select__search .c3 > .input input[type="search"] {
  -webkit-appearance: none;
  -moz-appearance: none;
}

.c3 > .input > input[type="search"]::-webkit-search-cancel-button,
.c3 > .input > textarea[type="search"]::-webkit-search-cancel-button,
.select__search .c3 > .input input[type="search"]::-webkit-search-cancel-button {
  display: none;
}

.c3 > .input > input[type="search"]::-ms-clear,
.c3 > .input > textarea[type="search"]::-ms-clear,
.select__search .c3 > .input input[type="search"]::-ms-clear {
  width: 0;
  height: 0;
}

.c3 > .input > input[role="combobox"],
.c3 > .input > textarea[role="combobox"],
.select__search .c3 > .input input[role="combobox"] {
  cursor: pointer;
}

.c3 > .input > .icon {
  color: rgba(0,0,0,0.16);
}

.c3 > .input > .icon.left {
  margin-left: 8px;
  margin-right: -8px;
}

.c3 > .input > .icon.right {
  margin-right: 8px;
  margin-left: -8px;
}

.c3 > .input > .clear {
  color: rgba(0,0,0,0.16);
}

.c3 > .input > .clear:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #3498db;
}

.c3 > .input > .clear a {
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
}

.c3 .input.dropdown {
  cursor: pointer;
}

.c3 input[type="number"] {
  -moz-appearance: textfield;
}

.c3 input[type="number"]::-webkit-inner-spin-button,
.c3 input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.c3 .prefix {
  margin-left: 16px;
  margin-right: -8px;
}

.c3 .suffix {
  margin-right: 16px;
  margin-left: -8px;
}

.c3 .prefix,
.c3 .suffix {
  font-family: Lato,sans-serif;
  font-size: 16px;
  color: rgba(0,0,0,0.32);
}

.c3 .label {
  margin-bottom: 8px;
}

.c0 {
  font-family: lato,sans-serif;
  display: inline-block;
  position: relative;
}

.c0 *:focus {
  outline: none;
}

.c2 {
  position: relative;
}

.c2 >:first-child {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.c1 input {
  width: 100%;
  min-width: 0;
}

.c1.selected .input {
  background: #f6f8f9;
  cursor: auto;
}

<div
  className="c0 c1 undefined  "
  style={
    Object {
      "width": 200,
      "zIndex": undefined,
    }
  }
>
  <div
    className="c2"
  >
    <div
      className="c3 searchInput"
      onClick={[Function]}
      type="search"
    >
      <div
        className="input "
      >
        <div
          className="icon left"
        >
          <span
            className="c4"
            color="currentColor"
            size="1em"
          >
            <svg
              aria-hidden={true}
              className="farmblocks-icon "
              height={18}
              viewBox="2 2 20 20"
              width={18}
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M10 3a7 7 0 104.201 12.6l.009.013.083.094 5 5a1 1 0 001.497-1.32l-.083-.094-5-5a1.009 1.009 0 00-.108-.094A7 7 0 0010 3zm0 2a5 5 0 110 10 5 5 0 010-10z"
                fill="currentColor"
                fillRule="evenodd"
              />
            </svg>
          </span>
        </div>
        <input
          className="wrapped "
          data-testid="search-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          type="search"
          value=""
        />
        
      </div>
      <label
        className="c5 label"
      >
        Fruits
      </label>
    </div>
  </div>
</div>
`;

exports[`Storyshots Search Field with empty items array 1`] = `
.c4 {
  display: inline-block;
  vertical-align: text-bottom;
}

.c4 .farmblocks-icon {
  display: block;
}

.c5 {
  font-family: Lato,sans-serif;
  font-size: 16px;
  font-weight: 600;
  line-height: 1.5;
  color: #2f313a;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-bottom: 24px;
  font-family: Lato,sans-serif;
  font-size: 16px;
}

.c3 > .input {
  -webkit-order: 2;
  -ms-flex-order: 2;
  order: 2;
  box-sizing: border-box;
  border: solid 1px;
  border-radius: 4px;
  border-color: rgba(0,0,0,0.16);
  background-color: #ffffff;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  overflow: auto;
}

.c3 > .input .wrapped {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c3 > .input > input,
.select__search .c3 > .input input {
  padding: 8px 16px;
  line-height: 22px;
}

.c3 > .input > textarea {
  padding: 16px;
}

.c3 > .input input,
.c3 > .input textarea,
.c3 > .input select {
  font-family: inherit;
  font-size: inherit;
}

.c3 > .input > input,
.c3 > .input > textarea,
.select__search .c3 > .input input {
  min-width: 0;
  border: 0;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  outline: none;
  color: #2f313a;
  background: none;
}

.c3 > .input > input::-webkit-input-placeholder,
.c3 > .input > textarea::-webkit-input-placeholder,
.select__search .c3 > .input input::-webkit-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input::-moz-placeholder,
.c3 > .input > textarea::-moz-placeholder,
.select__search .c3 > .input input::-moz-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input:-ms-input-placeholder,
.c3 > .input > textarea:-ms-input-placeholder,
.select__search .c3 > .input input:-ms-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input::placeholder,
.c3 > .input > textarea::placeholder,
.select__search .c3 > .input input::placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input[type="search"],
.c3 > .input > textarea[type="search"],
.select__search .c3 > .input input[type="search"] {
  -webkit-appearance: none;
  -moz-appearance: none;
}

.c3 > .input > input[type="search"]::-webkit-search-cancel-button,
.c3 > .input > textarea[type="search"]::-webkit-search-cancel-button,
.select__search .c3 > .input input[type="search"]::-webkit-search-cancel-button {
  display: none;
}

.c3 > .input > input[type="search"]::-ms-clear,
.c3 > .input > textarea[type="search"]::-ms-clear,
.select__search .c3 > .input input[type="search"]::-ms-clear {
  width: 0;
  height: 0;
}

.c3 > .input > input[role="combobox"],
.c3 > .input > textarea[role="combobox"],
.select__search .c3 > .input input[role="combobox"] {
  cursor: pointer;
}

.c3 > .input > .icon {
  color: rgba(0,0,0,0.16);
}

.c3 > .input > .icon.left {
  margin-left: 8px;
  margin-right: -8px;
}

.c3 > .input > .icon.right {
  margin-right: 8px;
  margin-left: -8px;
}

.c3 > .input > .clear {
  color: rgba(0,0,0,0.16);
}

.c3 > .input > .clear:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #3498db;
}

.c3 > .input > .clear a {
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
}

.c3 .input.dropdown {
  cursor: pointer;
}

.c3 input[type="number"] {
  -moz-appearance: textfield;
}

.c3 input[type="number"]::-webkit-inner-spin-button,
.c3 input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.c3 .prefix {
  margin-left: 16px;
  margin-right: -8px;
}

.c3 .suffix {
  margin-right: 16px;
  margin-left: -8px;
}

.c3 .prefix,
.c3 .suffix {
  font-family: Lato,sans-serif;
  font-size: 16px;
  color: rgba(0,0,0,0.32);
}

.c3 .label {
  margin-bottom: 8px;
}

.c0 {
  font-family: lato,sans-serif;
  display: inline-block;
  position: relative;
}

.c0 *:focus {
  outline: none;
}

.c2 {
  position: relative;
}

.c2 >:first-child {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.c1 input {
  width: 100%;
  min-width: 0;
}

.c1.selected .input {
  background: #f6f8f9;
  cursor: auto;
}

<div
  className="c0 c1 undefined  "
  style={
    Object {
      "width": 600,
      "zIndex": undefined,
    }
  }
>
  <div
    className="c2"
  >
    <div
      className="c3 searchInput"
      onClick={[Function]}
      type="search"
    >
      <div
        className="input "
      >
        <div
          className="icon left"
        >
          <span
            className="c4"
            color="currentColor"
            size="1em"
          >
            <svg
              aria-hidden={true}
              className="farmblocks-icon "
              height={18}
              viewBox="2 2 20 20"
              width={18}
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M10 3a7 7 0 104.201 12.6l.009.013.083.094 5 5a1 1 0 001.497-1.32l-.083-.094-5-5a1.009 1.009 0 00-.108-.094A7 7 0 0010 3zm0 2a5 5 0 110 10 5 5 0 010-10z"
                fill="currentColor"
                fillRule="evenodd"
              />
            </svg>
          </span>
        </div>
        <input
          className="wrapped "
          data-testid="search-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          placeholder="Click here. Menu should not open"
          type="search"
          value=""
        />
        
      </div>
      <label
        className="c5 label"
      >
        Fruits
      </label>
    </div>
  </div>
</div>
`;

exports[`Storyshots Search Field with footer 1`] = `
.c4 {
  display: inline-block;
  vertical-align: text-bottom;
}

.c4 .farmblocks-icon {
  display: block;
}

.c5 {
  font-family: Lato,sans-serif;
  font-size: 16px;
  font-weight: 600;
  line-height: 1.5;
  color: #2f313a;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-bottom: 24px;
  font-family: Lato,sans-serif;
  font-size: 16px;
}

.c3 > .input {
  -webkit-order: 2;
  -ms-flex-order: 2;
  order: 2;
  box-sizing: border-box;
  border: solid 1px;
  border-radius: 4px;
  border-color: rgba(0,0,0,0.16);
  background-color: #ffffff;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  overflow: auto;
}

.c3 > .input .wrapped {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c3 > .input > input,
.select__search .c3 > .input input {
  padding: 8px 16px;
  line-height: 22px;
}

.c3 > .input > textarea {
  padding: 16px;
}

.c3 > .input input,
.c3 > .input textarea,
.c3 > .input select {
  font-family: inherit;
  font-size: inherit;
}

.c3 > .input > input,
.c3 > .input > textarea,
.select__search .c3 > .input input {
  min-width: 0;
  border: 0;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  outline: none;
  color: #2f313a;
  background: none;
}

.c3 > .input > input::-webkit-input-placeholder,
.c3 > .input > textarea::-webkit-input-placeholder,
.select__search .c3 > .input input::-webkit-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input::-moz-placeholder,
.c3 > .input > textarea::-moz-placeholder,
.select__search .c3 > .input input::-moz-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input:-ms-input-placeholder,
.c3 > .input > textarea:-ms-input-placeholder,
.select__search .c3 > .input input:-ms-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input::placeholder,
.c3 > .input > textarea::placeholder,
.select__search .c3 > .input input::placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input[type="search"],
.c3 > .input > textarea[type="search"],
.select__search .c3 > .input input[type="search"] {
  -webkit-appearance: none;
  -moz-appearance: none;
}

.c3 > .input > input[type="search"]::-webkit-search-cancel-button,
.c3 > .input > textarea[type="search"]::-webkit-search-cancel-button,
.select__search .c3 > .input input[type="search"]::-webkit-search-cancel-button {
  display: none;
}

.c3 > .input > input[type="search"]::-ms-clear,
.c3 > .input > textarea[type="search"]::-ms-clear,
.select__search .c3 > .input input[type="search"]::-ms-clear {
  width: 0;
  height: 0;
}

.c3 > .input > input[role="combobox"],
.c3 > .input > textarea[role="combobox"],
.select__search .c3 > .input input[role="combobox"] {
  cursor: pointer;
}

.c3 > .input > .icon {
  color: rgba(0,0,0,0.16);
}

.c3 > .input > .icon.left {
  margin-left: 8px;
  margin-right: -8px;
}

.c3 > .input > .icon.right {
  margin-right: 8px;
  margin-left: -8px;
}

.c3 > .input > .clear {
  color: rgba(0,0,0,0.16);
}

.c3 > .input > .clear:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #3498db;
}

.c3 > .input > .clear a {
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
}

.c3 .input.dropdown {
  cursor: pointer;
}

.c3 input[type="number"] {
  -moz-appearance: textfield;
}

.c3 input[type="number"]::-webkit-inner-spin-button,
.c3 input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.c3 .prefix {
  margin-left: 16px;
  margin-right: -8px;
}

.c3 .suffix {
  margin-right: 16px;
  margin-left: -8px;
}

.c3 .prefix,
.c3 .suffix {
  font-family: Lato,sans-serif;
  font-size: 16px;
  color: rgba(0,0,0,0.32);
}

.c3 .label {
  margin-bottom: 8px;
}

.c0 {
  font-family: lato,sans-serif;
  display: inline-block;
  position: relative;
}

.c0 *:focus {
  outline: none;
}

.c2 {
  position: relative;
}

.c2 >:first-child {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.c1 input {
  width: 100%;
  min-width: 0;
}

.c1.selected .input {
  background: #f6f8f9;
  cursor: auto;
}

<div
  className="c0 c1 undefined  "
  style={
    Object {
      "width": 200,
      "zIndex": undefined,
    }
  }
>
  <div
    className="c2"
  >
    <div
      className="c3 searchInput"
      onClick={[Function]}
      type="search"
    >
      <div
        className="input "
      >
        <div
          className="icon left"
        >
          <span
            className="c4"
            color="currentColor"
            size="1em"
          >
            <svg
              aria-hidden={true}
              className="farmblocks-icon "
              height={18}
              viewBox="2 2 20 20"
              width={18}
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M10 3a7 7 0 104.201 12.6l.009.013.083.094 5 5a1 1 0 001.497-1.32l-.083-.094-5-5a1.009 1.009 0 00-.108-.094A7 7 0 0010 3zm0 2a5 5 0 110 10 5 5 0 010-10z"
                fill="currentColor"
                fillRule="evenodd"
              />
            </svg>
          </span>
        </div>
        <input
          className="wrapped "
          data-testid="search-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          type="search"
          value=""
        />
        
      </div>
      <label
        className="c5 label"
      >
        Fruits
      </label>
    </div>
  </div>
</div>
`;

exports[`Storyshots Search Field with items 1`] = `
.c4 {
  display: inline-block;
  vertical-align: text-bottom;
}

.c4 .farmblocks-icon {
  display: block;
}

.c5 {
  font-family: Lato,sans-serif;
  font-size: 16px;
  font-weight: 600;
  line-height: 1.5;
  color: #2f313a;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-bottom: 24px;
  font-family: Lato,sans-serif;
  font-size: 16px;
}

.c3 > .input {
  -webkit-order: 2;
  -ms-flex-order: 2;
  order: 2;
  box-sizing: border-box;
  border: solid 1px;
  border-radius: 4px;
  border-color: rgba(0,0,0,0.16);
  background-color: #ffffff;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  overflow: auto;
}

.c3 > .input .wrapped {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c3 > .input > input,
.select__search .c3 > .input input {
  padding: 8px 16px;
  line-height: 22px;
}

.c3 > .input > textarea {
  padding: 16px;
}

.c3 > .input input,
.c3 > .input textarea,
.c3 > .input select {
  font-family: inherit;
  font-size: inherit;
}

.c3 > .input > input,
.c3 > .input > textarea,
.select__search .c3 > .input input {
  min-width: 0;
  border: 0;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  outline: none;
  color: #2f313a;
  background: none;
}

.c3 > .input > input::-webkit-input-placeholder,
.c3 > .input > textarea::-webkit-input-placeholder,
.select__search .c3 > .input input::-webkit-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input::-moz-placeholder,
.c3 > .input > textarea::-moz-placeholder,
.select__search .c3 > .input input::-moz-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input:-ms-input-placeholder,
.c3 > .input > textarea:-ms-input-placeholder,
.select__search .c3 > .input input:-ms-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input::placeholder,
.c3 > .input > textarea::placeholder,
.select__search .c3 > .input input::placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input[type="search"],
.c3 > .input > textarea[type="search"],
.select__search .c3 > .input input[type="search"] {
  -webkit-appearance: none;
  -moz-appearance: none;
}

.c3 > .input > input[type="search"]::-webkit-search-cancel-button,
.c3 > .input > textarea[type="search"]::-webkit-search-cancel-button,
.select__search .c3 > .input input[type="search"]::-webkit-search-cancel-button {
  display: none;
}

.c3 > .input > input[type="search"]::-ms-clear,
.c3 > .input > textarea[type="search"]::-ms-clear,
.select__search .c3 > .input input[type="search"]::-ms-clear {
  width: 0;
  height: 0;
}

.c3 > .input > input[role="combobox"],
.c3 > .input > textarea[role="combobox"],
.select__search .c3 > .input input[role="combobox"] {
  cursor: pointer;
}

.c3 > .input > .icon {
  color: rgba(0,0,0,0.16);
}

.c3 > .input > .icon.left {
  margin-left: 8px;
  margin-right: -8px;
}

.c3 > .input > .icon.right {
  margin-right: 8px;
  margin-left: -8px;
}

.c3 > .input > .clear {
  color: rgba(0,0,0,0.16);
}

.c3 > .input > .clear:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #3498db;
}

.c3 > .input > .clear a {
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
}

.c3 .input.dropdown {
  cursor: pointer;
}

.c3 input[type="number"] {
  -moz-appearance: textfield;
}

.c3 input[type="number"]::-webkit-inner-spin-button,
.c3 input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.c3 .prefix {
  margin-left: 16px;
  margin-right: -8px;
}

.c3 .suffix {
  margin-right: 16px;
  margin-left: -8px;
}

.c3 .prefix,
.c3 .suffix {
  font-family: Lato,sans-serif;
  font-size: 16px;
  color: rgba(0,0,0,0.32);
}

.c3 .label {
  margin-bottom: 8px;
}

.c0 {
  font-family: lato,sans-serif;
  display: inline-block;
  position: relative;
}

.c0 *:focus {
  outline: none;
}

.c2 {
  position: relative;
}

.c2 >:first-child {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.c1 input {
  width: 100%;
  min-width: 0;
}

.c1.selected .input {
  background: #f6f8f9;
  cursor: auto;
}

<div
  className="c0 c1 undefined  "
  style={
    Object {
      "width": 200,
      "zIndex": undefined,
    }
  }
>
  <div
    className="c2"
  >
    <div
      className="c3 searchInput"
      onClick={[Function]}
      type="search"
    >
      <div
        className="input "
      >
        <div
          className="icon left"
        >
          <span
            className="c4"
            color="currentColor"
            size="1em"
          >
            <svg
              aria-hidden={true}
              className="farmblocks-icon "
              height={18}
              viewBox="2 2 20 20"
              width={18}
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M10 3a7 7 0 104.201 12.6l.009.013.083.094 5 5a1 1 0 001.497-1.32l-.083-.094-5-5a1.009 1.009 0 00-.108-.094A7 7 0 0010 3zm0 2a5 5 0 110 10 5 5 0 010-10z"
                fill="currentColor"
                fillRule="evenodd"
              />
            </svg>
          </span>
        </div>
        <input
          className="wrapped "
          data-testid="search-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          type="search"
          value=""
        />
        
      </div>
      <label
        className="c5 label"
      >
        Fruits
      </label>
    </div>
  </div>
</div>
`;

exports[`Storyshots Search Field with selected item 1`] = `
.c4 {
  display: inline-block;
  vertical-align: text-bottom;
}

.c4 .farmblocks-icon {
  display: block;
}

.c5 {
  font-family: Lato,sans-serif;
  display: inline-block;
  position: relative;
  font-size: 16px;
  font-weight: 600;
  line-height: 1;
  -webkit-transition: all 0.3s ease;
  transition: all 0.3s ease;
  cursor: pointer;
  color: #3498db;
}

.c5 span.margin-left {
  margin-left: 4px;
}

.c5 span.margin-right {
  margin-right: 4px;
}

.c5 a {
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c5 a:hover {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.c5 a:hover i {
  display: inline-block;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c5 > a {
  color: inherit;
}

.c5:hover {
  color: #2980b9;
}

.c6 {
  font-family: Lato,sans-serif;
  font-size: 16px;
  font-weight: 600;
  line-height: 1.5;
  color: #2f313a;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-bottom: 24px;
  font-family: Lato,sans-serif;
  font-size: 16px;
}

.c3 > .input {
  -webkit-order: 2;
  -ms-flex-order: 2;
  order: 2;
  box-sizing: border-box;
  border: solid 1px;
  border-radius: 4px;
  border-color: rgba(0,0,0,0.16);
  background-color: #ffffff;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  overflow: auto;
}

.c3 > .input .wrapped {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c3 > .input > input,
.select__search .c3 > .input input {
  padding: 8px 16px;
  line-height: 22px;
}

.c3 > .input > textarea {
  padding: 16px;
}

.c3 > .input input,
.c3 > .input textarea,
.c3 > .input select {
  font-family: inherit;
  font-size: inherit;
}

.c3 > .input > input,
.c3 > .input > textarea,
.select__search .c3 > .input input {
  min-width: 0;
  border: 0;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  outline: none;
  color: #2f313a;
  background: none;
}

.c3 > .input > input::-webkit-input-placeholder,
.c3 > .input > textarea::-webkit-input-placeholder,
.select__search .c3 > .input input::-webkit-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input::-moz-placeholder,
.c3 > .input > textarea::-moz-placeholder,
.select__search .c3 > .input input::-moz-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input:-ms-input-placeholder,
.c3 > .input > textarea:-ms-input-placeholder,
.select__search .c3 > .input input:-ms-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input::placeholder,
.c3 > .input > textarea::placeholder,
.select__search .c3 > .input input::placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input[type="search"],
.c3 > .input > textarea[type="search"],
.select__search .c3 > .input input[type="search"] {
  -webkit-appearance: none;
  -moz-appearance: none;
}

.c3 > .input > input[type="search"]::-webkit-search-cancel-button,
.c3 > .input > textarea[type="search"]::-webkit-search-cancel-button,
.select__search .c3 > .input input[type="search"]::-webkit-search-cancel-button {
  display: none;
}

.c3 > .input > input[type="search"]::-ms-clear,
.c3 > .input > textarea[type="search"]::-ms-clear,
.select__search .c3 > .input input[type="search"]::-ms-clear {
  width: 0;
  height: 0;
}

.c3 > .input > input[role="combobox"],
.c3 > .input > textarea[role="combobox"],
.select__search .c3 > .input input[role="combobox"] {
  cursor: pointer;
}

.c3 > .input > .icon {
  color: rgba(0,0,0,0.16);
}

.c3 > .input > .icon.left {
  margin-left: 8px;
  margin-right: -8px;
}

.c3 > .input > .icon.right {
  margin-right: 8px;
  margin-left: -8px;
}

.c3 > .input > .clear {
  color: rgba(0,0,0,0.16);
}

.c3 > .input > .clear:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #3498db;
}

.c3 > .input > .clear a {
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
}

.c3 .input.dropdown {
  cursor: pointer;
}

.c3 input[type="number"] {
  -moz-appearance: textfield;
}

.c3 input[type="number"]::-webkit-inner-spin-button,
.c3 input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.c3 .prefix {
  margin-left: 16px;
  margin-right: -8px;
}

.c3 .suffix {
  margin-right: 16px;
  margin-left: -8px;
}

.c3 .prefix,
.c3 .suffix {
  font-family: Lato,sans-serif;
  font-size: 16px;
  color: rgba(0,0,0,0.32);
}

.c3 .label {
  margin-bottom: 8px;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  font-family: Lato,sans-serif;
  font-size: 16px;
}

.c7 > .input {
  -webkit-order: 2;
  -ms-flex-order: 2;
  order: 2;
  box-sizing: border-box;
  border: solid 1px;
  border-color: rgba(0,0,0,0.16);
  background-color: #ffffff;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  overflow: auto;
}

.c7 > .input .wrapped {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c7 > .input > input,
.select__search .c7 > .input input {
  padding: 8px 16px;
  line-height: 22px;
}

.c7 > .input > textarea {
  padding: 16px;
}

.c7 > .input input,
.c7 > .input textarea,
.c7 > .input select {
  font-family: inherit;
  font-size: inherit;
}

.c7 > .input > input,
.c7 > .input > textarea,
.select__search .c7 > .input input {
  min-width: 0;
  border: 0;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  outline: none;
  color: #2f313a;
  background: none;
}

.c7 > .input > input::-webkit-input-placeholder,
.c7 > .input > textarea::-webkit-input-placeholder,
.select__search .c7 > .input input::-webkit-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c7 > .input > input::-moz-placeholder,
.c7 > .input > textarea::-moz-placeholder,
.select__search .c7 > .input input::-moz-placeholder {
  color: rgba(0,0,0,0.32);
}

.c7 > .input > input:-ms-input-placeholder,
.c7 > .input > textarea:-ms-input-placeholder,
.select__search .c7 > .input input:-ms-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c7 > .input > input::placeholder,
.c7 > .input > textarea::placeholder,
.select__search .c7 > .input input::placeholder {
  color: rgba(0,0,0,0.32);
}

.c7 > .input > input[type="search"],
.c7 > .input > textarea[type="search"],
.select__search .c7 > .input input[type="search"] {
  -webkit-appearance: none;
  -moz-appearance: none;
}

.c7 > .input > input[type="search"]::-webkit-search-cancel-button,
.c7 > .input > textarea[type="search"]::-webkit-search-cancel-button,
.select__search .c7 > .input input[type="search"]::-webkit-search-cancel-button {
  display: none;
}

.c7 > .input > input[type="search"]::-ms-clear,
.c7 > .input > textarea[type="search"]::-ms-clear,
.select__search .c7 > .input input[type="search"]::-ms-clear {
  width: 0;
  height: 0;
}

.c7 > .input > input[role="combobox"],
.c7 > .input > textarea[role="combobox"],
.select__search .c7 > .input input[role="combobox"] {
  cursor: pointer;
}

.c7 > .input > .icon {
  color: rgba(0,0,0,0.16);
}

.c7 > .input > .icon.left {
  margin-left: 8px;
  margin-right: -8px;
}

.c7 > .input > .icon.right {
  margin-right: 8px;
  margin-left: -8px;
}

.c7 > .input > .clear {
  color: rgba(0,0,0,0.16);
}

.c7 > .input > .clear:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #3498db;
}

.c7 > .input > .clear a {
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
}

.c7 .input.dropdown {
  cursor: pointer;
}

.c7 input[type="number"] {
  -moz-appearance: textfield;
}

.c7 input[type="number"]::-webkit-inner-spin-button,
.c7 input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.c7 .prefix {
  margin-left: 16px;
  margin-right: -8px;
}

.c7 .suffix {
  margin-right: 16px;
  margin-left: -8px;
}

.c7 .prefix,
.c7 .suffix {
  font-family: Lato,sans-serif;
  font-size: 16px;
  color: rgba(0,0,0,0.32);
}

.c7 .label {
  margin-bottom: 8px;
}

.c0 {
  font-family: lato,sans-serif;
  display: inline-block;
  position: relative;
}

.c0 *:focus {
  outline: none;
}

.c8 {
  display: block;
}

.c8 .input {
  position: absolute;
  top: 32px;
  width: 100%;
  height: 40px;
  padding: 8px 16px;
  border-radius: 4px;
  background: #f6f8f9;
  color: #2f313a;
  cursor: auto;
}

.c8 .prefix {
  margin: 0 8px 0 0;
}

.c8 .clear {
  position: absolute;
  right: 8px;
}

.c2 {
  position: relative;
}

.c2 >:first-child {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.c1 input {
  width: 100%;
  min-width: 0;
}

.c1.selected .input {
  background: #f6f8f9;
  cursor: auto;
}

<div
  className="c0 c1 undefined protected "
  style={
    Object {
      "width": 200,
      "zIndex": undefined,
    }
  }
>
  <div
    className="c2"
  >
    <div
      className="c3 searchInput"
      onClick={[Function]}
      type="search"
    >
      <div
        className="input "
      >
        <div
          className="icon left"
        >
          <span
            className="c4"
            color="currentColor"
            size="1em"
          >
            <svg
              aria-hidden={true}
              className="farmblocks-icon "
              height={18}
              viewBox="2 2 20 20"
              width={18}
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M10 3a7 7 0 104.201 12.6l.009.013.083.094 5 5a1 1 0 001.497-1.32l-.083-.094-5-5a1.009 1.009 0 00-.108-.094A7 7 0 0010 3zm0 2a5 5 0 110 10 5 5 0 010-10z"
                fill="currentColor"
                fillRule="evenodd"
              />
            </svg>
          </span>
        </div>
        <input
          className="wrapped "
          data-testid="search-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          type="search"
          value="Banana"
        />
        <div
          className="c5 clear icon right"
          disabled={false}
          fontWeight="600"
          size={16}
          type="#3498db"
        >
          <span
            data-testid="input-clear"
            onClick={[Function]}
          >
            <span
              className="c4"
              color="currentColor"
              size="1em"
            >
              <svg
                aria-hidden={true}
                className="farmblocks-icon "
                height={24}
                viewBox="2 2 20 20"
                width={24}
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M13.414 12l2.829-2.828a1 1 0 00-1.415-1.415L12 10.586 9.172 7.757a1 1 0 00-1.415 1.415L10.586 12l-2.829 2.828a1 1 0 001.415 1.415L12 13.414l2.828 2.829a1 1 0 001.415-1.415L13.414 12z"
                  fill="currentColor"
                  fillRule="evenodd"
                />
              </svg>
            </span>
          </span>
        </div>
      </div>
      <label
        className="c6 label"
      >
        Fruits
      </label>
    </div>
    <div
      className="c7 c8 protected-input-cover"
      data-testid="protected-input-cover"
      label="Fruits"
    >
      <div
        className="input"
      >
        Banana
        <div
          className="c5 clear"
          disabled={false}
          fontWeight="600"
          size={16}
          type="#3498db"
        >
          <span
            data-testid="edit-link"
            onClick={[Function]}
            onKeyDown={[Function]}
          >
            <span
              className="c4"
              color="currentColor"
              size="1em"
            >
              <svg
                aria-hidden={true}
                className="farmblocks-icon "
                height="1em"
                viewBox="2 2 20 20"
                width="1em"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M15.231 3.293a1 1 0 011.32-.084l.094.084 4.062 4.062a1 1 0 01.083 1.32l-.083.094-10.462 10.462a1 1 0 01-.325.217l-.124.042-5.539 1.476a1 1 0 01-1.247-1.113l.024-.111 1.476-5.538a1 1 0 01.173-.35l.087-.099L15.23 3.293zM13.23 8.12l-6.857 6.858-.962 3.609 3.61-.962 6.857-6.857L13.23 8.12zm2.708-2.708l-1.294 1.294 2.648 2.648 1.293-1.294-2.647-2.648z"
                  fill="currentColor"
                  fillRule="evenodd"
                />
              </svg>
            </span>
          </span>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Search Field with validation message 1`] = `
.c4 {
  display: inline-block;
  vertical-align: text-bottom;
}

.c4 .farmblocks-icon {
  display: block;
}

.c5 {
  font-family: Lato,sans-serif;
  font-size: 16px;
  font-weight: 600;
  line-height: 1.5;
  color: #dd3311;
}

.c6 {
  font-family: Lato,sans-serif;
  font-size: 14px;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  color: #dd3311;
  text-align: left;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-bottom: 24px;
  font-family: Lato,sans-serif;
  font-size: 16px;
}

.c3 > .input {
  -webkit-order: 2;
  -ms-flex-order: 2;
  order: 2;
  box-sizing: border-box;
  border: solid 1px;
  border-radius: 4px;
  border-color: #dd3311;
  background-color: #ffffff;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  overflow: auto;
}

.c3 > .input .wrapped {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c3 > .input > input,
.select__search .c3 > .input input {
  padding: 8px 16px;
  line-height: 22px;
}

.c3 > .input > textarea {
  padding: 16px;
}

.c3 > .input input,
.c3 > .input textarea,
.c3 > .input select {
  font-family: inherit;
  font-size: inherit;
}

.c3 > .input > input,
.c3 > .input > textarea,
.select__search .c3 > .input input {
  min-width: 0;
  border: 0;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  outline: none;
  color: #2f313a;
  background: none;
}

.c3 > .input > input::-webkit-input-placeholder,
.c3 > .input > textarea::-webkit-input-placeholder,
.select__search .c3 > .input input::-webkit-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input::-moz-placeholder,
.c3 > .input > textarea::-moz-placeholder,
.select__search .c3 > .input input::-moz-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input:-ms-input-placeholder,
.c3 > .input > textarea:-ms-input-placeholder,
.select__search .c3 > .input input:-ms-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input::placeholder,
.c3 > .input > textarea::placeholder,
.select__search .c3 > .input input::placeholder {
  color: rgba(0,0,0,0.32);
}

.c3 > .input > input[type="search"],
.c3 > .input > textarea[type="search"],
.select__search .c3 > .input input[type="search"] {
  -webkit-appearance: none;
  -moz-appearance: none;
}

.c3 > .input > input[type="search"]::-webkit-search-cancel-button,
.c3 > .input > textarea[type="search"]::-webkit-search-cancel-button,
.select__search .c3 > .input input[type="search"]::-webkit-search-cancel-button {
  display: none;
}

.c3 > .input > input[type="search"]::-ms-clear,
.c3 > .input > textarea[type="search"]::-ms-clear,
.select__search .c3 > .input input[type="search"]::-ms-clear {
  width: 0;
  height: 0;
}

.c3 > .input > input[role="combobox"],
.c3 > .input > textarea[role="combobox"],
.select__search .c3 > .input input[role="combobox"] {
  cursor: pointer;
}

.c3 > .input > .icon {
  color: #dd3311;
}

.c3 > .input > .icon.left {
  margin-left: 8px;
  margin-right: -8px;
}

.c3 > .input > .icon.right {
  margin-right: 8px;
  margin-left: -8px;
}

.c3 > .input > .clear {
  color: rgba(0,0,0,0.16);
}

.c3 > .input > .clear:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #3498db;
}

.c3 > .input > .clear a {
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
}

.c3 .input.dropdown {
  cursor: pointer;
}

.c3 input[type="number"] {
  -moz-appearance: textfield;
}

.c3 input[type="number"]::-webkit-inner-spin-button,
.c3 input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.c3 .prefix {
  margin-left: 16px;
  margin-right: -8px;
}

.c3 .suffix {
  margin-right: 16px;
  margin-left: -8px;
}

.c3 .prefix,
.c3 .suffix {
  font-family: Lato,sans-serif;
  font-size: 16px;
  color: #dd3311;
}

.c3 .label {
  margin-bottom: 8px;
}

.c7 {
  margin-top: 8px;
  -webkit-order: 3;
  -ms-flex-order: 3;
  order: 3;
}

.c0 {
  font-family: lato,sans-serif;
  display: inline-block;
  position: relative;
}

.c0 *:focus {
  outline: none;
}

.c2 {
  position: relative;
}

.c2 >:first-child {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.c1 input {
  width: 100%;
  min-width: 0;
}

.c1.selected .input {
  background: #f6f8f9;
  cursor: auto;
}

<div
  className="c0 c1 undefined  "
  style={
    Object {
      "width": 200,
      "zIndex": undefined,
    }
  }
>
  <div
    className="c2"
  >
    <div
      className="c3 searchInput"
      onClick={[Function]}
      type="search"
    >
      <div
        className="input "
      >
        <div
          className="icon left"
        >
          <span
            className="c4"
            color="currentColor"
            size="1em"
          >
            <svg
              aria-hidden={true}
              className="farmblocks-icon "
              height={18}
              viewBox="2 2 20 20"
              width={18}
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M10 3a7 7 0 104.201 12.6l.009.013.083.094 5 5a1 1 0 001.497-1.32l-.083-.094-5-5a1.009 1.009 0 00-.108-.094A7 7 0 0010 3zm0 2a5 5 0 110 10 5 5 0 010-10z"
                fill="currentColor"
                fillRule="evenodd"
              />
            </svg>
          </span>
        </div>
        <input
          className="wrapped "
          data-testid="search-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          type="search"
          value=""
        />
        
      </div>
      <label
        className="c5 label"
      >
        Fruits
      </label>
      <div
        className="c6 c7 error-message-text"
        size={14}
        type="#dd3311"
      >
        One error
      </div>
      <div
        className="c6 c7 error-message-text"
        size={14}
        type="#dd3311"
      >
        Another error
      </div>
    </div>
  </div>
</div>
`;

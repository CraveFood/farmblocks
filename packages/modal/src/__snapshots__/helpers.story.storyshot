// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Modal/helpers ModalManager 1`] = `
<div>
  <button
    onClick={[Function]}
  >
    Open 1st
  </button>
  <button
    onClick={[Function]}
  >
    Open 2nd
  </button>
</div>
`;

exports[`Storyshots Modal/helpers ModalManager open at mount 1`] = `
.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  height: 32px;
  box-sizing: border-box;
  border: solid 1px rgba(0,0,0,0.16);
  border-radius: 4px;
  box-shadow: 0 2px 2px 0 rgba(0,0,0,0.16);
  color: white;
  line-height: 30px;
  font-size: 16px;
  font-family: lato,sans-serif;
  font-weight: 600;
  -webkit-font-smoothing: antialiased !important;
  white-space: nowrap;
  text-overflow: ellipsis;
  outline: 0;
  cursor: pointer;
  background-color: #FFFFFF;
  color: #59636f;
  padding: 0 8px;
}

.c7 .icon {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  color: rgba(255,255,255,0.56);
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
}

.c7:hover {
  box-shadow: 0 4px 4px 0 rgba(0,0,0,0.16);
}

.c7:focus {
  box-shadow: none;
}

.c7:hover .icon,
.c7:focus .icon {
  color: white;
}

.c7 > .icon {
  color: rgba(0,0,0,0.32);
}

.c7:hover,
.c7:focus {
  color: #3498db;
  border-color: #3498db;
}

.c7:hover > .icon,
.c7:focus > .icon {
  color: #3498db;
}

.c7:disabled,
.c7:disabled .icon,
.c7:disabled:hover {
  color: rgba(0,0,0,0.32);
}

.c7:disabled {
  background-color: #ccc;
  box-shadow: none;
}

.c3 {
  background-color: #ffffff;
  box-shadow: 0 4px 4px 0 rgba(0,0,0,0.16);
  border: solid 1px rgba(0,0,0,0.16);
  width: 100%;
  padding: 0;
  box-sizing: border-box;
  border-radius: 4px;
  overflow: visible;
}

.c0 {
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  padding: 40px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  overflow: hidden;
}

.c1 {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background: rgba(0,0,0,0.32);
}

.c2 {
  max-width: 100%;
  max-height: 100%;
}

.c4 {
  max-height: 100%;
  max-width: 100%;
  min-width: 200px;
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  border: none;
  overflow: hidden;
}

.c8 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  overflow: auto;
  -webkit-overflow-scrolling: touch;
  padding: 16px;
}

.c6 {
  overflow: auto;
  padding-right: 16px;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding: 16px;
  border-bottom: solid 1px rgba(0,0,0,0.16);
}

.c5 .closeButton {
  margin-left: auto;
}

<div>
  <button
    onClick={[Function]}
  >
    Open modal
  </button>
  <div
    className="c0"
    style={
      Object {
        "justifyContent": "flex-start",
        "opacity": 0,
        "position": "fixed",
        "zIndex": 1500,
      }
    }
  >
    <div
      className="c1 overlay"
      data-testid="modal-overlay"
      onClick={[Function]}
    />
    <div
      className="c2"
      style={
        Object {
          "transform": "translate3D(0, -50px, 0)",
        }
      }
    >
      <div
        className="c3 c4 card"
        overflow="visible"
        width="100%"
      >
        <div
          className="c5 header"
        >
          <header
            className="c6"
          />
          <button
            className="c7 closeButton"
            data-testid="modal-close-icon"
            onClick={[Function]}
            size="SMALL"
            type="NEUTRAL"
          >
            <div
              className="icon left-icon"
              style={
                Object {
                  "marginRight": 0,
                }
              }
            >
              <i
                className="wg-close"
              />
            </div>
          </button>
        </div>
        <div
          className="c8 content"
        >
          This modal starts open.
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Modal/helpers Scroll lock 1`] = `
.c0 {
  height: 9000px;
  background: linear-gradient(to bottom,#3f5efb,#fc466b);
  color: white;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

<div
  className="c0"
>
  <p
    style={
      Object {
        "flex": 1,
      }
    }
  >
    Scroll down to find the button
  </p>
  <div
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <button
      onClick={[Function]}
    >
      Open modal
    </button>
  </div>
</div>
`;

exports[`Storyshots Modal/helpers useModal 1`] = `
<div>
  <button
    onClick={[Function]}
  >
    Open 1st
  </button>
  <button
    onClick={[Function]}
  >
    Open 2nd
  </button>
</div>
`;

exports[`Storyshots Modal/helpers useModal open at mount 1`] = `
.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  height: 32px;
  box-sizing: border-box;
  border: solid 1px rgba(0,0,0,0.16);
  border-radius: 4px;
  box-shadow: 0 2px 2px 0 rgba(0,0,0,0.16);
  color: white;
  line-height: 30px;
  font-size: 16px;
  font-family: lato,sans-serif;
  font-weight: 600;
  -webkit-font-smoothing: antialiased !important;
  white-space: nowrap;
  text-overflow: ellipsis;
  outline: 0;
  cursor: pointer;
  background-color: #FFFFFF;
  color: #59636f;
  padding: 0 8px;
}

.c7 .icon {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  color: rgba(255,255,255,0.56);
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
}

.c7:hover {
  box-shadow: 0 4px 4px 0 rgba(0,0,0,0.16);
}

.c7:focus {
  box-shadow: none;
}

.c7:hover .icon,
.c7:focus .icon {
  color: white;
}

.c7 > .icon {
  color: rgba(0,0,0,0.32);
}

.c7:hover,
.c7:focus {
  color: #3498db;
  border-color: #3498db;
}

.c7:hover > .icon,
.c7:focus > .icon {
  color: #3498db;
}

.c7:disabled,
.c7:disabled .icon,
.c7:disabled:hover {
  color: rgba(0,0,0,0.32);
}

.c7:disabled {
  background-color: #ccc;
  box-shadow: none;
}

.c3 {
  background-color: #ffffff;
  box-shadow: 0 4px 4px 0 rgba(0,0,0,0.16);
  border: solid 1px rgba(0,0,0,0.16);
  width: 100%;
  padding: 0;
  box-sizing: border-box;
  border-radius: 4px;
  overflow: visible;
}

.c0 {
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  padding: 40px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  overflow: hidden;
}

.c1 {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background: rgba(0,0,0,0.32);
}

.c2 {
  max-width: 100%;
  max-height: 100%;
}

.c4 {
  max-height: 100%;
  max-width: 100%;
  min-width: 200px;
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  border: none;
  overflow: hidden;
}

.c8 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  overflow: auto;
  -webkit-overflow-scrolling: touch;
  padding: 16px;
}

.c6 {
  overflow: auto;
  padding-right: 16px;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding: 16px;
  border-bottom: solid 1px rgba(0,0,0,0.16);
}

.c5 .closeButton {
  margin-left: auto;
}

<div>
  <button
    onClick={[Function]}
  >
    Open modal
  </button>
  <div
    className="c0"
    style={
      Object {
        "justifyContent": "flex-start",
        "opacity": 0,
        "position": "fixed",
        "zIndex": 1500,
      }
    }
  >
    <div
      className="c1 overlay"
      data-testid="modal-overlay"
      onClick={[Function]}
    />
    <div
      className="c2"
      style={
        Object {
          "transform": "translate3D(0, -50px, 0)",
        }
      }
    >
      <div
        className="c3 c4 card"
        overflow="visible"
        width="100%"
      >
        <div
          className="c5 header"
        >
          <header
            className="c6"
          />
          <button
            className="c7 closeButton"
            data-testid="modal-close-icon"
            onClick={[Function]}
            size="SMALL"
            type="NEUTRAL"
          >
            <div
              className="icon left-icon"
              style={
                Object {
                  "marginRight": 0,
                }
              }
            >
              <i
                className="wg-close"
              />
            </div>
          </button>
        </div>
        <div
          className="c8 content"
        >
          This modal starts open.
        </div>
      </div>
    </div>
  </div>
</div>
`;

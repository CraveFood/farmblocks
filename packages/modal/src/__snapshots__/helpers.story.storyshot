// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Modal/helpers ModalManager 1`] = `
<div>
  <button
    onClick={[Function]}
  >
    Open 1st
  </button>
  <button
    onClick={[Function]}
  >
    Open 2nd
  </button>
</div>
`;

exports[`Storyshots Modal/helpers ModalManager open at mount 1`] = `
.c8 {
  display: inline-block;
  vertical-align: text-bottom;
}

.c8 .farmblocks-icon {
  display: block;
}

.c7 {
  font-size: 16px;
  font-family: lato,sans-serif;
  font-weight: 600;
  -webkit-font-smoothing: antialiased !important;
  -moz-osx-font-smoothing: grayscale;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 4px 4px;
  border-radius: 4px;
  line-height: 1.5;
  height: 32px;
  min-width: 32px;
  width: 32px;
  white-space: nowrap;
  cursor: pointer;
  -webkit-transition: background 0.3s,color 0.3s,border-color 0.3s;
  transition: background 0.3s,color 0.3s,border-color 0.3s;
  background-color: #FFFFFF;
  color: #59636f;
  border: solid 1px rgba(0,0,0,0.16);
  box-shadow: 0px 2px 2px 0px rgba(0,0,0,0.16);
}

.c7 span {
  overflow: hidden;
  text-overflow: ellipsis;
}

.c7:disabled {
  background-color: rgba(0,0,0,0.32);
  color: rgba(0,0,0,0.32);
  border-width: 1px;
  border-color: rgba(0,0,0,0.16);
  box-shadow: none;
  cursor: default;
}

.c7:disabled .icon {
  color: rgba(0,0,0,0.32);
}

.c7 .icon {
  -webkit-transition: color 0.3s ease;
  transition: color 0.3s ease;
  color: rgba(0,0,0,0.32);
  line-height: 1;
}

.c7:not(:disabled):hover,
.c7:not(:disabled).hovered,
.c7:not(:disabled):active,
.c7:not(:disabled).active {
  color: #3498db;
  border-width: 2px;
  border-color: #3498db;
  box-shadow: 0px 4px 4px 0px rgba(0,0,0,0.16);
  padding: 3px 3px;
}

.c7:not(:disabled):hover .icon,
.c7:not(:disabled).hovered .icon,
.c7:not(:disabled):active .icon,
.c7:not(:disabled).active .icon,
.c7:not(:disabled):focus .icon,
.c7:not(:disabled).focused .icon {
  color: #3498db;
}

.c7:not(:disabled).active,
.c7:not(:disabled):active {
  box-shadow: none;
}

.c7:focus,
.c7.focused {
  outline: none;
}

.c7.focus-visible,
.c7.focused:not(:disabled) {
  box-shadow: 0 0 0 3px rgba(52,152,219,0.56);
}

.c3 {
  background-color: #ffffff;
  box-shadow: 0 4px 4px 0 rgba(0,0,0,0.08);
  border: solid 1px rgba(0,0,0,0.08);
  width: 100%;
  box-sizing: border-box;
  border-radius: 4px;
  overflow: visible;
  padding: 0;
}

.c0 {
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  overflow: hidden;
  padding: 8px;
  padding-bottom: 16px;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.c1 {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background: rgba(0,0,0,0.32);
}

.c2 {
  max-width: 100%;
  max-height: 100%;
}

.c4 {
  max-height: 100%;
  max-width: 100%;
  min-width: 200px;
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  border: none;
  overflow: hidden;
  padding: 0;
}

.c9 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  overflow: auto;
  -webkit-overflow-scrolling: touch;
  padding: 16px;
}

.c6 {
  overflow: auto;
  padding-right: 16px;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding: 12px 16px;
  border-bottom: solid 1px rgba(0,0,0,0.08);
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c5 .closeButton {
  margin-left: auto;
}

@media screen and (min-width:321px) {
  .c0 {
    padding: 8px;
    padding-bottom: 16px;
  }
}

@media screen and (min-width:415px) {
  .c0 {
    padding: 40px;
    padding-bottom: 40px;
  }
}

@media screen and (min-width:321px) {
  .c0 {
    -webkit-box-pack: start;
    -webkit-justify-content: flex-start;
    -ms-flex-pack: start;
    justify-content: flex-start;
  }
}

<div>
  <button
    onClick={[Function]}
  >
    Open modal
  </button>
  <div
    className="c0"
    justifyContent={
      Array [
        "flex-end",
        "flex-start",
      ]
    }
    p={
      Array [
        1,
        1,
        5,
      ]
    }
    pb={
      Array [
        2,
        2,
        5,
      ]
    }
    style={
      Object {
        "opacity": 0,
        "position": "fixed",
        "zIndex": 1500,
      }
    }
  >
    <div
      className="c1 overlay"
      data-testid="modal-overlay"
      onClick={[Function]}
    />
    <div
      className="c2"
      style={
        Object {
          "transform": " translate3D(0, 50px, 0)",
        }
      }
    >
      <div
        className="c3 c4 card"
        overflow="visible"
        width="100%"
      >
        <div
          className="c5 header"
        >
          <header
            className="c6"
          />
          <button
            className="c7 closeButton   "
            data-testid="modal-close-icon"
            onClick={[Function]}
            type="button"
          >
            <div
              className="icon left-icon"
              style={
                Object {
                  "transform": "translateX(-0px)",
                }
              }
            >
              <span
                className="c8"
                color="currentColor"
                size="1em"
              >
                <svg
                  aria-hidden={true}
                  className="farmblocks-icon "
                  height={20}
                  viewBox="2 2 20 20"
                  width={20}
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M13.414 12l2.829-2.828a1 1 0 00-1.415-1.415L12 10.586 9.172 7.757a1 1 0 00-1.415 1.415L10.586 12l-2.829 2.828a1 1 0 001.415 1.415L12 13.414l2.828 2.829a1 1 0 001.415-1.415L13.414 12z"
                    fill="currentColor"
                    fillRule="evenodd"
                  />
                </svg>
              </span>
            </div>
            <span />
          </button>
        </div>
        <div
          className="c9 content"
        >
          This modal starts open.
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Modal/helpers Scroll lock 1`] = `
.c0 {
  height: 9000px;
  background: linear-gradient(to bottom,#3f5efb,#fc466b);
  color: white;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

<div
  className="c0"
>
  <p
    style={
      Object {
        "flex": 1,
      }
    }
  >
    Scroll down to find the button
  </p>
  <div
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <button
      onClick={[Function]}
    >
      Open modal
    </button>
  </div>
</div>
`;

exports[`Storyshots Modal/helpers useModal 1`] = `
<div>
  <button
    onClick={[Function]}
  >
    Open 1st
  </button>
  <button
    onClick={[Function]}
  >
    Open 2nd
  </button>
</div>
`;

exports[`Storyshots Modal/helpers useModal open at mount 1`] = `
.c8 {
  display: inline-block;
  vertical-align: text-bottom;
}

.c8 .farmblocks-icon {
  display: block;
}

.c7 {
  font-size: 16px;
  font-family: lato,sans-serif;
  font-weight: 600;
  -webkit-font-smoothing: antialiased !important;
  -moz-osx-font-smoothing: grayscale;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 4px 4px;
  border-radius: 4px;
  line-height: 1.5;
  height: 32px;
  min-width: 32px;
  width: 32px;
  white-space: nowrap;
  cursor: pointer;
  -webkit-transition: background 0.3s,color 0.3s,border-color 0.3s;
  transition: background 0.3s,color 0.3s,border-color 0.3s;
  background-color: #FFFFFF;
  color: #59636f;
  border: solid 1px rgba(0,0,0,0.16);
  box-shadow: 0px 2px 2px 0px rgba(0,0,0,0.16);
}

.c7 span {
  overflow: hidden;
  text-overflow: ellipsis;
}

.c7:disabled {
  background-color: rgba(0,0,0,0.32);
  color: rgba(0,0,0,0.32);
  border-width: 1px;
  border-color: rgba(0,0,0,0.16);
  box-shadow: none;
  cursor: default;
}

.c7:disabled .icon {
  color: rgba(0,0,0,0.32);
}

.c7 .icon {
  -webkit-transition: color 0.3s ease;
  transition: color 0.3s ease;
  color: rgba(0,0,0,0.32);
  line-height: 1;
}

.c7:not(:disabled):hover,
.c7:not(:disabled).hovered,
.c7:not(:disabled):active,
.c7:not(:disabled).active {
  color: #3498db;
  border-width: 2px;
  border-color: #3498db;
  box-shadow: 0px 4px 4px 0px rgba(0,0,0,0.16);
  padding: 3px 3px;
}

.c7:not(:disabled):hover .icon,
.c7:not(:disabled).hovered .icon,
.c7:not(:disabled):active .icon,
.c7:not(:disabled).active .icon,
.c7:not(:disabled):focus .icon,
.c7:not(:disabled).focused .icon {
  color: #3498db;
}

.c7:not(:disabled).active,
.c7:not(:disabled):active {
  box-shadow: none;
}

.c7:focus,
.c7.focused {
  outline: none;
}

.c7.focus-visible,
.c7.focused:not(:disabled) {
  box-shadow: 0 0 0 3px rgba(52,152,219,0.56);
}

.c3 {
  background-color: #ffffff;
  box-shadow: 0 4px 4px 0 rgba(0,0,0,0.08);
  border: solid 1px rgba(0,0,0,0.08);
  width: 100%;
  box-sizing: border-box;
  border-radius: 4px;
  overflow: visible;
  padding: 0;
}

.c0 {
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  overflow: hidden;
  padding: 8px;
  padding-bottom: 16px;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.c1 {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background: rgba(0,0,0,0.32);
}

.c2 {
  max-width: 100%;
  max-height: 100%;
}

.c4 {
  max-height: 100%;
  max-width: 100%;
  min-width: 200px;
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  border: none;
  overflow: hidden;
  padding: 0;
}

.c9 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  overflow: auto;
  -webkit-overflow-scrolling: touch;
  padding: 16px;
}

.c6 {
  overflow: auto;
  padding-right: 16px;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding: 12px 16px;
  border-bottom: solid 1px rgba(0,0,0,0.08);
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c5 .closeButton {
  margin-left: auto;
}

@media screen and (min-width:321px) {
  .c0 {
    padding: 8px;
    padding-bottom: 16px;
  }
}

@media screen and (min-width:415px) {
  .c0 {
    padding: 40px;
    padding-bottom: 40px;
  }
}

@media screen and (min-width:321px) {
  .c0 {
    -webkit-box-pack: start;
    -webkit-justify-content: flex-start;
    -ms-flex-pack: start;
    justify-content: flex-start;
  }
}

<div>
  <button
    onClick={[Function]}
  >
    Open modal
  </button>
  <div
    className="c0"
    justifyContent={
      Array [
        "flex-end",
        "flex-start",
      ]
    }
    p={
      Array [
        1,
        1,
        5,
      ]
    }
    pb={
      Array [
        2,
        2,
        5,
      ]
    }
    style={
      Object {
        "opacity": 0,
        "position": "fixed",
        "zIndex": 1500,
      }
    }
  >
    <div
      className="c1 overlay"
      data-testid="modal-overlay"
      onClick={[Function]}
    />
    <div
      className="c2"
      style={
        Object {
          "transform": " translate3D(0, 50px, 0)",
        }
      }
    >
      <div
        className="c3 c4 card"
        overflow="visible"
        width="100%"
      >
        <div
          className="c5 header"
        >
          <header
            className="c6"
          />
          <button
            className="c7 closeButton   "
            data-testid="modal-close-icon"
            onClick={[Function]}
            type="button"
          >
            <div
              className="icon left-icon"
              style={
                Object {
                  "transform": "translateX(-0px)",
                }
              }
            >
              <span
                className="c8"
                color="currentColor"
                size="1em"
              >
                <svg
                  aria-hidden={true}
                  className="farmblocks-icon "
                  height={20}
                  viewBox="2 2 20 20"
                  width={20}
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M13.414 12l2.829-2.828a1 1 0 00-1.415-1.415L12 10.586 9.172 7.757a1 1 0 00-1.415 1.415L10.586 12l-2.829 2.828a1 1 0 001.415 1.415L12 13.414l2.828 2.829a1 1 0 001.415-1.415L13.414 12z"
                    fill="currentColor"
                    fillRule="evenodd"
                  />
                </svg>
              </span>
            </div>
            <span />
          </button>
        </div>
        <div
          className="c9 content"
        >
          This modal starts open.
        </div>
      </div>
    </div>
  </div>
</div>
`;

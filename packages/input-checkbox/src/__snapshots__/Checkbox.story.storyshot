// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Checkbox/Checkbox Input Default 1`] = `
.c1 {
  display: inline-block;
  vertical-align: text-bottom;
}

.c1 .farmblocks-icon {
  display: block;
}

.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  cursor: pointer;
  padding-left: 8px;
}

.c0 .centerVisibleCheckbox {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0 .hiddenCheckbox {
  opacity: 0;
  width: 0;
  margin: 0;
}

.c0 .visibleCheckbox {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  border: 1px solid;
  max-width: 16px;
  max-height: 16px;
  min-width: 16px;
  min-height: 16px;
  border-radius: 4px;
  color: #3498db;
  background-color: #FFFFFF;
  border-color: rgba(0,0,0,0.16);
}

.c0 .visibleCheckbox .checkmark {
  visibility: hidden;
}

.c0 .label {
  margin-left: 0;
}

.c0:hover .visibleCheckbox {
  border-color: #3498db;
  border-width: 2px;
}

.c0 .hiddenCheckbox:focus + div .visibleCheckbox {
  border-color: #3498db;
}

<label
  className="c0"
  onMouseUp={[Function]}
>
  <input
    className="hiddenCheckbox"
    onChange={[Function]}
    type="checkbox"
  />
  <div
    className="centerVisibleCheckbox"
  >
    <div
      className="visibleCheckbox"
    >
      <span
        className="c1"
        color="currentColor"
        size="1em"
      >
        <svg
          aria-hidden={true}
          className="farmblocks-icon checkmark"
          height="100%"
          viewBox="4 4 32 32"
          width="100%"
        >
          <path
            d="M26.177 12.432a1 1 0 111.646 1.136l-8.977 13a1 1 0 01-1.597.065l-4.023-4.924a1 1 0 111.548-1.266l3.182 3.894 8.221-11.905z"
            fill="currentColor"
            fillRule="nonzero"
          />
        </svg>
      </span>
    </div>
  </div>
</label>
`;

exports[`Storyshots Checkbox/Checkbox Input checked 1`] = `
.c1 {
  display: inline-block;
  vertical-align: text-bottom;
}

.c1 .farmblocks-icon {
  display: block;
}

.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  cursor: pointer;
  padding-left: 8px;
}

.c0 .centerVisibleCheckbox {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0 .hiddenCheckbox {
  opacity: 0;
  width: 0;
  margin: 0;
}

.c0 .visibleCheckbox {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  border: 1px solid;
  max-width: 16px;
  max-height: 16px;
  min-width: 16px;
  min-height: 16px;
  border-radius: 4px;
  color: #FFFFFF;
  background-color: #3498db;
  border-color: #3498db;
}

.c0 .visibleCheckbox .checkmark {
  visibility: visible;
}

.c0 .label {
  margin-left: 0;
}

.c0:hover .visibleCheckbox {
  color: #3498db;
  background-color: #ffffff;
  border-color: #3498db;
  border-width: 2px;
}

.c0 .hiddenCheckbox:focus + div .visibleCheckbox {
  border-color: #3498db;
}

<label
  checked={true}
  className="c0"
  onMouseUp={[Function]}
>
  <input
    checked={true}
    className="hiddenCheckbox"
    onChange={[Function]}
    type="checkbox"
  />
  <div
    className="centerVisibleCheckbox"
  >
    <div
      className="visibleCheckbox"
    >
      <span
        className="c1"
        color="currentColor"
        size="1em"
      >
        <svg
          aria-hidden={true}
          className="farmblocks-icon checkmark"
          height="100%"
          viewBox="4 4 32 32"
          width="100%"
        >
          <path
            d="M26.177 12.432a1 1 0 111.646 1.136l-8.977 13a1 1 0 01-1.597.065l-4.023-4.924a1 1 0 111.548-1.266l3.182 3.894 8.221-11.905z"
            fill="currentColor"
            fillRule="nonzero"
          />
        </svg>
      </span>
    </div>
  </div>
</label>
`;

exports[`Storyshots Checkbox/Checkbox Input disabled 1`] = `
.c1 {
  display: inline-block;
  vertical-align: text-bottom;
}

.c1 .farmblocks-icon {
  display: block;
}

.c2 {
  font-family: Lato,sans-serif;
  font-size: 16px;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  color: rgba(0,0,0,0.32);
  text-align: left;
  font-weight: 600;
}

.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  cursor: default;
  padding-left: 8px;
}

.c0 .centerVisibleCheckbox {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0 .hiddenCheckbox {
  opacity: 0;
  width: 0;
  margin: 0;
}

.c0 .visibleCheckbox {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  border: 1px solid;
  max-width: 16px;
  max-height: 16px;
  min-width: 16px;
  min-height: 16px;
  border-radius: 4px;
  color: rgba(0,0,0,0.16);
  background-color: rgba(0,0,0,0.16);
  border-color: rgba(0,0,0,0.16);
}

.c0 .visibleCheckbox .checkmark {
  visibility: visible;
}

.c0 .label {
  margin-left: 8px;
}

.c0:hover .visibleCheckbox {
  border-width: 1px;
}

.c0 .hiddenCheckbox:focus + div .visibleCheckbox {
  border-color: #3498db;
}

<label
  checked={true}
  className="c0"
  disabled={true}
  onMouseUp={[Function]}
>
  <input
    checked={true}
    className="hiddenCheckbox"
    disabled={true}
    onChange={[Function]}
    type="checkbox"
  />
  <div
    className="centerVisibleCheckbox"
  >
    <div
      className="visibleCheckbox"
    >
      <span
        className="c1"
        color="currentColor"
        size="1em"
      >
        <svg
          aria-hidden={true}
          className="farmblocks-icon checkmark"
          height="100%"
          viewBox="4 4 32 32"
          width="100%"
        >
          <path
            d="M26.177 12.432a1 1 0 111.646 1.136l-8.977 13a1 1 0 01-1.597.065l-4.023-4.924a1 1 0 111.548-1.266l3.182 3.894 8.221-11.905z"
            fill="currentColor"
            fillRule="nonzero"
          />
        </svg>
      </span>
    </div>
    <div
      className="c2 label"
      fontWeight="title"
      size={16}
      type="rgba(0, 0, 0, 0.32)"
    >
      Checkbox Label
    </div>
  </div>
</label>
`;

exports[`Storyshots Checkbox/Checkbox Input extended style 1`] = `
.c2 {
  display: inline-block;
  vertical-align: text-bottom;
}

.c2 .farmblocks-icon {
  display: block;
}

.c3 {
  font-family: Lato,sans-serif;
  font-size: 16px;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  color: #2f313a;
  text-align: left;
  font-weight: 600;
}

.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  cursor: pointer;
  padding-left: 8px;
}

.c0 .centerVisibleCheckbox {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0 .hiddenCheckbox {
  opacity: 0;
  width: 0;
  margin: 0;
}

.c0 .visibleCheckbox {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  border: 1px solid;
  max-width: 16px;
  max-height: 16px;
  min-width: 16px;
  min-height: 16px;
  border-radius: 4px;
  color: #3498db;
  background-color: #FFFFFF;
  border-color: rgba(0,0,0,0.16);
}

.c0 .visibleCheckbox .checkmark {
  visibility: hidden;
}

.c0 .label {
  margin-left: 8px;
}

.c0:hover .visibleCheckbox {
  border-color: #3498db;
  border-width: 2px;
}

.c0 .hiddenCheckbox:focus + div .visibleCheckbox {
  border-color: #3498db;
}

.c1 .visibleCheckbox {
  background: indigo;
}

.c1 .label {
  font-family: monospace;
}

<label
  className="c0 c1"
  onMouseUp={[Function]}
>
  <input
    className="hiddenCheckbox"
    onChange={[Function]}
    type="checkbox"
  />
  <div
    className="centerVisibleCheckbox"
  >
    <div
      className="visibleCheckbox"
    >
      <span
        className="c2"
        color="currentColor"
        size="1em"
      >
        <svg
          aria-hidden={true}
          className="farmblocks-icon checkmark"
          height="100%"
          viewBox="4 4 32 32"
          width="100%"
        >
          <path
            d="M26.177 12.432a1 1 0 111.646 1.136l-8.977 13a1 1 0 01-1.597.065l-4.023-4.924a1 1 0 111.548-1.266l3.182 3.894 8.221-11.905z"
            fill="currentColor"
            fillRule="nonzero"
          />
        </svg>
      </span>
    </div>
    <div
      className="c3 label"
      fontWeight="title"
      size={16}
      type="#2f313a"
    >
      Checkbox Label
    </div>
  </div>
</label>
`;

exports[`Storyshots Checkbox/Checkbox Input in a fieldset 1`] = `
.c1 {
  display: inline-block;
  vertical-align: text-bottom;
}

.c1 .farmblocks-icon {
  display: block;
}

.c2 {
  font-family: Lato,sans-serif;
  font-size: 16px;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  color: #2f313a;
  text-align: left;
  font-weight: 600;
}

.c4 {
  font-family: Lato,sans-serif;
  font-size: 16px;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  color: rgba(0,0,0,0.32);
  text-align: left;
  font-weight: 600;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c7 svg {
  -webkit-animation: eoUyJr 1.1s linear infinite;
  animation: eoUyJr 1.1s linear infinite;
}

.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  cursor: pointer;
  padding-left: 8px;
}

.c0 .centerVisibleCheckbox {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0 .hiddenCheckbox {
  opacity: 0;
  width: 0;
  margin: 0;
}

.c0 .visibleCheckbox {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  border: 1px solid;
  max-width: 16px;
  max-height: 16px;
  min-width: 16px;
  min-height: 16px;
  border-radius: 4px;
  color: #3498db;
  background-color: #FFFFFF;
  border-color: rgba(0,0,0,0.16);
}

.c0 .visibleCheckbox .checkmark {
  visibility: hidden;
}

.c0 .label {
  margin-left: 8px;
}

.c0:hover .visibleCheckbox {
  border-color: #3498db;
  border-width: 2px;
}

.c0 .hiddenCheckbox:focus + div .visibleCheckbox {
  border-color: #3498db;
}

.c3 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  cursor: default;
  padding-left: 8px;
}

.c3 .centerVisibleCheckbox {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c3 .hiddenCheckbox {
  opacity: 0;
  width: 0;
  margin: 0;
}

.c3 .visibleCheckbox {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  border: 1px solid;
  max-width: 16px;
  max-height: 16px;
  min-width: 16px;
  min-height: 16px;
  border-radius: 4px;
  color: rgba(0,0,0,0.16);
  background-color: rgba(0,0,0,0.16);
  border-color: rgba(0,0,0,0.16);
}

.c3 .visibleCheckbox .checkmark {
  visibility: hidden;
}

.c3 .label {
  margin-left: 8px;
}

.c3:hover .visibleCheckbox {
  border-width: 1px;
}

.c3 .hiddenCheckbox:focus + div .visibleCheckbox {
  border-color: #3498db;
}

.c5 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  cursor: default;
  padding-left: 8px;
}

.c5 .centerVisibleCheckbox {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c5 .hiddenCheckbox {
  opacity: 0;
  width: 0;
  margin: 0;
}

.c5 .visibleCheckbox {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  border: 1px solid;
  max-width: 16px;
  max-height: 16px;
  min-width: 16px;
  min-height: 16px;
  border-radius: 4px;
  color: rgba(0,0,0,0.16);
  background-color: rgba(0,0,0,0.16);
  border-color: rgba(0,0,0,0.16);
}

.c5 .visibleCheckbox .checkmark {
  visibility: visible;
}

.c5 .label {
  margin-left: 8px;
}

.c5:hover .visibleCheckbox {
  border-width: 1px;
}

.c5 .hiddenCheckbox:focus + div .visibleCheckbox {
  border-color: #3498db;
}

.c6 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  cursor: pointer;
  padding-left: 8px;
}

.c6 .centerVisibleCheckbox {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c6 .hiddenCheckbox {
  opacity: 0;
  width: 0;
  margin: 0;
}

.c6 .visibleCheckbox {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  border: 1px solid;
  max-width: 16px;
  max-height: 16px;
  min-width: 16px;
  min-height: 16px;
  border-radius: 4px;
  color: #FFFFFF;
  background-color: #3498db;
  border-color: #3498db;
}

.c6 .visibleCheckbox .checkmark {
  visibility: visible;
}

.c6 .label {
  margin-left: 8px;
}

.c6:hover .visibleCheckbox {
  color: #3498db;
  background-color: #ffffff;
  border-color: #3498db;
  border-width: 2px;
}

.c6 .hiddenCheckbox:focus + div .visibleCheckbox {
  border-color: #3498db;
}

<fieldset>
  <label
    className="c0"
    onMouseUp={[Function]}
  >
    <input
      className="hiddenCheckbox"
      name="foo"
      onChange={[Function]}
      type="checkbox"
    />
    <div
      className="centerVisibleCheckbox"
    >
      <div
        className="visibleCheckbox"
      >
        <span
          className="c1"
          color="currentColor"
          size="1em"
        >
          <svg
            aria-hidden={true}
            className="farmblocks-icon checkmark"
            height="100%"
            viewBox="4 4 32 32"
            width="100%"
          >
            <path
              d="M26.177 12.432a1 1 0 111.646 1.136l-8.977 13a1 1 0 01-1.597.065l-4.023-4.924a1 1 0 111.548-1.266l3.182 3.894 8.221-11.905z"
              fill="currentColor"
              fillRule="nonzero"
            />
          </svg>
        </span>
      </div>
      <div
        className="c2 label"
        fontWeight="title"
        size={16}
        type="#2f313a"
      >
        Checkbox Label 1
      </div>
    </div>
  </label>
  <label
    className="c3"
    disabled={true}
    onMouseUp={[Function]}
  >
    <input
      className="hiddenCheckbox"
      disabled={true}
      name="foo"
      onChange={[Function]}
      type="checkbox"
    />
    <div
      className="centerVisibleCheckbox"
    >
      <div
        className="visibleCheckbox"
      >
        <span
          className="c1"
          color="currentColor"
          size="1em"
        >
          <svg
            aria-hidden={true}
            className="farmblocks-icon checkmark"
            height="100%"
            viewBox="4 4 32 32"
            width="100%"
          >
            <path
              d="M26.177 12.432a1 1 0 111.646 1.136l-8.977 13a1 1 0 01-1.597.065l-4.023-4.924a1 1 0 111.548-1.266l3.182 3.894 8.221-11.905z"
              fill="currentColor"
              fillRule="nonzero"
            />
          </svg>
        </span>
      </div>
      <div
        className="c4 label"
        fontWeight="title"
        size={16}
        type="rgba(0, 0, 0, 0.32)"
      >
        Disabled Checkbox
      </div>
    </div>
  </label>
   
  <label
    checked={true}
    className="c5"
    disabled={true}
    onMouseUp={[Function]}
  >
    <input
      checked={true}
      className="hiddenCheckbox"
      disabled={true}
      name="foo"
      onChange={[Function]}
      type="checkbox"
    />
    <div
      className="centerVisibleCheckbox"
    >
      <div
        className="visibleCheckbox"
      >
        <span
          className="c1"
          color="currentColor"
          size="1em"
        >
          <svg
            aria-hidden={true}
            className="farmblocks-icon checkmark"
            height="100%"
            viewBox="4 4 32 32"
            width="100%"
          >
            <path
              d="M26.177 12.432a1 1 0 111.646 1.136l-8.977 13a1 1 0 01-1.597.065l-4.023-4.924a1 1 0 111.548-1.266l3.182 3.894 8.221-11.905z"
              fill="currentColor"
              fillRule="nonzero"
            />
          </svg>
        </span>
      </div>
      <div
        className="c4 label"
        fontWeight="title"
        size={16}
        type="rgba(0, 0, 0, 0.32)"
      >
        Checked Disabled Checkbox
      </div>
    </div>
  </label>
  <label
    className="c0"
    onMouseUp={[Function]}
  >
    <input
      className="hiddenCheckbox"
      name="foo"
      onChange={[Function]}
      type="checkbox"
    />
    <div
      className="centerVisibleCheckbox"
    >
      <div
        className="visibleCheckbox"
      >
        <span
          className="c1"
          color="currentColor"
          size="1em"
        >
          <svg
            aria-hidden={true}
            className="farmblocks-icon checkmark"
            height="100%"
            viewBox="4 4 32 32"
            width="100%"
          >
            <path
              d="M26.177 12.432a1 1 0 111.646 1.136l-8.977 13a1 1 0 01-1.597.065l-4.023-4.924a1 1 0 111.548-1.266l3.182 3.894 8.221-11.905z"
              fill="currentColor"
              fillRule="nonzero"
            />
          </svg>
        </span>
      </div>
      <div
        className="c2 label"
        fontWeight="title"
        size={16}
        type="#2f313a"
      >
        Checkbox Label 3
      </div>
    </div>
  </label>
  <label
    checked={true}
    className="c6"
    onMouseUp={[Function]}
  >
    <input
      checked={true}
      className="hiddenCheckbox"
      name="foo"
      onChange={[Function]}
      type="checkbox"
    />
    <div
      className="centerVisibleCheckbox"
    >
      <div
        className="visibleCheckbox"
      >
        <span
          className="c1"
          color="currentColor"
          size="1em"
        >
          <svg
            aria-hidden={true}
            className="farmblocks-icon checkmark"
            height="100%"
            viewBox="4 4 32 32"
            width="100%"
          >
            <path
              d="M26.177 12.432a1 1 0 111.646 1.136l-8.977 13a1 1 0 01-1.597.065l-4.023-4.924a1 1 0 111.548-1.266l3.182 3.894 8.221-11.905z"
              fill="currentColor"
              fillRule="nonzero"
            />
          </svg>
        </span>
      </div>
      <div
        className="c2 label"
        fontWeight="title"
        size={16}
        type="#2f313a"
      >
        Checkbox Label 4
      </div>
    </div>
  </label>
  <label
    className="c3"
    disabled={true}
    onMouseUp={[Function]}
  >
    <input
      className="hiddenCheckbox"
      onChange={[Function]}
      type="checkbox"
    />
    <div
      className="centerVisibleCheckbox"
    >
      <div
        className="c7"
      >
        <span
          className="c1"
          color="currentColor"
          size="1em"
        >
          <svg
            aria-hidden={true}
            className="farmblocks-icon "
            height="1em"
            viewBox="4 4 32 32"
            width="1em"
          >
            <path
              d="M19 8a1 1 0 012 0v6a1 1 0 01-2 0V8zm2 24a1 1 0 01-2 0v-5a1 1 0 012 0v5zM8 21a1 1 0 010-2h6a1 1 0 010 2H8zm18-.5a.5.5 0 110-1h6a.5.5 0 110 1h-6zm3.197 7.283a1 1 0 01-1.414 1.414l-3.86-3.86a1 1 0 011.414-1.414l3.86 3.86zm-12.87-12.87a1 1 0 01-1.414 1.414l-4.11-4.11a1 1 0 011.414-1.414l4.11 4.11zm-1.664 9.01a1 1 0 011.414 1.414l-3.86 3.86a1 1 0 01-1.414-1.414l3.86-3.86zm13.12-13.12a1 1 0 011.414 1.414l-4.11 4.11a1 1 0 01-1.414-1.414l4.11-4.11z"
              fill="currentColor"
              fillRule="nonzero"
            />
          </svg>
        </span>
      </div>
      <div
        className="c2 label"
        fontWeight="title"
        size={16}
        type="#2f313a"
      >
        Checkbox
      </div>
    </div>
  </label>
  <div
    style={
      Object {
        "marginTop": 24,
      }
    }
  >
    <div>
      Another field
      <input
        type="text"
      />
    </div>
  </div>
</fieldset>
`;

exports[`Storyshots Checkbox/Checkbox Input with loading state control 1`] = `
.c1 {
  display: inline-block;
  vertical-align: text-bottom;
}

.c1 .farmblocks-icon {
  display: block;
}

.c2 {
  font-family: Lato,sans-serif;
  font-size: 16px;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  color: #2f313a;
  text-align: left;
  font-weight: 600;
}

.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  cursor: pointer;
  padding-left: 8px;
}

.c0 .centerVisibleCheckbox {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0 .hiddenCheckbox {
  opacity: 0;
  width: 0;
  margin: 0;
}

.c0 .visibleCheckbox {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  border: 1px solid;
  max-width: 16px;
  max-height: 16px;
  min-width: 16px;
  min-height: 16px;
  border-radius: 4px;
  color: #3498db;
  background-color: #FFFFFF;
  border-color: rgba(0,0,0,0.16);
}

.c0 .visibleCheckbox .checkmark {
  visibility: hidden;
}

.c0 .label {
  margin-left: 8px;
}

.c0:hover .visibleCheckbox {
  border-color: #3498db;
  border-width: 2px;
}

.c0 .hiddenCheckbox:focus + div .visibleCheckbox {
  border-color: #3498db;
}

<label
  checked={false}
  className="c0"
  disabled={false}
  onMouseUp={[Function]}
>
  <input
    checked={false}
    className="hiddenCheckbox"
    onChange={[Function]}
    type="checkbox"
  />
  <div
    className="centerVisibleCheckbox"
  >
    <div
      className="visibleCheckbox"
    >
      <span
        className="c1"
        color="currentColor"
        size="1em"
      >
        <svg
          aria-hidden={true}
          className="farmblocks-icon checkmark"
          height="100%"
          viewBox="4 4 32 32"
          width="100%"
        >
          <path
            d="M26.177 12.432a1 1 0 111.646 1.136l-8.977 13a1 1 0 01-1.597.065l-4.023-4.924a1 1 0 111.548-1.266l3.182 3.894 8.221-11.905z"
            fill="currentColor"
            fillRule="nonzero"
          />
        </svg>
      </span>
    </div>
    <div
      className="c2 label"
      fontWeight="title"
      size={16}
      type="#2f313a"
    >
      Checkbox Label
    </div>
  </div>
</label>
`;

exports[`Storyshots Checkbox/Checkbox Input with onChange event 1`] = `
.c1 {
  display: inline-block;
  vertical-align: text-bottom;
}

.c1 .farmblocks-icon {
  display: block;
}

.c2 {
  font-family: Lato,sans-serif;
  font-size: 16px;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  color: #2f313a;
  text-align: left;
  font-weight: 600;
}

.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  cursor: pointer;
  padding-left: 8px;
}

.c0 .centerVisibleCheckbox {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0 .hiddenCheckbox {
  opacity: 0;
  width: 0;
  margin: 0;
}

.c0 .visibleCheckbox {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  border: 1px solid;
  max-width: 16px;
  max-height: 16px;
  min-width: 16px;
  min-height: 16px;
  border-radius: 4px;
  color: #3498db;
  background-color: #FFFFFF;
  border-color: rgba(0,0,0,0.16);
}

.c0 .visibleCheckbox .checkmark {
  visibility: hidden;
}

.c0 .label {
  margin-left: 8px;
}

.c0:hover .visibleCheckbox {
  border-color: #3498db;
  border-width: 2px;
}

.c0 .hiddenCheckbox:focus + div .visibleCheckbox {
  border-color: #3498db;
}

<label
  className="c0"
  onMouseUp={[Function]}
>
  <input
    className="hiddenCheckbox"
    onChange={[Function]}
    type="checkbox"
  />
  <div
    className="centerVisibleCheckbox"
  >
    <div
      className="visibleCheckbox"
    >
      <span
        className="c1"
        color="currentColor"
        size="1em"
      >
        <svg
          aria-hidden={true}
          className="farmblocks-icon checkmark"
          height="100%"
          viewBox="4 4 32 32"
          width="100%"
        >
          <path
            d="M26.177 12.432a1 1 0 111.646 1.136l-8.977 13a1 1 0 01-1.597.065l-4.023-4.924a1 1 0 111.548-1.266l3.182 3.894 8.221-11.905z"
            fill="currentColor"
            fillRule="nonzero"
          />
        </svg>
      </span>
    </div>
    <div
      className="c2 label"
      fontWeight="title"
      size={16}
      type="#2f313a"
    >
      Checkbox Label
    </div>
  </div>
</label>
`;

exports[`Storyshots Checkbox/Checkbox Input with state control 1`] = `
.c1 {
  display: inline-block;
  vertical-align: text-bottom;
}

.c1 .farmblocks-icon {
  display: block;
}

.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  cursor: pointer;
  padding-left: 8px;
}

.c0 .centerVisibleCheckbox {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0 .hiddenCheckbox {
  opacity: 0;
  width: 0;
  margin: 0;
}

.c0 .visibleCheckbox {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  border: 1px solid;
  max-width: 16px;
  max-height: 16px;
  min-width: 16px;
  min-height: 16px;
  border-radius: 4px;
  color: #3498db;
  background-color: #FFFFFF;
  border-color: rgba(0,0,0,0.16);
}

.c0 .visibleCheckbox .checkmark {
  visibility: hidden;
}

.c0 .label {
  margin-left: 0;
}

.c0:hover .visibleCheckbox {
  border-color: #3498db;
  border-width: 2px;
}

.c0 .hiddenCheckbox:focus + div .visibleCheckbox {
  border-color: #3498db;
}

<label
  checked={false}
  className="c0"
  onMouseUp={[Function]}
>
  <input
    checked={false}
    className="hiddenCheckbox"
    onChange={[Function]}
    type="checkbox"
  />
  <div
    className="centerVisibleCheckbox"
  >
    <div
      className="visibleCheckbox"
    >
      <span
        className="c1"
        color="currentColor"
        size="1em"
      >
        <svg
          aria-hidden={true}
          className="farmblocks-icon checkmark"
          height="100%"
          viewBox="4 4 32 32"
          width="100%"
        >
          <path
            d="M26.177 12.432a1 1 0 111.646 1.136l-8.977 13a1 1 0 01-1.597.065l-4.023-4.924a1 1 0 111.548-1.266l3.182 3.894 8.221-11.905z"
            fill="currentColor"
            fillRule="nonzero"
          />
        </svg>
      </span>
    </div>
  </div>
</label>
`;

exports[`Storyshots Checkbox/Checkbox Input with text label 1`] = `
.c1 {
  display: inline-block;
  vertical-align: text-bottom;
}

.c1 .farmblocks-icon {
  display: block;
}

.c2 {
  font-family: Lato,sans-serif;
  font-size: 16px;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  color: #2f313a;
  text-align: left;
  font-weight: 600;
}

.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  cursor: pointer;
  padding-left: 8px;
}

.c0 .centerVisibleCheckbox {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0 .hiddenCheckbox {
  opacity: 0;
  width: 0;
  margin: 0;
}

.c0 .visibleCheckbox {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  border: 1px solid;
  max-width: 16px;
  max-height: 16px;
  min-width: 16px;
  min-height: 16px;
  border-radius: 4px;
  color: #3498db;
  background-color: #FFFFFF;
  border-color: rgba(0,0,0,0.16);
}

.c0 .visibleCheckbox .checkmark {
  visibility: hidden;
}

.c0 .label {
  margin-left: 8px;
}

.c0:hover .visibleCheckbox {
  border-color: #3498db;
  border-width: 2px;
}

.c0 .hiddenCheckbox:focus + div .visibleCheckbox {
  border-color: #3498db;
}

<label
  className="c0"
  onMouseUp={[Function]}
>
  <input
    className="hiddenCheckbox"
    onChange={[Function]}
    type="checkbox"
  />
  <div
    className="centerVisibleCheckbox"
  >
    <div
      className="visibleCheckbox"
    >
      <span
        className="c1"
        color="currentColor"
        size="1em"
      >
        <svg
          aria-hidden={true}
          className="farmblocks-icon checkmark"
          height="100%"
          viewBox="4 4 32 32"
          width="100%"
        >
          <path
            d="M26.177 12.432a1 1 0 111.646 1.136l-8.977 13a1 1 0 01-1.597.065l-4.023-4.924a1 1 0 111.548-1.266l3.182 3.894 8.221-11.905z"
            fill="currentColor"
            fillRule="nonzero"
          />
        </svg>
      </span>
    </div>
    <div
      className="c2 label"
      fontWeight="title"
      size={16}
      type="#2f313a"
    >
      Checkbox Label
    </div>
  </div>
</label>
`;

exports[`Storyshots Checkbox/Switch Input Default 1`] = `
.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  cursor: pointer;
  padding-left: 8px;
}

.c0 .centerVisibleCheckbox {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0 .hiddenCheckbox {
  opacity: 0;
  width: 0;
  margin: 0;
}

.c0 .visibleCheckbox {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  border: 1px solid;
  width: 56px;
  height: 32px;
  border-radius: 100px;
  border-color: rgba(0,0,0,0.16);
  background: #f6f8f9;
}

.c0 .visibleCheckbox .toggle {
  position: relative;
  -webkit-transition: ease all 0.2s;
  transition: ease all 0.2s;
  width: 24px;
  height: 24px;
  border: 1px solid transparent;
  border-radius: 24px;
  box-sizing: border-box;
  background: white;
  box-shadow: 0 0 2px 0 rgba(0,0,0,0.16);
  left: 4px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0 .label {
  margin-left: 0;
}

.c0:hover .visibleCheckbox {
  background: #f6f8f9;
  border-color: #3498db;
  border-width: 1px;
}

.c0:hover .visibleCheckbox .toggle {
  border-color: #3498db;
  left: 10px;
}

.c0 .hiddenCheckbox:focus + div .visibleCheckbox {
  outline: auto 2px Highlight;
  outline: auto 5px -webkit-focus-ring-color;
}

<label
  className="c0"
  onMouseUp={[Function]}
>
  <input
    className="hiddenCheckbox"
    onChange={[Function]}
    type="checkbox"
  />
  <div
    className="centerVisibleCheckbox"
  >
    <div
      className="visibleCheckbox"
    >
      <div
        className="toggle"
      />
    </div>
  </div>
</label>
`;

exports[`Storyshots Checkbox/Switch Input checked 1`] = `
.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  cursor: pointer;
  padding-left: 8px;
}

.c0 .centerVisibleCheckbox {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0 .hiddenCheckbox {
  opacity: 0;
  width: 0;
  margin: 0;
}

.c0 .visibleCheckbox {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  border: 1px solid;
  width: 56px;
  height: 32px;
  border-radius: 100px;
  border-color: rgba(0,0,0,0.16);
  background: #2ecc71;
}

.c0 .visibleCheckbox .toggle {
  position: relative;
  -webkit-transition: ease all 0.2s;
  transition: ease all 0.2s;
  width: 24px;
  height: 24px;
  border: 1px solid transparent;
  border-radius: 24px;
  box-sizing: border-box;
  background: white;
  box-shadow: 0 0 2px 0 rgba(0,0,0,0.16);
  left: 28px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0 .label {
  margin-left: 0;
}

.c0:hover .visibleCheckbox {
  background: #27ae60;
  border-color: rgba(0,0,0,0.16);
  border-width: 1px;
}

.c0:hover .visibleCheckbox .toggle {
  border-color: #2ecc71;
  left: 22px;
}

.c0 .hiddenCheckbox:focus + div .visibleCheckbox {
  outline: auto 2px Highlight;
  outline: auto 5px -webkit-focus-ring-color;
}

<label
  checked={true}
  className="c0"
  onMouseUp={[Function]}
>
  <input
    checked={true}
    className="hiddenCheckbox"
    onChange={[Function]}
    type="checkbox"
  />
  <div
    className="centerVisibleCheckbox"
  >
    <div
      className="visibleCheckbox"
    >
      <div
        className="toggle"
      />
    </div>
  </div>
</label>
`;

exports[`Storyshots Checkbox/Switch Input disabled 1`] = `
.c1 {
  font-family: Lato,sans-serif;
  font-size: 16px;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  color: rgba(0,0,0,0.32);
  text-align: left;
  font-weight: normal;
}

.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  cursor: default;
  padding-left: 8px;
}

.c0 .centerVisibleCheckbox {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0 .hiddenCheckbox {
  opacity: 0;
  width: 0;
  margin: 0;
}

.c0 .visibleCheckbox {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  border: 1px solid;
  width: 56px;
  height: 32px;
  border-radius: 100px;
  border-color: rgba(0,0,0,0.16);
  background: rgba(0,0,0,0.32);
}

.c0 .visibleCheckbox .toggle {
  position: relative;
  -webkit-transition: ease all 0.2s;
  transition: ease all 0.2s;
  width: 24px;
  height: 24px;
  border: 1px solid transparent;
  border-radius: 24px;
  box-sizing: border-box;
  background: rgba(255,255,255,0.32);
  box-shadow: 0 0 2px 0 rgba(0,0,0,0.16);
  left: 28px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0 .label {
  margin-left: 8px;
}

.c0:hover .visibleCheckbox {
  border-width: 1px;
}

.c0 .hiddenCheckbox:focus + div .visibleCheckbox {
  outline: auto 2px Highlight;
  outline: auto 5px -webkit-focus-ring-color;
}

<label
  checked={true}
  className="c0"
  disabled={true}
  onMouseUp={[Function]}
>
  <input
    checked={true}
    className="hiddenCheckbox"
    disabled={true}
    onChange={[Function]}
    type="checkbox"
  />
  <div
    className="centerVisibleCheckbox"
  >
    <div
      className="visibleCheckbox"
    >
      <div
        className="toggle"
      />
    </div>
    <div
      className="c1 label"
      fontWeight="normal"
      size={16}
      type="rgba(0, 0, 0, 0.32)"
    >
      Checkbox Label
    </div>
  </div>
</label>
`;

exports[`Storyshots Checkbox/Switch Input extended style 1`] = `
.c2 {
  font-family: Lato,sans-serif;
  font-size: 16px;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  color: #2f313a;
  text-align: left;
  font-weight: normal;
}

.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  cursor: pointer;
  padding-left: 8px;
}

.c0 .centerVisibleCheckbox {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0 .hiddenCheckbox {
  opacity: 0;
  width: 0;
  margin: 0;
}

.c0 .visibleCheckbox {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  border: 1px solid;
  width: 56px;
  height: 32px;
  border-radius: 100px;
  border-color: rgba(0,0,0,0.16);
  background: #f6f8f9;
}

.c0 .visibleCheckbox .toggle {
  position: relative;
  -webkit-transition: ease all 0.2s;
  transition: ease all 0.2s;
  width: 24px;
  height: 24px;
  border: 1px solid transparent;
  border-radius: 24px;
  box-sizing: border-box;
  background: white;
  box-shadow: 0 0 2px 0 rgba(0,0,0,0.16);
  left: 4px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0 .label {
  margin-left: 8px;
}

.c0:hover .visibleCheckbox {
  background: #f6f8f9;
  border-color: #3498db;
  border-width: 1px;
}

.c0:hover .visibleCheckbox .toggle {
  border-color: #3498db;
  left: 10px;
}

.c0 .hiddenCheckbox:focus + div .visibleCheckbox {
  outline: auto 2px Highlight;
  outline: auto 5px -webkit-focus-ring-color;
}

.c1 .visibleCheckbox {
  background: indigo;
}

.c1 .label {
  font-family: monospace;
}

<label
  className="c0 c1"
  onMouseUp={[Function]}
>
  <input
    className="hiddenCheckbox"
    onChange={[Function]}
    type="checkbox"
  />
  <div
    className="centerVisibleCheckbox"
  >
    <div
      className="visibleCheckbox"
    >
      <div
        className="toggle"
      />
    </div>
    <div
      className="c2 label"
      fontWeight="normal"
      size={16}
      type="#2f313a"
    >
      Checkbox Label
    </div>
  </div>
</label>
`;

exports[`Storyshots Checkbox/Switch Input in a fieldset 1`] = `
.c7 {
  display: inline-block;
  vertical-align: text-bottom;
}

.c7 .farmblocks-icon {
  display: block;
}

.c1 {
  font-family: Lato,sans-serif;
  font-size: 16px;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  color: #2f313a;
  text-align: left;
  font-weight: normal;
}

.c3 {
  font-family: Lato,sans-serif;
  font-size: 16px;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  color: rgba(0,0,0,0.32);
  text-align: left;
  font-weight: normal;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c6 svg {
  -webkit-animation: eoUyJr 1.1s linear infinite;
  animation: eoUyJr 1.1s linear infinite;
}

.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  cursor: pointer;
  padding-left: 8px;
}

.c0 .centerVisibleCheckbox {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0 .hiddenCheckbox {
  opacity: 0;
  width: 0;
  margin: 0;
}

.c0 .visibleCheckbox {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  border: 1px solid;
  width: 56px;
  height: 32px;
  border-radius: 100px;
  border-color: rgba(0,0,0,0.16);
  background: #f6f8f9;
}

.c0 .visibleCheckbox .toggle {
  position: relative;
  -webkit-transition: ease all 0.2s;
  transition: ease all 0.2s;
  width: 24px;
  height: 24px;
  border: 1px solid transparent;
  border-radius: 24px;
  box-sizing: border-box;
  background: white;
  box-shadow: 0 0 2px 0 rgba(0,0,0,0.16);
  left: 4px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0 .label {
  margin-left: 8px;
}

.c0:hover .visibleCheckbox {
  background: #f6f8f9;
  border-color: #3498db;
  border-width: 1px;
}

.c0:hover .visibleCheckbox .toggle {
  border-color: #3498db;
  left: 10px;
}

.c0 .hiddenCheckbox:focus + div .visibleCheckbox {
  outline: auto 2px Highlight;
  outline: auto 5px -webkit-focus-ring-color;
}

.c2 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  cursor: default;
  padding-left: 8px;
}

.c2 .centerVisibleCheckbox {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c2 .hiddenCheckbox {
  opacity: 0;
  width: 0;
  margin: 0;
}

.c2 .visibleCheckbox {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  border: 1px solid;
  width: 56px;
  height: 32px;
  border-radius: 100px;
  border-color: rgba(0,0,0,0.16);
  background: rgba(0,0,0,0.32);
}

.c2 .visibleCheckbox .toggle {
  position: relative;
  -webkit-transition: ease all 0.2s;
  transition: ease all 0.2s;
  width: 24px;
  height: 24px;
  border: 1px solid transparent;
  border-radius: 24px;
  box-sizing: border-box;
  background: rgba(255,255,255,0.32);
  box-shadow: 0 0 2px 0 rgba(0,0,0,0.16);
  left: 4px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c2 .label {
  margin-left: 8px;
}

.c2:hover .visibleCheckbox {
  border-width: 1px;
}

.c2 .hiddenCheckbox:focus + div .visibleCheckbox {
  outline: auto 2px Highlight;
  outline: auto 5px -webkit-focus-ring-color;
}

.c4 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  cursor: default;
  padding-left: 8px;
}

.c4 .centerVisibleCheckbox {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c4 .hiddenCheckbox {
  opacity: 0;
  width: 0;
  margin: 0;
}

.c4 .visibleCheckbox {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  border: 1px solid;
  width: 56px;
  height: 32px;
  border-radius: 100px;
  border-color: rgba(0,0,0,0.16);
  background: rgba(0,0,0,0.32);
}

.c4 .visibleCheckbox .toggle {
  position: relative;
  -webkit-transition: ease all 0.2s;
  transition: ease all 0.2s;
  width: 24px;
  height: 24px;
  border: 1px solid transparent;
  border-radius: 24px;
  box-sizing: border-box;
  background: rgba(255,255,255,0.32);
  box-shadow: 0 0 2px 0 rgba(0,0,0,0.16);
  left: 28px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c4 .label {
  margin-left: 8px;
}

.c4:hover .visibleCheckbox {
  border-width: 1px;
}

.c4 .hiddenCheckbox:focus + div .visibleCheckbox {
  outline: auto 2px Highlight;
  outline: auto 5px -webkit-focus-ring-color;
}

.c5 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  cursor: pointer;
  padding-left: 8px;
}

.c5 .centerVisibleCheckbox {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c5 .hiddenCheckbox {
  opacity: 0;
  width: 0;
  margin: 0;
}

.c5 .visibleCheckbox {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  border: 1px solid;
  width: 56px;
  height: 32px;
  border-radius: 100px;
  border-color: rgba(0,0,0,0.16);
  background: #2ecc71;
}

.c5 .visibleCheckbox .toggle {
  position: relative;
  -webkit-transition: ease all 0.2s;
  transition: ease all 0.2s;
  width: 24px;
  height: 24px;
  border: 1px solid transparent;
  border-radius: 24px;
  box-sizing: border-box;
  background: white;
  box-shadow: 0 0 2px 0 rgba(0,0,0,0.16);
  left: 28px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c5 .label {
  margin-left: 8px;
}

.c5:hover .visibleCheckbox {
  background: #27ae60;
  border-color: rgba(0,0,0,0.16);
  border-width: 1px;
}

.c5:hover .visibleCheckbox .toggle {
  border-color: #2ecc71;
  left: 22px;
}

.c5 .hiddenCheckbox:focus + div .visibleCheckbox {
  outline: auto 2px Highlight;
  outline: auto 5px -webkit-focus-ring-color;
}

<fieldset>
  <label
    className="c0"
    onMouseUp={[Function]}
  >
    <input
      className="hiddenCheckbox"
      name="foo"
      onChange={[Function]}
      type="checkbox"
    />
    <div
      className="centerVisibleCheckbox"
    >
      <div
        className="visibleCheckbox"
      >
        <div
          className="toggle"
        />
      </div>
      <div
        className="c1 label"
        fontWeight="normal"
        size={16}
        type="#2f313a"
      >
        Checkbox Label 1
      </div>
    </div>
  </label>
  <label
    className="c2"
    disabled={true}
    onMouseUp={[Function]}
  >
    <input
      className="hiddenCheckbox"
      disabled={true}
      name="foo"
      onChange={[Function]}
      type="checkbox"
    />
    <div
      className="centerVisibleCheckbox"
    >
      <div
        className="visibleCheckbox"
      >
        <div
          className="toggle"
        />
      </div>
      <div
        className="c3 label"
        fontWeight="normal"
        size={16}
        type="rgba(0, 0, 0, 0.32)"
      >
        Disabled Checkbox
      </div>
    </div>
  </label>
   
  <label
    checked={true}
    className="c4"
    disabled={true}
    onMouseUp={[Function]}
  >
    <input
      checked={true}
      className="hiddenCheckbox"
      disabled={true}
      name="foo"
      onChange={[Function]}
      type="checkbox"
    />
    <div
      className="centerVisibleCheckbox"
    >
      <div
        className="visibleCheckbox"
      >
        <div
          className="toggle"
        />
      </div>
      <div
        className="c3 label"
        fontWeight="normal"
        size={16}
        type="rgba(0, 0, 0, 0.32)"
      >
        Checked Disabled Checkbox
      </div>
    </div>
  </label>
  <label
    className="c0"
    onMouseUp={[Function]}
  >
    <input
      className="hiddenCheckbox"
      name="foo"
      onChange={[Function]}
      type="checkbox"
    />
    <div
      className="centerVisibleCheckbox"
    >
      <div
        className="visibleCheckbox"
      >
        <div
          className="toggle"
        />
      </div>
      <div
        className="c1 label"
        fontWeight="normal"
        size={16}
        type="#2f313a"
      >
        Checkbox Label 3
      </div>
    </div>
  </label>
  <label
    checked={true}
    className="c5"
    onMouseUp={[Function]}
  >
    <input
      checked={true}
      className="hiddenCheckbox"
      name="foo"
      onChange={[Function]}
      type="checkbox"
    />
    <div
      className="centerVisibleCheckbox"
    >
      <div
        className="visibleCheckbox"
      >
        <div
          className="toggle"
        />
      </div>
      <div
        className="c1 label"
        fontWeight="normal"
        size={16}
        type="#2f313a"
      >
        Checkbox Label 4
      </div>
    </div>
  </label>
  <label
    className="c2"
    disabled={true}
    onMouseUp={[Function]}
  >
    <input
      className="hiddenCheckbox"
      onChange={[Function]}
      type="checkbox"
    />
    <div
      className="centerVisibleCheckbox"
    >
      <div
        className="visibleCheckbox"
      >
        <div
          className="toggle"
        >
          <div
            className="c6"
          >
            <span
              className="c7"
              color="currentColor"
              size="1em"
            >
              <svg
                aria-hidden={true}
                className="farmblocks-icon "
                height="1em"
                viewBox="4 4 32 32"
                width="1em"
              >
                <path
                  d="M19 8a1 1 0 012 0v6a1 1 0 01-2 0V8zm2 24a1 1 0 01-2 0v-5a1 1 0 012 0v5zM8 21a1 1 0 010-2h6a1 1 0 010 2H8zm18-.5a.5.5 0 110-1h6a.5.5 0 110 1h-6zm3.197 7.283a1 1 0 01-1.414 1.414l-3.86-3.86a1 1 0 011.414-1.414l3.86 3.86zm-12.87-12.87a1 1 0 01-1.414 1.414l-4.11-4.11a1 1 0 011.414-1.414l4.11 4.11zm-1.664 9.01a1 1 0 011.414 1.414l-3.86 3.86a1 1 0 01-1.414-1.414l3.86-3.86zm13.12-13.12a1 1 0 011.414 1.414l-4.11 4.11a1 1 0 01-1.414-1.414l4.11-4.11z"
                  fill="currentColor"
                  fillRule="nonzero"
                />
              </svg>
            </span>
          </div>
        </div>
      </div>
      <div
        className="c1 label"
        fontWeight="normal"
        size={16}
        type="#2f313a"
      >
        Checkbox
      </div>
    </div>
  </label>
  <div
    style={
      Object {
        "marginTop": 24,
      }
    }
  >
    <div>
      Another field
      <input
        type="text"
      />
    </div>
  </div>
</fieldset>
`;

exports[`Storyshots Checkbox/Switch Input with loading state control 1`] = `
.c1 {
  font-family: Lato,sans-serif;
  font-size: 16px;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  color: #2f313a;
  text-align: left;
  font-weight: normal;
}

.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  cursor: pointer;
  padding-left: 8px;
}

.c0 .centerVisibleCheckbox {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0 .hiddenCheckbox {
  opacity: 0;
  width: 0;
  margin: 0;
}

.c0 .visibleCheckbox {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  border: 1px solid;
  width: 56px;
  height: 32px;
  border-radius: 100px;
  border-color: rgba(0,0,0,0.16);
  background: #f6f8f9;
}

.c0 .visibleCheckbox .toggle {
  position: relative;
  -webkit-transition: ease all 0.2s;
  transition: ease all 0.2s;
  width: 24px;
  height: 24px;
  border: 1px solid transparent;
  border-radius: 24px;
  box-sizing: border-box;
  background: white;
  box-shadow: 0 0 2px 0 rgba(0,0,0,0.16);
  left: 4px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0 .label {
  margin-left: 8px;
}

.c0:hover .visibleCheckbox {
  background: #f6f8f9;
  border-color: #3498db;
  border-width: 1px;
}

.c0:hover .visibleCheckbox .toggle {
  border-color: #3498db;
  left: 10px;
}

.c0 .hiddenCheckbox:focus + div .visibleCheckbox {
  outline: auto 2px Highlight;
  outline: auto 5px -webkit-focus-ring-color;
}

<label
  checked={false}
  className="c0"
  disabled={false}
  onMouseUp={[Function]}
>
  <input
    checked={false}
    className="hiddenCheckbox"
    onChange={[Function]}
    type="checkbox"
  />
  <div
    className="centerVisibleCheckbox"
  >
    <div
      className="visibleCheckbox"
    >
      <div
        className="toggle"
      />
    </div>
    <div
      className="c1 label"
      fontWeight="normal"
      size={16}
      type="#2f313a"
    >
      Checkbox Label
    </div>
  </div>
</label>
`;

exports[`Storyshots Checkbox/Switch Input with onChange event 1`] = `
.c1 {
  font-family: Lato,sans-serif;
  font-size: 16px;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  color: #2f313a;
  text-align: left;
  font-weight: normal;
}

.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  cursor: pointer;
  padding-left: 8px;
}

.c0 .centerVisibleCheckbox {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0 .hiddenCheckbox {
  opacity: 0;
  width: 0;
  margin: 0;
}

.c0 .visibleCheckbox {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  border: 1px solid;
  width: 56px;
  height: 32px;
  border-radius: 100px;
  border-color: rgba(0,0,0,0.16);
  background: #f6f8f9;
}

.c0 .visibleCheckbox .toggle {
  position: relative;
  -webkit-transition: ease all 0.2s;
  transition: ease all 0.2s;
  width: 24px;
  height: 24px;
  border: 1px solid transparent;
  border-radius: 24px;
  box-sizing: border-box;
  background: white;
  box-shadow: 0 0 2px 0 rgba(0,0,0,0.16);
  left: 4px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0 .label {
  margin-left: 8px;
}

.c0:hover .visibleCheckbox {
  background: #f6f8f9;
  border-color: #3498db;
  border-width: 1px;
}

.c0:hover .visibleCheckbox .toggle {
  border-color: #3498db;
  left: 10px;
}

.c0 .hiddenCheckbox:focus + div .visibleCheckbox {
  outline: auto 2px Highlight;
  outline: auto 5px -webkit-focus-ring-color;
}

<label
  className="c0"
  onMouseUp={[Function]}
>
  <input
    className="hiddenCheckbox"
    onChange={[Function]}
    type="checkbox"
  />
  <div
    className="centerVisibleCheckbox"
  >
    <div
      className="visibleCheckbox"
    >
      <div
        className="toggle"
      />
    </div>
    <div
      className="c1 label"
      fontWeight="normal"
      size={16}
      type="#2f313a"
    >
      Checkbox Label
    </div>
  </div>
</label>
`;

exports[`Storyshots Checkbox/Switch Input with state control 1`] = `
.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  cursor: pointer;
  padding-left: 8px;
}

.c0 .centerVisibleCheckbox {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0 .hiddenCheckbox {
  opacity: 0;
  width: 0;
  margin: 0;
}

.c0 .visibleCheckbox {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  border: 1px solid;
  width: 56px;
  height: 32px;
  border-radius: 100px;
  border-color: rgba(0,0,0,0.16);
  background: #f6f8f9;
}

.c0 .visibleCheckbox .toggle {
  position: relative;
  -webkit-transition: ease all 0.2s;
  transition: ease all 0.2s;
  width: 24px;
  height: 24px;
  border: 1px solid transparent;
  border-radius: 24px;
  box-sizing: border-box;
  background: white;
  box-shadow: 0 0 2px 0 rgba(0,0,0,0.16);
  left: 4px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0 .label {
  margin-left: 0;
}

.c0:hover .visibleCheckbox {
  background: #f6f8f9;
  border-color: #3498db;
  border-width: 1px;
}

.c0:hover .visibleCheckbox .toggle {
  border-color: #3498db;
  left: 10px;
}

.c0 .hiddenCheckbox:focus + div .visibleCheckbox {
  outline: auto 2px Highlight;
  outline: auto 5px -webkit-focus-ring-color;
}

<label
  checked={false}
  className="c0"
  onMouseUp={[Function]}
>
  <input
    checked={false}
    className="hiddenCheckbox"
    onChange={[Function]}
    type="checkbox"
  />
  <div
    className="centerVisibleCheckbox"
  >
    <div
      className="visibleCheckbox"
    >
      <div
        className="toggle"
      />
    </div>
  </div>
</label>
`;

exports[`Storyshots Checkbox/Switch Input with text label 1`] = `
.c1 {
  font-family: Lato,sans-serif;
  font-size: 16px;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  color: #2f313a;
  text-align: left;
  font-weight: normal;
}

.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  cursor: pointer;
  padding-left: 8px;
}

.c0 .centerVisibleCheckbox {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0 .hiddenCheckbox {
  opacity: 0;
  width: 0;
  margin: 0;
}

.c0 .visibleCheckbox {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  border: 1px solid;
  width: 56px;
  height: 32px;
  border-radius: 100px;
  border-color: rgba(0,0,0,0.16);
  background: #f6f8f9;
}

.c0 .visibleCheckbox .toggle {
  position: relative;
  -webkit-transition: ease all 0.2s;
  transition: ease all 0.2s;
  width: 24px;
  height: 24px;
  border: 1px solid transparent;
  border-radius: 24px;
  box-sizing: border-box;
  background: white;
  box-shadow: 0 0 2px 0 rgba(0,0,0,0.16);
  left: 4px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0 .label {
  margin-left: 8px;
}

.c0:hover .visibleCheckbox {
  background: #f6f8f9;
  border-color: #3498db;
  border-width: 1px;
}

.c0:hover .visibleCheckbox .toggle {
  border-color: #3498db;
  left: 10px;
}

.c0 .hiddenCheckbox:focus + div .visibleCheckbox {
  outline: auto 2px Highlight;
  outline: auto 5px -webkit-focus-ring-color;
}

<label
  className="c0"
  onMouseUp={[Function]}
>
  <input
    className="hiddenCheckbox"
    onChange={[Function]}
    type="checkbox"
  />
  <div
    className="centerVisibleCheckbox"
  >
    <div
      className="visibleCheckbox"
    >
      <div
        className="toggle"
      />
    </div>
    <div
      className="c1 label"
      fontWeight="normal"
      size={16}
      type="#2f313a"
    >
      Checkbox Label
    </div>
  </div>
</label>
`;

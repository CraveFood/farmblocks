// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Tooltip/Tooltip Bottom positioned 1`] = `
.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  height: 32px;
  box-sizing: border-box;
  border: solid 1px rgba(0,0,0,0.16);
  border-radius: 4px;
  box-shadow: 0 2px 2px 0 rgba(0,0,0,0.16);
  color: white;
  line-height: 30px;
  font-size: 16px;
  font-family: lato,sans-serif;
  font-weight: 600;
  -webkit-font-smoothing: antialiased !important;
  white-space: nowrap;
  text-overflow: ellipsis;
  outline: 0;
  cursor: pointer;
  -webkit-transition: background 0.3s ease;
  transition: background 0.3s ease;
  background-color: #3498db;
  padding: 0 16px;
}

.c1 .icon {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  color: rgba(255,255,255,0.56);
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
}

.c1:hover {
  box-shadow: 0 4px 4px 0 rgba(0,0,0,0.16);
}

.c1:focus {
  box-shadow: none;
}

.c1:hover .icon,
.c1:focus .icon {
  color: white;
}

.c1:hover {
  background-color: #2980b9;
}

.c1:focus {
  background-color: #2980b9;
}

.c1:disabled,
.c1:disabled .icon,
.c1:disabled:hover {
  color: rgba(0,0,0,0.32);
}

.c1:disabled {
  background-color: #ccc;
  box-shadow: none;
}

.c0 {
  position: relative;
  display: inline-block;
}

.c0 .hit-area {
  position: absolute;
  top: 0;
  width: 100%;
  height: 100%;
  cursor: pointer;
}

.c0 .appear-enter {
  opacity: 0;
}

.c0 .appear-enter-active {
  opacity: 1;
  -webkit-transition: opacity 200ms ease-in;
  transition: opacity 200ms ease-in;
}

.c0 .appear-exit {
  opacity: 1;
}

.c0 .appear-exit-active {
  opacity: 0;
  -webkit-transition: opacity 200ms ease-out;
  transition: opacity 200ms ease-out;
}

.c2 {
  font-family: Lato,sans-serif;
  font-size: 18px;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  color: #2f313a;
  text-align: left;
  font-weight: inherit;
}

@media only screen and (pointer:coarse) {
  .c0 .hit-area {
    min-height: 40px;
    min-width: 40px;
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%,-50%);
    -ms-transform: translate(-50%,-50%);
    transform: translate(-50%,-50%);
  }
}

<div
  style={
    Object {
      "display": "flex",
      "flexDirection": "column",
      "marginTop": 60,
    }
  }
>
  <div
    style={
      Object {
        "display": "flex",
        "justifyContent": "space-between",
      }
    }
  >
    <div
      style={
        Object {
          "margin": "40px",
        }
      }
    >
      <div
        className="c0"
        onMouseLeave={[Function]}
      >
        <div
          className="hit-area"
          onMouseOver={[Function]}
        />
        <button
          className="c1"
          size="SMALL"
          type="SECONDARY"
        >
          Hover me
        </button>
      </div>
    </div>
    <div
      style={
        Object {
          "margin": "40px",
        }
      }
    >
      <div
        className="c0"
        onMouseLeave={[Function]}
      >
        <div
          className="hit-area"
          onMouseOver={[Function]}
        />
        <button
          className="c1"
          size="SMALL"
          type="SECONDARY"
        >
          Hover me
        </button>
      </div>
    </div>
    <div
      style={
        Object {
          "margin": "40px",
        }
      }
    >
      <div
        className="c0"
        onMouseLeave={[Function]}
      >
        <div
          className="hit-area"
          onMouseOver={[Function]}
        />
        <button
          className="c1"
          size="SMALL"
          type="SECONDARY"
        >
          Hover me
        </button>
      </div>
    </div>
  </div>
  <div
    style={
      Object {
        "display": "flex",
        "justifyContent": "space-between",
        "marginTop": 80,
      }
    }
  >
    <div
      style={
        Object {
          "margin": "40px",
        }
      }
    >
      <div
        className="c0"
        onMouseLeave={[Function]}
      >
        <div
          className="hit-area"
          onMouseOver={[Function]}
        />
        <div
          className="c2"
          fontWeight="inherit"
          size={18}
          type="#2f313a"
        >
          Hover me
        </div>
      </div>
    </div>
    <div
      style={
        Object {
          "margin": "40px",
        }
      }
    >
      <div
        className="c0"
        onMouseLeave={[Function]}
      >
        <div
          className="hit-area"
          onMouseOver={[Function]}
        />
        <div
          className="c2"
          fontWeight="inherit"
          size={18}
          type="#2f313a"
        >
          Hover me
        </div>
      </div>
    </div>
    <div
      style={
        Object {
          "margin": "40px",
        }
      }
    >
      <div
        className="c0"
        onMouseLeave={[Function]}
      >
        <div
          className="hit-area"
          onMouseOver={[Function]}
        />
        <div
          className="c2"
          fontWeight="inherit"
          size={18}
          type="#2f313a"
        >
          Hover me
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Tooltip/Tooltip Top positioned 1`] = `
.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  height: 32px;
  box-sizing: border-box;
  border: solid 1px rgba(0,0,0,0.16);
  border-radius: 4px;
  box-shadow: 0 2px 2px 0 rgba(0,0,0,0.16);
  color: white;
  line-height: 30px;
  font-size: 16px;
  font-family: lato,sans-serif;
  font-weight: 600;
  -webkit-font-smoothing: antialiased !important;
  white-space: nowrap;
  text-overflow: ellipsis;
  outline: 0;
  cursor: pointer;
  -webkit-transition: background 0.3s ease;
  transition: background 0.3s ease;
  background-color: #3498db;
  padding: 0 16px;
}

.c1 .icon {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  color: rgba(255,255,255,0.56);
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
}

.c1:hover {
  box-shadow: 0 4px 4px 0 rgba(0,0,0,0.16);
}

.c1:focus {
  box-shadow: none;
}

.c1:hover .icon,
.c1:focus .icon {
  color: white;
}

.c1:hover {
  background-color: #2980b9;
}

.c1:focus {
  background-color: #2980b9;
}

.c1:disabled,
.c1:disabled .icon,
.c1:disabled:hover {
  color: rgba(0,0,0,0.32);
}

.c1:disabled {
  background-color: #ccc;
  box-shadow: none;
}

.c0 {
  position: relative;
  display: inline-block;
}

.c0 .hit-area {
  position: absolute;
  top: 0;
  width: 100%;
  height: 100%;
  cursor: pointer;
}

.c0 .appear-enter {
  opacity: 0;
}

.c0 .appear-enter-active {
  opacity: 1;
  -webkit-transition: opacity 200ms ease-in;
  transition: opacity 200ms ease-in;
}

.c0 .appear-exit {
  opacity: 1;
}

.c0 .appear-exit-active {
  opacity: 0;
  -webkit-transition: opacity 200ms ease-out;
  transition: opacity 200ms ease-out;
}

.c2 {
  font-family: Lato,sans-serif;
  font-size: 18px;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  color: #2f313a;
  text-align: left;
  font-weight: inherit;
}

@media only screen and (pointer:coarse) {
  .c0 .hit-area {
    min-height: 40px;
    min-width: 40px;
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%,-50%);
    -ms-transform: translate(-50%,-50%);
    transform: translate(-50%,-50%);
  }
}

<div
  style={
    Object {
      "display": "flex",
      "flexDirection": "column",
      "marginTop": 60,
    }
  }
>
  <div
    style={
      Object {
        "display": "flex",
        "justifyContent": "space-between",
      }
    }
  >
    <div
      style={
        Object {
          "border": "none",
          "margin": "40px",
        }
      }
    >
      <div
        className="c0"
        onMouseLeave={[Function]}
      >
        <div
          className="hit-area"
          onMouseOver={[Function]}
        />
        <button
          className="c1"
          size="SMALL"
          type="SECONDARY"
        >
          Hover me
        </button>
      </div>
    </div>
    <div
      style={
        Object {
          "border": "none",
          "margin": "40px",
        }
      }
    >
      <div
        className="c0"
        onMouseLeave={[Function]}
      >
        <div
          className="hit-area"
          onMouseOver={[Function]}
        />
        <button
          className="c1"
          size="SMALL"
          type="SECONDARY"
        >
          Hover me
        </button>
      </div>
    </div>
    <div
      style={
        Object {
          "border": "none",
          "margin": "40px",
        }
      }
    >
      <div
        className="c0"
        onMouseLeave={[Function]}
      >
        <div
          className="hit-area"
          onMouseOver={[Function]}
        />
        <button
          className="c1"
          size="SMALL"
          type="SECONDARY"
        >
          Hover me
        </button>
      </div>
    </div>
  </div>
  <div
    style={
      Object {
        "display": "flex",
        "justifyContent": "space-between",
        "marginTop": 80,
      }
    }
  >
    <div
      style={
        Object {
          "border": "none",
          "margin": "40px",
        }
      }
    >
      <div
        className="c0"
        onMouseLeave={[Function]}
      >
        <div
          className="hit-area"
          onMouseOver={[Function]}
        />
        <div
          className="c2"
          fontWeight="inherit"
          size={18}
          type="#2f313a"
        >
          Hover me
        </div>
      </div>
    </div>
    <div
      style={
        Object {
          "border": "none",
          "margin": "40px",
        }
      }
    >
      <div
        className="c0"
        onMouseLeave={[Function]}
      >
        <div
          className="hit-area"
          onMouseOver={[Function]}
        />
        <div
          className="c2"
          fontWeight="inherit"
          size={18}
          type="#2f313a"
        >
          Hover me
        </div>
      </div>
    </div>
    <div
      style={
        Object {
          "border": "none",
          "margin": "40px",
        }
      }
    >
      <div
        className="c0"
        onMouseLeave={[Function]}
      >
        <div
          className="hit-area"
          onMouseOver={[Function]}
        />
        <div
          className="c2"
          fontWeight="inherit"
          size={18}
          type="#2f313a"
        >
          Hover me
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Tooltip/Tooltip auto aligned/positioned 1`] = `
.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  height: 32px;
  box-sizing: border-box;
  border: solid 1px rgba(0,0,0,0.16);
  border-radius: 4px;
  box-shadow: 0 2px 2px 0 rgba(0,0,0,0.16);
  color: white;
  line-height: 30px;
  font-size: 16px;
  font-family: lato,sans-serif;
  font-weight: 600;
  -webkit-font-smoothing: antialiased !important;
  white-space: nowrap;
  text-overflow: ellipsis;
  outline: 0;
  cursor: pointer;
  -webkit-transition: background 0.3s ease;
  transition: background 0.3s ease;
  background-color: #3498db;
  padding: 0 16px;
}

.c1 .icon {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  color: rgba(255,255,255,0.56);
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
}

.c1:hover {
  box-shadow: 0 4px 4px 0 rgba(0,0,0,0.16);
}

.c1:focus {
  box-shadow: none;
}

.c1:hover .icon,
.c1:focus .icon {
  color: white;
}

.c1:hover {
  background-color: #2980b9;
}

.c1:focus {
  background-color: #2980b9;
}

.c1:disabled,
.c1:disabled .icon,
.c1:disabled:hover {
  color: rgba(0,0,0,0.32);
}

.c1:disabled {
  background-color: #ccc;
  box-shadow: none;
}

.c0 {
  position: relative;
  display: inline-block;
}

.c0 .hit-area {
  position: absolute;
  top: 0;
  width: 100%;
  height: 100%;
  cursor: pointer;
}

.c0 .appear-enter {
  opacity: 0;
}

.c0 .appear-enter-active {
  opacity: 1;
  -webkit-transition: opacity 200ms ease-in;
  transition: opacity 200ms ease-in;
}

.c0 .appear-exit {
  opacity: 1;
}

.c0 .appear-exit-active {
  opacity: 0;
  -webkit-transition: opacity 200ms ease-out;
  transition: opacity 200ms ease-out;
}

@media only screen and (pointer:coarse) {
  .c0 .hit-area {
    min-height: 40px;
    min-width: 40px;
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%,-50%);
    -ms-transform: translate(-50%,-50%);
    transform: translate(-50%,-50%);
  }
}

<div
  style={
    Object {
      "display": "flex",
      "flexDirection": "column",
      "height": "calc(100vh - 30px)",
      "justifyContent": "space-between",
    }
  }
>
  <div
    style={
      Object {
        "display": "flex",
        "justifyContent": "space-between",
        "width": "100%",
      }
    }
  >
    <div
      className="c0"
      onMouseLeave={[Function]}
    >
      <div
        className="hit-area"
        onMouseOver={[Function]}
      />
      <button
        className="c1"
        size="SMALL"
        type="SECONDARY"
      >
        Hover me
      </button>
    </div>
    <div
      className="c0"
      onMouseLeave={[Function]}
    >
      <div
        className="hit-area"
        onMouseOver={[Function]}
      />
      <button
        className="c1"
        size="SMALL"
        type="SECONDARY"
      >
        Hover me
      </button>
    </div>
  </div>
  <div
    style={
      Object {
        "display": "flex",
        "justifyContent": "space-between",
        "width": "100%",
      }
    }
  >
    <div
      className="c0"
      onMouseLeave={[Function]}
    >
      <div
        className="hit-area"
        onMouseOver={[Function]}
      />
      <button
        className="c1"
        size="SMALL"
        type="SECONDARY"
      >
        Hover me
      </button>
    </div>
    <div
      className="c0"
      onMouseLeave={[Function]}
    >
      <div
        className="hit-area"
        onMouseOver={[Function]}
      />
      <button
        className="c1"
        size="SMALL"
        type="SECONDARY"
      >
        Hover me
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots Tooltip/Tooltip auto positioned considering TOP boundaries 1`] = `
.c0 {
  position: relative;
  display: inline-block;
}

.c0 .hit-area {
  position: absolute;
  top: 0;
  width: 100%;
  height: 100%;
  cursor: pointer;
}

.c0 .appear-enter {
  opacity: 0;
}

.c0 .appear-enter-active {
  opacity: 1;
  -webkit-transition: opacity 200ms ease-in;
  transition: opacity 200ms ease-in;
}

.c0 .appear-exit {
  opacity: 1;
}

.c0 .appear-exit-active {
  opacity: 0;
  -webkit-transition: opacity 200ms ease-out;
  transition: opacity 200ms ease-out;
}

.c1 {
  padding: 10px;
  background: orange;
}

@media only screen and (pointer:coarse) {
  .c0 .hit-area {
    min-height: 40px;
    min-width: 40px;
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%,-50%);
    -ms-transform: translate(-50%,-50%);
    transform: translate(-50%,-50%);
  }
}

<div
  style={
    Object {
      "background": "aliceblue",
      "display": "flex",
      "flexDirection": "column",
      "height": 400,
    }
  }
>
  <div
    style={
      Object {
        "background": "beige",
        "height": 180,
      }
    }
  />
  <div
    className="c0"
    onMouseLeave={[Function]}
  >
    <div
      className="hit-area"
      onMouseOver={[Function]}
    />
    <div
      className="c1"
    >
      Hover me - Resize window up to the blue boundary. The tooltip should open on the bottom
    </div>
  </div>
</div>
`;

exports[`Storyshots Tooltip/Tooltip with fullscreen breakpoint 1`] = `
.c3 {
  display: inline-block;
  vertical-align: text-bottom;
}

.c3 .farmblocks-icon {
  display: block;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  height: 32px;
  box-sizing: border-box;
  border: solid 1px rgba(0,0,0,0.16);
  border-radius: 4px;
  box-shadow: 0 2px 2px 0 rgba(0,0,0,0.16);
  color: white;
  line-height: 30px;
  font-size: 16px;
  font-family: lato,sans-serif;
  font-weight: 600;
  -webkit-font-smoothing: antialiased !important;
  white-space: nowrap;
  text-overflow: ellipsis;
  outline: 0;
  cursor: pointer;
  -webkit-transition: background 0.3s ease;
  transition: background 0.3s ease;
  background-color: #3498db;
  padding: 0 16px;
}

.c1 .icon {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  color: rgba(255,255,255,0.56);
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
}

.c1:hover {
  box-shadow: 0 4px 4px 0 rgba(0,0,0,0.16);
}

.c1:focus {
  box-shadow: none;
}

.c1:hover .icon,
.c1:focus .icon {
  color: white;
}

.c1:hover {
  background-color: #2980b9;
}

.c1:focus {
  background-color: #2980b9;
}

.c1:disabled,
.c1:disabled .icon,
.c1:disabled:hover {
  color: rgba(0,0,0,0.32);
}

.c1:disabled {
  background-color: #ccc;
  box-shadow: none;
}

.c0 {
  position: relative;
  display: inline-block;
}

.c0 .hit-area {
  position: absolute;
  top: 0;
  width: 100%;
  height: 100%;
  cursor: pointer;
}

.c0 .appear-enter {
  opacity: 0;
}

.c0 .appear-enter-active {
  opacity: 1;
  -webkit-transition: opacity 200ms ease-in;
  transition: opacity 200ms ease-in;
}

.c0 .appear-exit {
  opacity: 1;
}

.c0 .appear-exit-active {
  opacity: 0;
  -webkit-transition: opacity 200ms ease-out;
  transition: opacity 200ms ease-out;
}

.c4 {
  display: block;
}

.c2 .hit-area {
  border: 2px solid orange;
  box-sizing: border-box;
}

@media only screen and (pointer:coarse) {
  .c0 .hit-area {
    min-height: 40px;
    min-width: 40px;
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%,-50%);
    -ms-transform: translate(-50%,-50%);
    transform: translate(-50%,-50%);
  }
}

<div
  style={
    Object {
      "display": "flex",
      "flexDirection": "column",
      "justifyContent": "space-between",
    }
  }
>
  <div
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "justifyContent": "space-between",
        "width": "100%",
      }
    }
  >
    <div
      className="c0"
      onMouseLeave={[Function]}
    >
      <div
        className="hit-area"
        onMouseOver={[Function]}
      />
      <button
        className="c1"
        size="SMALL"
        type="SECONDARY"
      >
        Mobile
      </button>
    </div>
    <div
      className="c0 c2"
      onMouseLeave={[Function]}
    >
      <div
        className="hit-area"
        onMouseOver={[Function]}
      />
      <span
        className="c3"
        color="currentColor"
        size="1em"
      >
        <svg
          aria-hidden={true}
          className="farmblocks-icon c4"
          height="1em"
          viewBox="4 4 32 32"
          width="1em"
        >
          <path
            d="M31 20c0-6.074-4.926-11-11-11-6.075 0-11 4.925-11 11s4.925 11 11 11 11-4.925 11-11zm2 0c0 7.18-5.82 13-13 13S7 27.18 7 20 12.82 7 20 7c7.179 0 13 5.821 13 13zm-13.505 4.408c1.05 0 1.827.776 1.827 1.785v.042c0 1.01-.776 1.787-1.827 1.787s-1.829-.778-1.829-1.787v-.042c0-1.009.778-1.785 1.829-1.785zm0-1.387c-.61 0-1.051-.462-1.134-1.028l-.212-1.43c-.103-.693.295-1.177.967-1.26 1.827-.23 2.67-.798 2.67-1.828v-.042c0-.944-.717-1.49-1.934-1.49-.904 0-1.682.271-2.437.839-.252.189-.588.336-.947.336A1.487 1.487 0 0115 15.648c0-.399.166-.82.545-1.135C16.659 13.59 18.067 13 19.915 13 22.94 13 25 14.555 25 17.35v.041c0 2.668-1.85 3.761-4.14 4.223l-.064.379c-.084.546-.525 1.028-1.133 1.028h-.168z"
            fill="currentColor"
            fillRule="nonzero"
          />
        </svg>
      </span>
    </div>
    <div
      className="c0"
      onMouseLeave={[Function]}
    >
      <div
        className="hit-area"
        onMouseOver={[Function]}
      />
      <button
        className="c1"
        size="SMALL"
        type="SECONDARY"
      >
        With hide button
      </button>
    </div>
  </div>
</div>
`;

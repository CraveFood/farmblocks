// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Filter Popover Default 1`] = `
.c3 {
  position: relative;
}

.c1 {
  position: relative;
  display: inline-block;
}

.c1 .hitArea {
  position: absolute;
  top: 0;
  width: 100%;
  height: 100%;
}

.c1 .appear-enter {
  opacity: 0;
}

.c1 .appear-enter-active {
  opacity: 1;
  -webkit-transition: opacity 100ms ease-in;
  transition: opacity 100ms ease-in;
}

.c1 .appear-exit {
  opacity: 1;
}

.c1 .appear-exit-active {
  opacity: 0;
  -webkit-transition: opacity 100ms ease-in;
  transition: opacity 100ms ease-in;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  height: 32px;
  box-sizing: border-box;
  border: solid 1px rgba(0,0,0,0.16);
  border-radius: 4px;
  box-shadow: none;
  color: #2f313a;
  line-height: 30px;
  font-size: 16px;
  font-family: lato,sans-serif;
  font-weight: 600;
  -webkit-font-smoothing: antialiased !important;
  white-space: nowrap;
  text-overflow: ellipsis;
  outline: 0;
  cursor: pointer;
  background-color: #FFFFFF;
  color: #2f313a;
  padding: 0 8px;
  font-size: 14px;
  font-weight: normal;
}

.c2 .icon {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  color: rgba(255,255,255,0.56);
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
}

.c2:hover {
  box-shadow: none;
}

.c2:focus {
  box-shadow: none;
}

.c2:hover .icon,
.c2:focus .icon {
  color: white;
}

.c2 > .icon {
  color: rgba(0,0,0,0.32);
}

.c2:hover,
.c2:focus {
  color: #3498db;
  border-color: #3498db;
}

.c2:hover > .icon,
.c2:focus > .icon {
  color: #3498db;
}

.c2:disabled,
.c2:disabled .icon,
.c2:disabled :hover {
  color: rgba(0,0,0,0.32);
}

.c2:disabled {
  background-color: #ccc;
  box-shadow: none;
}

.c0 {
  display: inline-block;
  width: auto;
}

<div
  className="c0"
  width="auto"
>
  <div
    id="trigger"
    onClick={[Function]}
  >
    <div
      className="c1"
    >
      <button
        className="c2"
        disabled={false}
        fontSize="14px"
        fontWeight="normal"
        onMouseLeave={[Function]}
        onMouseOver={[Function]}
        size="SMALL"
        type="NEUTRAL"
      >
        Filter
        <div
          className="icon"
          style={
            Object {
              "marginLeft": 10,
            }
          }
        >
          <i
            className="wg-small-arrow-bottom"
          />
        </div>
      </button>
    </div>
  </div>
  <div
    className="c3"
  />
</div>
`;

exports[`Storyshots Filter Popover With value set 1`] = `
.c3 {
  position: relative;
}

.c1 {
  position: relative;
  display: inline-block;
}

.c1 .hitArea {
  position: absolute;
  top: 0;
  width: 100%;
  height: 100%;
}

.c1 .appear-enter {
  opacity: 0;
}

.c1 .appear-enter-active {
  opacity: 1;
  -webkit-transition: opacity 100ms ease-in;
  transition: opacity 100ms ease-in;
}

.c1 .appear-exit {
  opacity: 1;
}

.c1 .appear-exit-active {
  opacity: 0;
  -webkit-transition: opacity 100ms ease-in;
  transition: opacity 100ms ease-in;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  height: 32px;
  box-sizing: border-box;
  border: solid 1px rgba(0,0,0,0.16);
  border-radius: 4px;
  box-shadow: none;
  color: #2f313a;
  line-height: 30px;
  font-size: 16px;
  font-family: lato,sans-serif;
  font-weight: 600;
  -webkit-font-smoothing: antialiased !important;
  white-space: nowrap;
  text-overflow: ellipsis;
  outline: 0;
  cursor: pointer;
  background-color: #FFFFFF;
  color: #2f313a;
  color: #3498db;
  border-color: #3498db;
  padding: 0 8px;
  font-size: 14px;
  font-weight: normal;
}

.c2 .icon {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  color: rgba(255,255,255,0.56);
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
}

.c2:hover {
  box-shadow: none;
}

.c2:focus {
  box-shadow: none;
}

.c2:hover .icon,
.c2:focus .icon {
  color: white;
}

.c2 > .icon {
  color: rgba(0,0,0,0.32);
}

.c2 > .icon {
  color: #3498db;
}

.c2:hover,
.c2:focus {
  color: #3498db;
  border-color: #3498db;
}

.c2:hover > .icon,
.c2:focus > .icon {
  color: #3498db;
}

.c2:disabled,
.c2:disabled .icon,
.c2:disabled :hover {
  color: rgba(0,0,0,0.32);
}

.c2:disabled {
  background-color: #ccc;
  box-shadow: none;
}

.c0 {
  display: inline-block;
  width: auto;
}

<div
  className="c0"
  width="auto"
>
  <div
    id="trigger"
    onClick={[Function]}
  >
    <div
      className="c1"
    >
      <button
        className="c2"
        disabled={false}
        fontSize="14px"
        fontWeight="normal"
        onMouseLeave={[Function]}
        onMouseOver={[Function]}
        size="SMALL"
        type="NEUTRAL"
      >
        Filter
        <div
          className="icon"
          style={
            Object {
              "marginLeft": 8,
            }
          }
        >
          <i
            className="wg-check-box"
          />
        </div>
        <div
          className="icon"
          style={
            Object {
              "marginLeft": 10,
            }
          }
        >
          <i
            className="wg-small-arrow-bottom"
          />
        </div>
      </button>
    </div>
  </div>
  <div
    className="c3"
  />
</div>
`;

exports[`Storyshots Filter Popover With value set and custom Cancel label and handler 1`] = `
.c3 {
  position: relative;
}

.c1 {
  position: relative;
  display: inline-block;
}

.c1 .hitArea {
  position: absolute;
  top: 0;
  width: 100%;
  height: 100%;
}

.c1 .appear-enter {
  opacity: 0;
}

.c1 .appear-enter-active {
  opacity: 1;
  -webkit-transition: opacity 100ms ease-in;
  transition: opacity 100ms ease-in;
}

.c1 .appear-exit {
  opacity: 1;
}

.c1 .appear-exit-active {
  opacity: 0;
  -webkit-transition: opacity 100ms ease-in;
  transition: opacity 100ms ease-in;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  height: 32px;
  box-sizing: border-box;
  border: solid 1px rgba(0,0,0,0.16);
  border-radius: 4px;
  box-shadow: none;
  color: #2f313a;
  line-height: 30px;
  font-size: 16px;
  font-family: lato,sans-serif;
  font-weight: 600;
  -webkit-font-smoothing: antialiased !important;
  white-space: nowrap;
  text-overflow: ellipsis;
  outline: 0;
  cursor: pointer;
  background-color: #FFFFFF;
  color: #2f313a;
  color: #3498db;
  border-color: #3498db;
  padding: 0 8px;
  font-size: 14px;
  font-weight: normal;
}

.c2 .icon {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  color: rgba(255,255,255,0.56);
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
}

.c2:hover {
  box-shadow: none;
}

.c2:focus {
  box-shadow: none;
}

.c2:hover .icon,
.c2:focus .icon {
  color: white;
}

.c2 > .icon {
  color: rgba(0,0,0,0.32);
}

.c2 > .icon {
  color: #3498db;
}

.c2:hover,
.c2:focus {
  color: #3498db;
  border-color: #3498db;
}

.c2:hover > .icon,
.c2:focus > .icon {
  color: #3498db;
}

.c2:disabled,
.c2:disabled .icon,
.c2:disabled :hover {
  color: rgba(0,0,0,0.32);
}

.c2:disabled {
  background-color: #ccc;
  box-shadow: none;
}

.c0 {
  display: inline-block;
  width: auto;
}

<div
  className="c0"
  width="auto"
>
  <div
    id="trigger"
    onClick={[Function]}
  >
    <div
      className="c1"
    >
      <button
        className="c2"
        disabled={false}
        fontSize="14px"
        fontWeight="normal"
        onMouseLeave={[Function]}
        onMouseOver={[Function]}
        size="SMALL"
        type="NEUTRAL"
      >
        Filter
        <div
          className="icon"
          style={
            Object {
              "marginLeft": 8,
            }
          }
        >
          <i
            className="wg-check-box"
          />
        </div>
        <div
          className="icon"
          style={
            Object {
              "marginLeft": 10,
            }
          }
        >
          <i
            className="wg-small-arrow-bottom"
          />
        </div>
      </button>
    </div>
  </div>
  <div
    className="c3"
  />
</div>
`;

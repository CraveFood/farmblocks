// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Form|AmountSelectors Basic 1`] = `
.c3 {
  display: inline-block;
  vertical-align: text-bottom;
}

.c3 .farmblocks-icon {
  display: block;
}

.c2 {
  font-size: 16px;
  font-family: lato,sans-serif;
  font-weight: 600;
  -webkit-font-smoothing: antialiased !important;
  -moz-osx-font-smoothing: grayscale;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 4px 4px;
  border-radius: 4px;
  line-height: 1.5;
  height: 32px;
  min-width: 32px;
  width: 32px;
  white-space: nowrap;
  cursor: pointer;
  -webkit-transition: background 0.3s,color 0.3s,border-color 0.3s;
  transition: background 0.3s,color 0.3s,border-color 0.3s;
  background-color: #FFFFFF;
  color: #59636f;
  border: solid 1px rgba(0,0,0,0.16);
  box-shadow: 0px 2px 2px 0px rgba(0,0,0,0.16);
}

.c2 span {
  overflow: hidden;
  text-overflow: ellipsis;
}

.c2:disabled {
  background-color: rgba(0,0,0,0.32);
  color: rgba(0,0,0,0.32);
  border-width: 1px;
  border-color: rgba(0,0,0,0.16);
  box-shadow: none;
  cursor: default;
}

.c2:disabled .icon {
  color: rgba(0,0,0,0.32);
}

.c2 .icon {
  -webkit-transition: color 0.3s ease;
  transition: color 0.3s ease;
  color: rgba(0,0,0,0.32);
  line-height: 1;
}

.c2:not(:disabled):hover,
.c2:not(:disabled).hovered,
.c2:not(:disabled):active,
.c2:not(:disabled).active {
  color: #3498db;
  border-width: 2px;
  border-color: #3498db;
  box-shadow: 0px 4px 4px 0px rgba(0,0,0,0.16);
  padding: 3px 3px;
}

.c2:not(:disabled):hover .icon,
.c2:not(:disabled).hovered .icon,
.c2:not(:disabled):active .icon,
.c2:not(:disabled).active .icon,
.c2:not(:disabled):focus .icon,
.c2:not(:disabled).focused .icon {
  color: #3498db;
}

.c2:not(:disabled).active,
.c2:not(:disabled):active {
  box-shadow: none;
}

.c2:focus,
.c2.focused {
  outline: none;
}

.c2.focus-visible,
.c2.focused:not(:disabled) {
  box-shadow: 0 0 0 3px rgba(52,152,219,0.56);
}

.c6 {
  font-size: 16px;
  font-family: lato,sans-serif;
  font-weight: 600;
  -webkit-font-smoothing: antialiased !important;
  -moz-osx-font-smoothing: grayscale;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 4px 4px;
  border-radius: 4px;
  line-height: 1.5;
  height: 32px;
  min-width: 32px;
  width: 32px;
  white-space: nowrap;
  cursor: pointer;
  -webkit-transition: background 0.3s,color 0.3s,border-color 0.3s;
  transition: background 0.3s,color 0.3s,border-color 0.3s;
  background-color: #fd6a08;
  color: #FFFFFF;
  border: solid 1px rgba(0,0,0,0.16);
  box-shadow: 0px 2px 2px 0px rgba(0,0,0,0.16);
}

.c6 span {
  overflow: hidden;
  text-overflow: ellipsis;
}

.c6:disabled {
  background-color: rgba(0,0,0,0.32);
  color: rgba(0,0,0,0.32);
  border-width: 1px;
  border-color: rgba(0,0,0,0.16);
  box-shadow: none;
  cursor: default;
}

.c6:disabled .icon {
  color: rgba(0,0,0,0.32);
}

.c6 .icon {
  -webkit-transition: color 0.3s ease;
  transition: color 0.3s ease;
  color: rgba(255,255,255,0.48);
  line-height: 1;
}

.c6:not(:disabled):hover,
.c6:not(:disabled).hovered,
.c6:not(:disabled):active,
.c6:not(:disabled).active {
  background-color: #D45806;
  box-shadow: 0px 4px 4px 0px rgba(0,0,0,0.16);
  padding: 4px 4px;
}

.c6:not(:disabled):hover .icon,
.c6:not(:disabled).hovered .icon,
.c6:not(:disabled):active .icon,
.c6:not(:disabled).active .icon,
.c6:not(:disabled):focus .icon,
.c6:not(:disabled).focused .icon {
  color: #FFFFFF;
}

.c6:not(:disabled).active,
.c6:not(:disabled):active {
  box-shadow: none;
}

.c6:focus,
.c6.focused {
  outline: none;
}

.c6.focus-visible,
.c6.focused:not(:disabled) {
  box-shadow: 0 0 0 3px rgba(52,152,219,0.56);
}

.c4 {
  position: relative;
  z-index: 1000;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-bottom: 0;
  font-family: Lato,sans-serif;
  font-size: 16px;
}

.c5 > .input {
  -webkit-order: 2;
  -ms-flex-order: 2;
  order: 2;
  box-sizing: border-box;
  border: solid 1px;
  border-radius: 16px;
  border-color: rgba(0,0,0,0.16);
  background-color: #ffffff;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  overflow: auto;
}

.c5 > .input .wrapped {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c5 > .input > input,
.select__search .c5 > .input input {
  padding: 4px 16px;
  line-height: 24px;
}

.c5 > .input > textarea {
  padding: 16px;
}

.c5 > .input input,
.c5 > .input textarea,
.c5 > .input select {
  font-family: inherit;
  font-size: inherit;
}

.c5 > .input > input,
.c5 > .input > textarea,
.select__search .c5 > .input input {
  min-width: 0;
  border: 0;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  outline: none;
  color: #2f313a;
  background: none;
}

.c5 > .input > input::-webkit-input-placeholder,
.c5 > .input > textarea::-webkit-input-placeholder,
.select__search .c5 > .input input::-webkit-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c5 > .input > input::-moz-placeholder,
.c5 > .input > textarea::-moz-placeholder,
.select__search .c5 > .input input::-moz-placeholder {
  color: rgba(0,0,0,0.32);
}

.c5 > .input > input:-ms-input-placeholder,
.c5 > .input > textarea:-ms-input-placeholder,
.select__search .c5 > .input input:-ms-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c5 > .input > input::placeholder,
.c5 > .input > textarea::placeholder,
.select__search .c5 > .input input::placeholder {
  color: rgba(0,0,0,0.32);
}

.c5 > .input > input[type="search"],
.c5 > .input > textarea[type="search"],
.select__search .c5 > .input input[type="search"] {
  -webkit-appearance: none;
  -moz-appearance: none;
}

.c5 > .input > input[type="search"]::-webkit-search-cancel-button,
.c5 > .input > textarea[type="search"]::-webkit-search-cancel-button,
.select__search .c5 > .input input[type="search"]::-webkit-search-cancel-button {
  display: none;
}

.c5 > .input > input[type="search"]::-ms-clear,
.c5 > .input > textarea[type="search"]::-ms-clear,
.select__search .c5 > .input input[type="search"]::-ms-clear {
  width: 0;
  height: 0;
}

.c5 > .input > input[role="combobox"],
.c5 > .input > textarea[role="combobox"],
.select__search .c5 > .input input[role="combobox"] {
  cursor: pointer;
}

.c5 > .input > .icon {
  color: rgba(0,0,0,0.16);
}

.c5 > .input > .icon.left {
  margin-left: 8px;
  margin-right: -8px;
}

.c5 > .input > .icon.right {
  margin-right: 8px;
  margin-left: -8px;
}

.c5 > .input > .clear {
  color: rgba(0,0,0,0.16);
}

.c5 > .input > .clear:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #3498db;
}

.c5 > .input > .clear a {
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
}

.c5 .input.dropdown {
  cursor: pointer;
}

.c5 input[type="number"] {
  -moz-appearance: textfield;
}

.c5 input[type="number"]::-webkit-inner-spin-button,
.c5 input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.c5 .prefix {
  margin-left: 16px;
  margin-right: -8px;
}

.c5 .suffix {
  margin-right: 16px;
  margin-left: -8px;
}

.c5 .prefix,
.c5 .suffix {
  font-family: Lato,sans-serif;
  font-size: 16px;
  color: rgba(0,0,0,0.32);
}

.c5 .label {
  margin-bottom: 8px;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.c1 .inputComponent {
  margin: 0 8px;
  min-width: 50px;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.c1 .inputComponent input {
  text-align: center;
}

.c1 .inputComponent input:invalid {
  box-shadow: none;
}

.c1 .button {
  border-radius: 50%;
  min-width: 34px;
  min-height: 34px;
}

.c0 {
  width: 200px;
}

@media only screen and (max-width:) {
  .c4 {
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background: rgba(0,0,0,0.32);
    position: fixed;
  }
}

<div
  className="c0"
  width="200px"
>
  <div
    className="c1"
  >
    <div>
      <button
        className="c2 button button--decrease   "
        data-testid="button--decrease"
        disabled={true}
        onClick={[Function]}
        type="button"
      >
        <div
          className="icon left-icon"
          style={
            Object {
              "transform": "translateX(-0px)",
            }
          }
        >
          <span
            className="c3"
            color="currentColor"
            size="1em"
          >
            <svg
              aria-hidden={true}
              className="farmblocks-icon "
              height={24}
              viewBox="2 2 20 20"
              width={24}
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M7 11a1 1 0 000 2h10a1 1 0 000-2H7z"
                fill="rgba(0, 0, 0, 0.16)"
                fillRule="evenodd"
              />
            </svg>
          </span>
        </div>
        <span />
      </button>
      <div
        className="c4 tooltip-content"
        offset="15px"
        onTouchStart={[Function]}
        style={
          Object {
            "opacity": 0,
          }
        }
      />
    </div>
    <div
      className="c5 inputComponent"
      onClick={[Function]}
      type="number"
    >
      <div
        className="input "
      >
        <input
          className="wrapped "
          data-testid="input-text"
          max={1.7976931348623157e+308}
          min={0}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          readOnly={false}
          step={1}
          type="number"
          value="0.00"
        />
      </div>
    </div>
    <button
      className="c6 button button--increase   "
      data-testid="button--increase"
      onClick={[Function]}
      type="button"
    >
      <div
        className="icon left-icon"
        style={
          Object {
            "transform": "translateX(-0px)",
          }
        }
      >
        <span
          className="c3"
          color="currentColor"
          size="1em"
        >
          <svg
            aria-hidden={true}
            className="farmblocks-icon "
            height={24}
            viewBox="2 2 20 20"
            width={24}
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M13 11V7a1 1 0 00-2 0v4H7a1 1 0 000 2h4v4a1 1 0 002 0v-4h4a1 1 0 000-2h-4z"
              fill="white"
              fillRule="evenodd"
            />
          </svg>
        </span>
      </div>
      <span />
    </button>
  </div>
</div>
`;

exports[`Storyshots Form|AmountSelectors Custom step 1`] = `
.c3 {
  display: inline-block;
  vertical-align: text-bottom;
}

.c3 .farmblocks-icon {
  display: block;
}

.c2 {
  font-size: 16px;
  font-family: lato,sans-serif;
  font-weight: 600;
  -webkit-font-smoothing: antialiased !important;
  -moz-osx-font-smoothing: grayscale;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 4px 4px;
  border-radius: 4px;
  line-height: 1.5;
  height: 32px;
  min-width: 32px;
  width: 32px;
  white-space: nowrap;
  cursor: pointer;
  -webkit-transition: background 0.3s,color 0.3s,border-color 0.3s;
  transition: background 0.3s,color 0.3s,border-color 0.3s;
  background-color: #FFFFFF;
  color: #59636f;
  border: solid 1px rgba(0,0,0,0.16);
  box-shadow: 0px 2px 2px 0px rgba(0,0,0,0.16);
}

.c2 span {
  overflow: hidden;
  text-overflow: ellipsis;
}

.c2:disabled {
  background-color: rgba(0,0,0,0.32);
  color: rgba(0,0,0,0.32);
  border-width: 1px;
  border-color: rgba(0,0,0,0.16);
  box-shadow: none;
  cursor: default;
}

.c2:disabled .icon {
  color: rgba(0,0,0,0.32);
}

.c2 .icon {
  -webkit-transition: color 0.3s ease;
  transition: color 0.3s ease;
  color: rgba(0,0,0,0.32);
  line-height: 1;
}

.c2:not(:disabled):hover,
.c2:not(:disabled).hovered,
.c2:not(:disabled):active,
.c2:not(:disabled).active {
  color: #3498db;
  border-width: 2px;
  border-color: #3498db;
  box-shadow: 0px 4px 4px 0px rgba(0,0,0,0.16);
  padding: 3px 3px;
}

.c2:not(:disabled):hover .icon,
.c2:not(:disabled).hovered .icon,
.c2:not(:disabled):active .icon,
.c2:not(:disabled).active .icon,
.c2:not(:disabled):focus .icon,
.c2:not(:disabled).focused .icon {
  color: #3498db;
}

.c2:not(:disabled).active,
.c2:not(:disabled):active {
  box-shadow: none;
}

.c2:focus,
.c2.focused {
  outline: none;
}

.c2.focus-visible,
.c2.focused:not(:disabled) {
  box-shadow: 0 0 0 3px rgba(52,152,219,0.56);
}

.c6 {
  font-size: 16px;
  font-family: lato,sans-serif;
  font-weight: 600;
  -webkit-font-smoothing: antialiased !important;
  -moz-osx-font-smoothing: grayscale;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 4px 4px;
  border-radius: 4px;
  line-height: 1.5;
  height: 32px;
  min-width: 32px;
  width: 32px;
  white-space: nowrap;
  cursor: pointer;
  -webkit-transition: background 0.3s,color 0.3s,border-color 0.3s;
  transition: background 0.3s,color 0.3s,border-color 0.3s;
  background-color: #fd6a08;
  color: #FFFFFF;
  border: solid 1px rgba(0,0,0,0.16);
  box-shadow: 0px 2px 2px 0px rgba(0,0,0,0.16);
}

.c6 span {
  overflow: hidden;
  text-overflow: ellipsis;
}

.c6:disabled {
  background-color: rgba(0,0,0,0.32);
  color: rgba(0,0,0,0.32);
  border-width: 1px;
  border-color: rgba(0,0,0,0.16);
  box-shadow: none;
  cursor: default;
}

.c6:disabled .icon {
  color: rgba(0,0,0,0.32);
}

.c6 .icon {
  -webkit-transition: color 0.3s ease;
  transition: color 0.3s ease;
  color: rgba(255,255,255,0.48);
  line-height: 1;
}

.c6:not(:disabled):hover,
.c6:not(:disabled).hovered,
.c6:not(:disabled):active,
.c6:not(:disabled).active {
  background-color: #D45806;
  box-shadow: 0px 4px 4px 0px rgba(0,0,0,0.16);
  padding: 4px 4px;
}

.c6:not(:disabled):hover .icon,
.c6:not(:disabled).hovered .icon,
.c6:not(:disabled):active .icon,
.c6:not(:disabled).active .icon,
.c6:not(:disabled):focus .icon,
.c6:not(:disabled).focused .icon {
  color: #FFFFFF;
}

.c6:not(:disabled).active,
.c6:not(:disabled):active {
  box-shadow: none;
}

.c6:focus,
.c6.focused {
  outline: none;
}

.c6.focus-visible,
.c6.focused:not(:disabled) {
  box-shadow: 0 0 0 3px rgba(52,152,219,0.56);
}

.c4 {
  position: relative;
  z-index: 1000;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-bottom: 0;
  font-family: Lato,sans-serif;
  font-size: 16px;
}

.c5 > .input {
  -webkit-order: 2;
  -ms-flex-order: 2;
  order: 2;
  box-sizing: border-box;
  border: solid 1px;
  border-radius: 16px;
  border-color: rgba(0,0,0,0.16);
  background-color: #ffffff;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  overflow: auto;
}

.c5 > .input .wrapped {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c5 > .input > input,
.select__search .c5 > .input input {
  padding: 4px 16px;
  line-height: 24px;
}

.c5 > .input > textarea {
  padding: 16px;
}

.c5 > .input input,
.c5 > .input textarea,
.c5 > .input select {
  font-family: inherit;
  font-size: inherit;
}

.c5 > .input > input,
.c5 > .input > textarea,
.select__search .c5 > .input input {
  min-width: 0;
  border: 0;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  outline: none;
  color: #2f313a;
  background: none;
}

.c5 > .input > input::-webkit-input-placeholder,
.c5 > .input > textarea::-webkit-input-placeholder,
.select__search .c5 > .input input::-webkit-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c5 > .input > input::-moz-placeholder,
.c5 > .input > textarea::-moz-placeholder,
.select__search .c5 > .input input::-moz-placeholder {
  color: rgba(0,0,0,0.32);
}

.c5 > .input > input:-ms-input-placeholder,
.c5 > .input > textarea:-ms-input-placeholder,
.select__search .c5 > .input input:-ms-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c5 > .input > input::placeholder,
.c5 > .input > textarea::placeholder,
.select__search .c5 > .input input::placeholder {
  color: rgba(0,0,0,0.32);
}

.c5 > .input > input[type="search"],
.c5 > .input > textarea[type="search"],
.select__search .c5 > .input input[type="search"] {
  -webkit-appearance: none;
  -moz-appearance: none;
}

.c5 > .input > input[type="search"]::-webkit-search-cancel-button,
.c5 > .input > textarea[type="search"]::-webkit-search-cancel-button,
.select__search .c5 > .input input[type="search"]::-webkit-search-cancel-button {
  display: none;
}

.c5 > .input > input[type="search"]::-ms-clear,
.c5 > .input > textarea[type="search"]::-ms-clear,
.select__search .c5 > .input input[type="search"]::-ms-clear {
  width: 0;
  height: 0;
}

.c5 > .input > input[role="combobox"],
.c5 > .input > textarea[role="combobox"],
.select__search .c5 > .input input[role="combobox"] {
  cursor: pointer;
}

.c5 > .input > .icon {
  color: rgba(0,0,0,0.16);
}

.c5 > .input > .icon.left {
  margin-left: 8px;
  margin-right: -8px;
}

.c5 > .input > .icon.right {
  margin-right: 8px;
  margin-left: -8px;
}

.c5 > .input > .clear {
  color: rgba(0,0,0,0.16);
}

.c5 > .input > .clear:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #3498db;
}

.c5 > .input > .clear a {
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
}

.c5 .input.dropdown {
  cursor: pointer;
}

.c5 input[type="number"] {
  -moz-appearance: textfield;
}

.c5 input[type="number"]::-webkit-inner-spin-button,
.c5 input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.c5 .prefix {
  margin-left: 16px;
  margin-right: -8px;
}

.c5 .suffix {
  margin-right: 16px;
  margin-left: -8px;
}

.c5 .prefix,
.c5 .suffix {
  font-family: Lato,sans-serif;
  font-size: 16px;
  color: rgba(0,0,0,0.32);
}

.c5 .label {
  margin-bottom: 8px;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.c1 .inputComponent {
  margin: 0 8px;
  min-width: 50px;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.c1 .inputComponent input {
  text-align: center;
}

.c1 .inputComponent input:invalid {
  box-shadow: none;
}

.c1 .button {
  border-radius: 50%;
  min-width: 34px;
  min-height: 34px;
}

.c0 {
  width: 200px;
}

@media only screen and (max-width:) {
  .c4 {
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background: rgba(0,0,0,0.32);
    position: fixed;
  }
}

<div
  className="c0"
  width="200px"
>
  <div
    className="c1"
  >
    <div>
      <button
        className="c2 button button--decrease   "
        data-testid="button--decrease"
        disabled={true}
        onClick={[Function]}
        type="button"
      >
        <div
          className="icon left-icon"
          style={
            Object {
              "transform": "translateX(-0px)",
            }
          }
        >
          <span
            className="c3"
            color="currentColor"
            size="1em"
          >
            <svg
              aria-hidden={true}
              className="farmblocks-icon "
              height={24}
              viewBox="2 2 20 20"
              width={24}
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M7 11a1 1 0 000 2h10a1 1 0 000-2H7z"
                fill="rgba(0, 0, 0, 0.16)"
                fillRule="evenodd"
              />
            </svg>
          </span>
        </div>
        <span />
      </button>
      <div
        className="c4 tooltip-content"
        offset="15px"
        onTouchStart={[Function]}
        style={
          Object {
            "opacity": 0,
          }
        }
      />
    </div>
    <div
      className="c5 inputComponent"
      onClick={[Function]}
      type="number"
    >
      <div
        className="input "
      >
        <input
          className="wrapped "
          data-testid="input-text"
          max={1.7976931348623157e+308}
          min={0}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          readOnly={false}
          step={0.7}
          type="number"
          value="0.00"
        />
      </div>
    </div>
    <button
      className="c6 button button--increase   "
      data-testid="button--increase"
      onClick={[Function]}
      type="button"
    >
      <div
        className="icon left-icon"
        style={
          Object {
            "transform": "translateX(-0px)",
          }
        }
      >
        <span
          className="c3"
          color="currentColor"
          size="1em"
        >
          <svg
            aria-hidden={true}
            className="farmblocks-icon "
            height={24}
            viewBox="2 2 20 20"
            width={24}
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M13 11V7a1 1 0 00-2 0v4H7a1 1 0 000 2h4v4a1 1 0 002 0v-4h4a1 1 0 000-2h-4z"
              fill="white"
              fillRule="evenodd"
            />
          </svg>
        </span>
      </div>
      <span />
    </button>
  </div>
</div>
`;

exports[`Storyshots Form|AmountSelectors Disable typing 1`] = `
.c3 {
  display: inline-block;
  vertical-align: text-bottom;
}

.c3 .farmblocks-icon {
  display: block;
}

.c2 {
  font-size: 16px;
  font-family: lato,sans-serif;
  font-weight: 600;
  -webkit-font-smoothing: antialiased !important;
  -moz-osx-font-smoothing: grayscale;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 4px 4px;
  border-radius: 4px;
  line-height: 1.5;
  height: 32px;
  min-width: 32px;
  width: 32px;
  white-space: nowrap;
  cursor: pointer;
  -webkit-transition: background 0.3s,color 0.3s,border-color 0.3s;
  transition: background 0.3s,color 0.3s,border-color 0.3s;
  background-color: #FFFFFF;
  color: #59636f;
  border: solid 1px rgba(0,0,0,0.16);
  box-shadow: 0px 2px 2px 0px rgba(0,0,0,0.16);
}

.c2 span {
  overflow: hidden;
  text-overflow: ellipsis;
}

.c2:disabled {
  background-color: rgba(0,0,0,0.32);
  color: rgba(0,0,0,0.32);
  border-width: 1px;
  border-color: rgba(0,0,0,0.16);
  box-shadow: none;
  cursor: default;
}

.c2:disabled .icon {
  color: rgba(0,0,0,0.32);
}

.c2 .icon {
  -webkit-transition: color 0.3s ease;
  transition: color 0.3s ease;
  color: rgba(0,0,0,0.32);
  line-height: 1;
}

.c2:not(:disabled):hover,
.c2:not(:disabled).hovered,
.c2:not(:disabled):active,
.c2:not(:disabled).active {
  color: #3498db;
  border-width: 2px;
  border-color: #3498db;
  box-shadow: 0px 4px 4px 0px rgba(0,0,0,0.16);
  padding: 3px 3px;
}

.c2:not(:disabled):hover .icon,
.c2:not(:disabled).hovered .icon,
.c2:not(:disabled):active .icon,
.c2:not(:disabled).active .icon,
.c2:not(:disabled):focus .icon,
.c2:not(:disabled).focused .icon {
  color: #3498db;
}

.c2:not(:disabled).active,
.c2:not(:disabled):active {
  box-shadow: none;
}

.c2:focus,
.c2.focused {
  outline: none;
}

.c2.focus-visible,
.c2.focused:not(:disabled) {
  box-shadow: 0 0 0 3px rgba(52,152,219,0.56);
}

.c6 {
  font-size: 16px;
  font-family: lato,sans-serif;
  font-weight: 600;
  -webkit-font-smoothing: antialiased !important;
  -moz-osx-font-smoothing: grayscale;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 4px 4px;
  border-radius: 4px;
  line-height: 1.5;
  height: 32px;
  min-width: 32px;
  width: 32px;
  white-space: nowrap;
  cursor: pointer;
  -webkit-transition: background 0.3s,color 0.3s,border-color 0.3s;
  transition: background 0.3s,color 0.3s,border-color 0.3s;
  background-color: #fd6a08;
  color: #FFFFFF;
  border: solid 1px rgba(0,0,0,0.16);
  box-shadow: 0px 2px 2px 0px rgba(0,0,0,0.16);
}

.c6 span {
  overflow: hidden;
  text-overflow: ellipsis;
}

.c6:disabled {
  background-color: rgba(0,0,0,0.32);
  color: rgba(0,0,0,0.32);
  border-width: 1px;
  border-color: rgba(0,0,0,0.16);
  box-shadow: none;
  cursor: default;
}

.c6:disabled .icon {
  color: rgba(0,0,0,0.32);
}

.c6 .icon {
  -webkit-transition: color 0.3s ease;
  transition: color 0.3s ease;
  color: rgba(255,255,255,0.48);
  line-height: 1;
}

.c6:not(:disabled):hover,
.c6:not(:disabled).hovered,
.c6:not(:disabled):active,
.c6:not(:disabled).active {
  background-color: #D45806;
  box-shadow: 0px 4px 4px 0px rgba(0,0,0,0.16);
  padding: 4px 4px;
}

.c6:not(:disabled):hover .icon,
.c6:not(:disabled).hovered .icon,
.c6:not(:disabled):active .icon,
.c6:not(:disabled).active .icon,
.c6:not(:disabled):focus .icon,
.c6:not(:disabled).focused .icon {
  color: #FFFFFF;
}

.c6:not(:disabled).active,
.c6:not(:disabled):active {
  box-shadow: none;
}

.c6:focus,
.c6.focused {
  outline: none;
}

.c6.focus-visible,
.c6.focused:not(:disabled) {
  box-shadow: 0 0 0 3px rgba(52,152,219,0.56);
}

.c4 {
  position: relative;
  z-index: 1000;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-bottom: 0;
  font-family: Lato,sans-serif;
  font-size: 16px;
}

.c5 > .input {
  -webkit-order: 2;
  -ms-flex-order: 2;
  order: 2;
  box-sizing: border-box;
  border: solid 1px;
  border-radius: 16px;
  border-color: rgba(0,0,0,0.16);
  background-color: #ffffff;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  overflow: auto;
}

.c5 > .input .wrapped {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c5 > .input > input,
.select__search .c5 > .input input {
  padding: 4px 16px;
  line-height: 24px;
}

.c5 > .input > textarea {
  padding: 16px;
}

.c5 > .input input,
.c5 > .input textarea,
.c5 > .input select {
  font-family: inherit;
  font-size: inherit;
}

.c5 > .input > input,
.c5 > .input > textarea,
.select__search .c5 > .input input {
  min-width: 0;
  border: 0;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  outline: none;
  color: #2f313a;
  background: none;
}

.c5 > .input > input::-webkit-input-placeholder,
.c5 > .input > textarea::-webkit-input-placeholder,
.select__search .c5 > .input input::-webkit-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c5 > .input > input::-moz-placeholder,
.c5 > .input > textarea::-moz-placeholder,
.select__search .c5 > .input input::-moz-placeholder {
  color: rgba(0,0,0,0.32);
}

.c5 > .input > input:-ms-input-placeholder,
.c5 > .input > textarea:-ms-input-placeholder,
.select__search .c5 > .input input:-ms-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c5 > .input > input::placeholder,
.c5 > .input > textarea::placeholder,
.select__search .c5 > .input input::placeholder {
  color: rgba(0,0,0,0.32);
}

.c5 > .input > input[type="search"],
.c5 > .input > textarea[type="search"],
.select__search .c5 > .input input[type="search"] {
  -webkit-appearance: none;
  -moz-appearance: none;
}

.c5 > .input > input[type="search"]::-webkit-search-cancel-button,
.c5 > .input > textarea[type="search"]::-webkit-search-cancel-button,
.select__search .c5 > .input input[type="search"]::-webkit-search-cancel-button {
  display: none;
}

.c5 > .input > input[type="search"]::-ms-clear,
.c5 > .input > textarea[type="search"]::-ms-clear,
.select__search .c5 > .input input[type="search"]::-ms-clear {
  width: 0;
  height: 0;
}

.c5 > .input > input[role="combobox"],
.c5 > .input > textarea[role="combobox"],
.select__search .c5 > .input input[role="combobox"] {
  cursor: pointer;
}

.c5 > .input > .icon {
  color: rgba(0,0,0,0.16);
}

.c5 > .input > .icon.left {
  margin-left: 8px;
  margin-right: -8px;
}

.c5 > .input > .icon.right {
  margin-right: 8px;
  margin-left: -8px;
}

.c5 > .input > .clear {
  color: rgba(0,0,0,0.16);
}

.c5 > .input > .clear:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #3498db;
}

.c5 > .input > .clear a {
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
}

.c5 .input.dropdown {
  cursor: pointer;
}

.c5 input[type="number"] {
  -moz-appearance: textfield;
}

.c5 input[type="number"]::-webkit-inner-spin-button,
.c5 input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.c5 .prefix {
  margin-left: 16px;
  margin-right: -8px;
}

.c5 .suffix {
  margin-right: 16px;
  margin-left: -8px;
}

.c5 .prefix,
.c5 .suffix {
  font-family: Lato,sans-serif;
  font-size: 16px;
  color: rgba(0,0,0,0.32);
}

.c5 .label {
  margin-bottom: 8px;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.c1 .inputComponent {
  margin: 0 8px;
  min-width: 50px;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.c1 .inputComponent input {
  text-align: center;
}

.c1 .inputComponent input:invalid {
  box-shadow: none;
}

.c1 .button {
  border-radius: 50%;
  min-width: 34px;
  min-height: 34px;
}

.c0 {
  width: 200px;
}

@media only screen and (max-width:) {
  .c4 {
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background: rgba(0,0,0,0.32);
    position: fixed;
  }
}

<div
  className="c0"
  width="200px"
>
  <div
    className="c1"
  >
    <div>
      <button
        className="c2 button button--decrease   "
        data-testid="button--decrease"
        disabled={true}
        onClick={[Function]}
        type="button"
      >
        <div
          className="icon left-icon"
          style={
            Object {
              "transform": "translateX(-0px)",
            }
          }
        >
          <span
            className="c3"
            color="currentColor"
            size="1em"
          >
            <svg
              aria-hidden={true}
              className="farmblocks-icon "
              height={24}
              viewBox="2 2 20 20"
              width={24}
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M7 11a1 1 0 000 2h10a1 1 0 000-2H7z"
                fill="rgba(0, 0, 0, 0.16)"
                fillRule="evenodd"
              />
            </svg>
          </span>
        </div>
        <span />
      </button>
      <div
        className="c4 tooltip-content"
        offset="15px"
        onTouchStart={[Function]}
        style={
          Object {
            "opacity": 0,
          }
        }
      />
    </div>
    <div
      className="c5 inputComponent"
      onClick={[Function]}
      type="number"
    >
      <div
        className="input "
      >
        <input
          className="wrapped "
          data-testid="input-text"
          max={1.7976931348623157e+308}
          min={0}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          readOnly={true}
          step={1}
          type="number"
          value="0.00"
        />
      </div>
    </div>
    <button
      className="c6 button button--increase   "
      data-testid="button--increase"
      onClick={[Function]}
      type="button"
    >
      <div
        className="icon left-icon"
        style={
          Object {
            "transform": "translateX(-0px)",
          }
        }
      >
        <span
          className="c3"
          color="currentColor"
          size="1em"
        >
          <svg
            aria-hidden={true}
            className="farmblocks-icon "
            height={24}
            viewBox="2 2 20 20"
            width={24}
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M13 11V7a1 1 0 00-2 0v4H7a1 1 0 000 2h4v4a1 1 0 002 0v-4h4a1 1 0 000-2h-4z"
              fill="white"
              fillRule="evenodd"
            />
          </svg>
        </span>
      </div>
      <span />
    </button>
  </div>
</div>
`;

exports[`Storyshots Form|AmountSelectors Disabled 1`] = `
.c3 {
  display: inline-block;
  vertical-align: text-bottom;
}

.c3 .farmblocks-icon {
  display: block;
}

.c2 {
  font-size: 16px;
  font-family: lato,sans-serif;
  font-weight: 600;
  -webkit-font-smoothing: antialiased !important;
  -moz-osx-font-smoothing: grayscale;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 4px 4px;
  border-radius: 4px;
  line-height: 1.5;
  height: 32px;
  min-width: 32px;
  width: 32px;
  white-space: nowrap;
  cursor: pointer;
  -webkit-transition: background 0.3s,color 0.3s,border-color 0.3s;
  transition: background 0.3s,color 0.3s,border-color 0.3s;
  background-color: #FFFFFF;
  color: #59636f;
  border: solid 1px rgba(0,0,0,0.16);
  box-shadow: 0px 2px 2px 0px rgba(0,0,0,0.16);
}

.c2 span {
  overflow: hidden;
  text-overflow: ellipsis;
}

.c2:disabled {
  background-color: rgba(0,0,0,0.32);
  color: rgba(0,0,0,0.32);
  border-width: 1px;
  border-color: rgba(0,0,0,0.16);
  box-shadow: none;
  cursor: default;
}

.c2:disabled .icon {
  color: rgba(0,0,0,0.32);
}

.c2 .icon {
  -webkit-transition: color 0.3s ease;
  transition: color 0.3s ease;
  color: rgba(0,0,0,0.32);
  line-height: 1;
}

.c2:not(:disabled):hover,
.c2:not(:disabled).hovered,
.c2:not(:disabled):active,
.c2:not(:disabled).active {
  color: #3498db;
  border-width: 2px;
  border-color: #3498db;
  box-shadow: 0px 4px 4px 0px rgba(0,0,0,0.16);
  padding: 3px 3px;
}

.c2:not(:disabled):hover .icon,
.c2:not(:disabled).hovered .icon,
.c2:not(:disabled):active .icon,
.c2:not(:disabled).active .icon,
.c2:not(:disabled):focus .icon,
.c2:not(:disabled).focused .icon {
  color: #3498db;
}

.c2:not(:disabled).active,
.c2:not(:disabled):active {
  box-shadow: none;
}

.c2:focus,
.c2.focused {
  outline: none;
}

.c2.focus-visible,
.c2.focused:not(:disabled) {
  box-shadow: 0 0 0 3px rgba(52,152,219,0.56);
}

.c6 {
  font-size: 16px;
  font-family: lato,sans-serif;
  font-weight: 600;
  -webkit-font-smoothing: antialiased !important;
  -moz-osx-font-smoothing: grayscale;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 4px 4px;
  border-radius: 4px;
  line-height: 1.5;
  height: 32px;
  min-width: 32px;
  width: 32px;
  white-space: nowrap;
  cursor: pointer;
  -webkit-transition: background 0.3s,color 0.3s,border-color 0.3s;
  transition: background 0.3s,color 0.3s,border-color 0.3s;
  background-color: #fd6a08;
  color: #FFFFFF;
  border: solid 1px rgba(0,0,0,0.16);
  box-shadow: 0px 2px 2px 0px rgba(0,0,0,0.16);
}

.c6 span {
  overflow: hidden;
  text-overflow: ellipsis;
}

.c6:disabled {
  background-color: rgba(0,0,0,0.32);
  color: rgba(0,0,0,0.32);
  border-width: 1px;
  border-color: rgba(0,0,0,0.16);
  box-shadow: none;
  cursor: default;
}

.c6:disabled .icon {
  color: rgba(0,0,0,0.32);
}

.c6 .icon {
  -webkit-transition: color 0.3s ease;
  transition: color 0.3s ease;
  color: rgba(255,255,255,0.48);
  line-height: 1;
}

.c6:not(:disabled):hover,
.c6:not(:disabled).hovered,
.c6:not(:disabled):active,
.c6:not(:disabled).active {
  background-color: #D45806;
  box-shadow: 0px 4px 4px 0px rgba(0,0,0,0.16);
  padding: 4px 4px;
}

.c6:not(:disabled):hover .icon,
.c6:not(:disabled).hovered .icon,
.c6:not(:disabled):active .icon,
.c6:not(:disabled).active .icon,
.c6:not(:disabled):focus .icon,
.c6:not(:disabled).focused .icon {
  color: #FFFFFF;
}

.c6:not(:disabled).active,
.c6:not(:disabled):active {
  box-shadow: none;
}

.c6:focus,
.c6.focused {
  outline: none;
}

.c6.focus-visible,
.c6.focused:not(:disabled) {
  box-shadow: 0 0 0 3px rgba(52,152,219,0.56);
}

.c4 {
  position: relative;
  z-index: 1000;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-bottom: 0;
  font-family: Lato,sans-serif;
  font-size: 16px;
}

.c5 > .input {
  -webkit-order: 2;
  -ms-flex-order: 2;
  order: 2;
  box-sizing: border-box;
  border: solid 1px;
  border-radius: 16px;
  border-color: rgba(0,0,0,0.16);
  background-color: rgba(0,0,0,0.16);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  overflow: auto;
}

.c5 > .input .wrapped {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c5 > .input > input,
.select__search .c5 > .input input {
  padding: 4px 16px;
  line-height: 24px;
}

.c5 > .input > textarea {
  padding: 16px;
}

.c5 > .input input,
.c5 > .input textarea,
.c5 > .input select {
  font-family: inherit;
  font-size: inherit;
}

.c5 > .input > input,
.c5 > .input > textarea,
.select__search .c5 > .input input {
  min-width: 0;
  border: 0;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  outline: none;
  color: rgba(0,0,0,0.32);
  background: none;
}

.c5 > .input > input::-webkit-input-placeholder,
.c5 > .input > textarea::-webkit-input-placeholder,
.select__search .c5 > .input input::-webkit-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c5 > .input > input::-moz-placeholder,
.c5 > .input > textarea::-moz-placeholder,
.select__search .c5 > .input input::-moz-placeholder {
  color: rgba(0,0,0,0.32);
}

.c5 > .input > input:-ms-input-placeholder,
.c5 > .input > textarea:-ms-input-placeholder,
.select__search .c5 > .input input:-ms-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c5 > .input > input::placeholder,
.c5 > .input > textarea::placeholder,
.select__search .c5 > .input input::placeholder {
  color: rgba(0,0,0,0.32);
}

.c5 > .input > input[type="search"],
.c5 > .input > textarea[type="search"],
.select__search .c5 > .input input[type="search"] {
  -webkit-appearance: none;
  -moz-appearance: none;
}

.c5 > .input > input[type="search"]::-webkit-search-cancel-button,
.c5 > .input > textarea[type="search"]::-webkit-search-cancel-button,
.select__search .c5 > .input input[type="search"]::-webkit-search-cancel-button {
  display: none;
}

.c5 > .input > input[type="search"]::-ms-clear,
.c5 > .input > textarea[type="search"]::-ms-clear,
.select__search .c5 > .input input[type="search"]::-ms-clear {
  width: 0;
  height: 0;
}

.c5 > .input > input[role="combobox"],
.c5 > .input > textarea[role="combobox"],
.select__search .c5 > .input input[role="combobox"] {
  cursor: default;
}

.c5 > .input > .icon {
  color: rgba(0,0,0,0.16);
}

.c5 > .input > .icon.left {
  margin-left: 8px;
  margin-right: -8px;
}

.c5 > .input > .icon.right {
  margin-right: 8px;
  margin-left: -8px;
}

.c5 > .input > .clear {
  color: rgba(0,0,0,0.16);
}

.c5 > .input > .clear:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #3498db;
}

.c5 > .input > .clear a {
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
}

.c5 .input.dropdown {
  cursor: default;
}

.c5 input[type="number"] {
  -moz-appearance: textfield;
}

.c5 input[type="number"]::-webkit-inner-spin-button,
.c5 input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.c5 .prefix {
  margin-left: 16px;
  margin-right: -8px;
}

.c5 .suffix {
  margin-right: 16px;
  margin-left: -8px;
}

.c5 .prefix,
.c5 .suffix {
  font-family: Lato,sans-serif;
  font-size: 16px;
  color: rgba(0,0,0,0.32);
}

.c5 .label {
  margin-bottom: 8px;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.c1 .inputComponent {
  margin: 0 8px;
  min-width: 50px;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.c1 .inputComponent input {
  text-align: center;
}

.c1 .inputComponent input:invalid {
  box-shadow: none;
}

.c1 .button {
  border-radius: 50%;
  min-width: 34px;
  min-height: 34px;
}

.c0 {
  width: 200px;
}

@media only screen and (max-width:) {
  .c4 {
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background: rgba(0,0,0,0.32);
    position: fixed;
  }
}

<div
  className="c0"
  width="200px"
>
  <div
    className="c1"
  >
    <div>
      <button
        className="c2 button button--decrease   "
        data-testid="button--decrease"
        disabled={true}
        onClick={[Function]}
        type="button"
      >
        <div
          className="icon left-icon"
          style={
            Object {
              "transform": "translateX(-0px)",
            }
          }
        >
          <span
            className="c3"
            color="currentColor"
            size="1em"
          >
            <svg
              aria-hidden={true}
              className="farmblocks-icon "
              height={24}
              viewBox="2 2 20 20"
              width={24}
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M7 11a1 1 0 000 2h10a1 1 0 000-2H7z"
                fill="rgba(0, 0, 0, 0.16)"
                fillRule="evenodd"
              />
            </svg>
          </span>
        </div>
        <span />
      </button>
      <div
        className="c4 tooltip-content"
        offset="15px"
        onTouchStart={[Function]}
        style={
          Object {
            "opacity": 0,
          }
        }
      />
    </div>
    <div
      className="c5 inputComponent"
      disabled={true}
      onClick={[Function]}
      type="number"
    >
      <div
        className="input "
      >
        <input
          className="wrapped "
          data-testid="input-text"
          disabled={true}
          max={1.7976931348623157e+308}
          min={0}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          readOnly={false}
          step={1}
          type="number"
          value="0.00"
        />
      </div>
    </div>
    <button
      className="c6 button button--increase   "
      data-testid="button--increase"
      disabled={true}
      onClick={[Function]}
      type="button"
    >
      <div
        className="icon left-icon"
        style={
          Object {
            "transform": "translateX(-0px)",
          }
        }
      >
        <span
          className="c3"
          color="currentColor"
          size="1em"
        >
          <svg
            aria-hidden={true}
            className="farmblocks-icon "
            height={24}
            viewBox="2 2 20 20"
            width={24}
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M13 11V7a1 1 0 00-2 0v4H7a1 1 0 000 2h4v4a1 1 0 002 0v-4h4a1 1 0 000-2h-4z"
              fill="rgba(0, 0, 0, 0.16)"
              fillRule="evenodd"
            />
          </svg>
        </span>
      </div>
      <span />
    </button>
  </div>
</div>
`;

exports[`Storyshots Form|AmountSelectors Min and max amount 1`] = `
.c4 {
  display: inline-block;
  vertical-align: text-bottom;
}

.c4 .farmblocks-icon {
  display: block;
}

.c3 {
  font-size: 16px;
  font-family: lato,sans-serif;
  font-weight: 600;
  -webkit-font-smoothing: antialiased !important;
  -moz-osx-font-smoothing: grayscale;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 4px 4px;
  border-radius: 4px;
  line-height: 1.5;
  height: 32px;
  min-width: 32px;
  width: 32px;
  white-space: nowrap;
  cursor: pointer;
  -webkit-transition: background 0.3s,color 0.3s,border-color 0.3s;
  transition: background 0.3s,color 0.3s,border-color 0.3s;
  background-color: #FFFFFF;
  color: #59636f;
  border: solid 1px rgba(0,0,0,0.16);
  box-shadow: 0px 2px 2px 0px rgba(0,0,0,0.16);
}

.c3 span {
  overflow: hidden;
  text-overflow: ellipsis;
}

.c3:disabled {
  background-color: rgba(0,0,0,0.32);
  color: rgba(0,0,0,0.32);
  border-width: 1px;
  border-color: rgba(0,0,0,0.16);
  box-shadow: none;
  cursor: default;
}

.c3:disabled .icon {
  color: rgba(0,0,0,0.32);
}

.c3 .icon {
  -webkit-transition: color 0.3s ease;
  transition: color 0.3s ease;
  color: rgba(0,0,0,0.32);
  line-height: 1;
}

.c3:not(:disabled):hover,
.c3:not(:disabled).hovered,
.c3:not(:disabled):active,
.c3:not(:disabled).active {
  color: #3498db;
  border-width: 2px;
  border-color: #3498db;
  box-shadow: 0px 4px 4px 0px rgba(0,0,0,0.16);
  padding: 3px 3px;
}

.c3:not(:disabled):hover .icon,
.c3:not(:disabled).hovered .icon,
.c3:not(:disabled):active .icon,
.c3:not(:disabled).active .icon,
.c3:not(:disabled):focus .icon,
.c3:not(:disabled).focused .icon {
  color: #3498db;
}

.c3:not(:disabled).active,
.c3:not(:disabled):active {
  box-shadow: none;
}

.c3:focus,
.c3.focused {
  outline: none;
}

.c3.focus-visible,
.c3.focused:not(:disabled) {
  box-shadow: 0 0 0 3px rgba(52,152,219,0.56);
}

.c7 {
  font-size: 16px;
  font-family: lato,sans-serif;
  font-weight: 600;
  -webkit-font-smoothing: antialiased !important;
  -moz-osx-font-smoothing: grayscale;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 4px 4px;
  border-radius: 4px;
  line-height: 1.5;
  height: 32px;
  min-width: 32px;
  width: 32px;
  white-space: nowrap;
  cursor: pointer;
  -webkit-transition: background 0.3s,color 0.3s,border-color 0.3s;
  transition: background 0.3s,color 0.3s,border-color 0.3s;
  background-color: #fd6a08;
  color: #FFFFFF;
  border: solid 1px rgba(0,0,0,0.16);
  box-shadow: 0px 2px 2px 0px rgba(0,0,0,0.16);
}

.c7 span {
  overflow: hidden;
  text-overflow: ellipsis;
}

.c7:disabled {
  background-color: rgba(0,0,0,0.32);
  color: rgba(0,0,0,0.32);
  border-width: 1px;
  border-color: rgba(0,0,0,0.16);
  box-shadow: none;
  cursor: default;
}

.c7:disabled .icon {
  color: rgba(0,0,0,0.32);
}

.c7 .icon {
  -webkit-transition: color 0.3s ease;
  transition: color 0.3s ease;
  color: rgba(255,255,255,0.48);
  line-height: 1;
}

.c7:not(:disabled):hover,
.c7:not(:disabled).hovered,
.c7:not(:disabled):active,
.c7:not(:disabled).active {
  background-color: #D45806;
  box-shadow: 0px 4px 4px 0px rgba(0,0,0,0.16);
  padding: 4px 4px;
}

.c7:not(:disabled):hover .icon,
.c7:not(:disabled).hovered .icon,
.c7:not(:disabled):active .icon,
.c7:not(:disabled).active .icon,
.c7:not(:disabled):focus .icon,
.c7:not(:disabled).focused .icon {
  color: #FFFFFF;
}

.c7:not(:disabled).active,
.c7:not(:disabled):active {
  box-shadow: none;
}

.c7:focus,
.c7.focused {
  outline: none;
}

.c7.focus-visible,
.c7.focused:not(:disabled) {
  box-shadow: 0 0 0 3px rgba(52,152,219,0.56);
}

.c5 {
  position: relative;
  z-index: 1000;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-bottom: 0;
  font-family: Lato,sans-serif;
  font-size: 16px;
}

.c6 > .input {
  -webkit-order: 2;
  -ms-flex-order: 2;
  order: 2;
  box-sizing: border-box;
  border: solid 1px;
  border-radius: 16px;
  border-color: rgba(0,0,0,0.16);
  background-color: #ffffff;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  overflow: auto;
}

.c6 > .input .wrapped {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c6 > .input > input,
.select__search .c6 > .input input {
  padding: 4px 16px;
  line-height: 24px;
}

.c6 > .input > textarea {
  padding: 16px;
}

.c6 > .input input,
.c6 > .input textarea,
.c6 > .input select {
  font-family: inherit;
  font-size: inherit;
}

.c6 > .input > input,
.c6 > .input > textarea,
.select__search .c6 > .input input {
  min-width: 0;
  border: 0;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  outline: none;
  color: #2f313a;
  background: none;
}

.c6 > .input > input::-webkit-input-placeholder,
.c6 > .input > textarea::-webkit-input-placeholder,
.select__search .c6 > .input input::-webkit-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c6 > .input > input::-moz-placeholder,
.c6 > .input > textarea::-moz-placeholder,
.select__search .c6 > .input input::-moz-placeholder {
  color: rgba(0,0,0,0.32);
}

.c6 > .input > input:-ms-input-placeholder,
.c6 > .input > textarea:-ms-input-placeholder,
.select__search .c6 > .input input:-ms-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c6 > .input > input::placeholder,
.c6 > .input > textarea::placeholder,
.select__search .c6 > .input input::placeholder {
  color: rgba(0,0,0,0.32);
}

.c6 > .input > input[type="search"],
.c6 > .input > textarea[type="search"],
.select__search .c6 > .input input[type="search"] {
  -webkit-appearance: none;
  -moz-appearance: none;
}

.c6 > .input > input[type="search"]::-webkit-search-cancel-button,
.c6 > .input > textarea[type="search"]::-webkit-search-cancel-button,
.select__search .c6 > .input input[type="search"]::-webkit-search-cancel-button {
  display: none;
}

.c6 > .input > input[type="search"]::-ms-clear,
.c6 > .input > textarea[type="search"]::-ms-clear,
.select__search .c6 > .input input[type="search"]::-ms-clear {
  width: 0;
  height: 0;
}

.c6 > .input > input[role="combobox"],
.c6 > .input > textarea[role="combobox"],
.select__search .c6 > .input input[role="combobox"] {
  cursor: pointer;
}

.c6 > .input > .icon {
  color: rgba(0,0,0,0.16);
}

.c6 > .input > .icon.left {
  margin-left: 8px;
  margin-right: -8px;
}

.c6 > .input > .icon.right {
  margin-right: 8px;
  margin-left: -8px;
}

.c6 > .input > .clear {
  color: rgba(0,0,0,0.16);
}

.c6 > .input > .clear:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #3498db;
}

.c6 > .input > .clear a {
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
}

.c6 .input.dropdown {
  cursor: pointer;
}

.c6 input[type="number"] {
  -moz-appearance: textfield;
}

.c6 input[type="number"]::-webkit-inner-spin-button,
.c6 input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.c6 .prefix {
  margin-left: 16px;
  margin-right: -8px;
}

.c6 .suffix {
  margin-right: 16px;
  margin-left: -8px;
}

.c6 .prefix,
.c6 .suffix {
  font-family: Lato,sans-serif;
  font-size: 16px;
  color: rgba(0,0,0,0.32);
}

.c6 .label {
  margin-bottom: 8px;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.c2 .inputComponent {
  margin: 0 8px;
  min-width: 50px;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.c2 .inputComponent input {
  text-align: center;
}

.c2 .inputComponent input:invalid {
  box-shadow: none;
}

.c2 .button {
  border-radius: 50%;
  min-width: 34px;
  min-height: 34px;
}

.c1 {
  width: 200px;
  margin: 16px;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

@media only screen and (max-width:) {
  .c5 {
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background: rgba(0,0,0,0.32);
    position: fixed;
  }
}

<div
  className="c0"
>
  <div
    className="c1"
    width="200px"
  >
    Mininum amount = 10
    <div
      className="c2"
    >
      <div>
        <button
          className="c3 button button--decrease   "
          data-testid="button--decrease"
          disabled={true}
          onClick={[Function]}
          type="button"
        >
          <div
            className="icon left-icon"
            style={
              Object {
                "transform": "translateX(-0px)",
              }
            }
          >
            <span
              className="c4"
              color="currentColor"
              size="1em"
            >
              <svg
                aria-hidden={true}
                className="farmblocks-icon "
                height={24}
                viewBox="2 2 20 20"
                width={24}
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M7 11a1 1 0 000 2h10a1 1 0 000-2H7z"
                  fill="rgba(0, 0, 0, 0.16)"
                  fillRule="evenodd"
                />
              </svg>
            </span>
          </div>
          <span />
        </button>
        <div
          className="c5 tooltip-content"
          offset="15px"
          onTouchStart={[Function]}
          style={
            Object {
              "opacity": 0,
            }
          }
        />
      </div>
      <div
        className="c6 inputComponent"
        onClick={[Function]}
        type="number"
      >
        <div
          className="input "
        >
          <input
            className="wrapped "
            data-testid="input-text"
            max={1.7976931348623157e+308}
            min={10}
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            readOnly={false}
            step={1}
            type="number"
            value="10.00"
          />
        </div>
      </div>
      <button
        className="c7 button button--increase   "
        data-testid="button--increase"
        onClick={[Function]}
        type="button"
      >
        <div
          className="icon left-icon"
          style={
            Object {
              "transform": "translateX(-0px)",
            }
          }
        >
          <span
            className="c4"
            color="currentColor"
            size="1em"
          >
            <svg
              aria-hidden={true}
              className="farmblocks-icon "
              height={24}
              viewBox="2 2 20 20"
              width={24}
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M13 11V7a1 1 0 00-2 0v4H7a1 1 0 000 2h4v4a1 1 0 002 0v-4h4a1 1 0 000-2h-4z"
                fill="white"
                fillRule="evenodd"
              />
            </svg>
          </span>
        </div>
        <span />
      </button>
    </div>
  </div>
  <div
    className="c1"
    width="200px"
  >
    Maximum amount = 10
    <div
      className="c2"
    >
      <div>
        <button
          className="c3 button button--decrease   "
          data-testid="button--decrease"
          onClick={[Function]}
          type="button"
        >
          <div
            className="icon left-icon"
            style={
              Object {
                "transform": "translateX(-0px)",
              }
            }
          >
            <span
              className="c4"
              color="currentColor"
              size="1em"
            >
              <svg
                aria-hidden={true}
                className="farmblocks-icon "
                height={24}
                viewBox="2 2 20 20"
                width={24}
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M7 11a1 1 0 000 2h10a1 1 0 000-2H7z"
                  fill="#ff4411"
                  fillRule="evenodd"
                />
              </svg>
            </span>
          </div>
          <span />
        </button>
        <div
          className="c5 tooltip-content"
          offset="15px"
          onTouchStart={[Function]}
          style={
            Object {
              "opacity": 0,
            }
          }
        />
      </div>
      <div
        className="c6 inputComponent"
        onClick={[Function]}
        type="number"
      >
        <div
          className="input "
        >
          <input
            className="wrapped "
            data-testid="input-text"
            max={10}
            min={0}
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            readOnly={false}
            step={1}
            type="number"
            value="10.00"
          />
        </div>
      </div>
      <button
        className="c7 button button--increase   "
        data-testid="button--increase"
        disabled={true}
        onClick={[Function]}
        type="button"
      >
        <div
          className="icon left-icon"
          style={
            Object {
              "transform": "translateX(-0px)",
            }
          }
        >
          <span
            className="c4"
            color="currentColor"
            size="1em"
          >
            <svg
              aria-hidden={true}
              className="farmblocks-icon "
              height={24}
              viewBox="2 2 20 20"
              width={24}
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M13 11V7a1 1 0 00-2 0v4H7a1 1 0 000 2h4v4a1 1 0 002 0v-4h4a1 1 0 000-2h-4z"
                fill="rgba(0, 0, 0, 0.16)"
                fillRule="evenodd"
              />
            </svg>
          </span>
        </div>
        <span />
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots Form|AmountSelectors Min and max amount with messages 1`] = `
.c4 {
  display: inline-block;
  vertical-align: text-bottom;
}

.c4 .farmblocks-icon {
  display: block;
}

.c3 {
  font-size: 16px;
  font-family: lato,sans-serif;
  font-weight: 600;
  -webkit-font-smoothing: antialiased !important;
  -moz-osx-font-smoothing: grayscale;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 4px 4px;
  border-radius: 4px;
  line-height: 1.5;
  height: 32px;
  min-width: 32px;
  width: 32px;
  white-space: nowrap;
  cursor: pointer;
  -webkit-transition: background 0.3s,color 0.3s,border-color 0.3s;
  transition: background 0.3s,color 0.3s,border-color 0.3s;
  background-color: #FFFFFF;
  color: #59636f;
  border: solid 1px rgba(0,0,0,0.16);
  box-shadow: 0px 2px 2px 0px rgba(0,0,0,0.16);
}

.c3 span {
  overflow: hidden;
  text-overflow: ellipsis;
}

.c3:disabled {
  background-color: rgba(0,0,0,0.32);
  color: rgba(0,0,0,0.32);
  border-width: 1px;
  border-color: rgba(0,0,0,0.16);
  box-shadow: none;
  cursor: default;
}

.c3:disabled .icon {
  color: rgba(0,0,0,0.32);
}

.c3 .icon {
  -webkit-transition: color 0.3s ease;
  transition: color 0.3s ease;
  color: rgba(0,0,0,0.32);
  line-height: 1;
}

.c3:not(:disabled):hover,
.c3:not(:disabled).hovered,
.c3:not(:disabled):active,
.c3:not(:disabled).active {
  color: #3498db;
  border-width: 2px;
  border-color: #3498db;
  box-shadow: 0px 4px 4px 0px rgba(0,0,0,0.16);
  padding: 3px 3px;
}

.c3:not(:disabled):hover .icon,
.c3:not(:disabled).hovered .icon,
.c3:not(:disabled):active .icon,
.c3:not(:disabled).active .icon,
.c3:not(:disabled):focus .icon,
.c3:not(:disabled).focused .icon {
  color: #3498db;
}

.c3:not(:disabled).active,
.c3:not(:disabled):active {
  box-shadow: none;
}

.c3:focus,
.c3.focused {
  outline: none;
}

.c3.focus-visible,
.c3.focused:not(:disabled) {
  box-shadow: 0 0 0 3px rgba(52,152,219,0.56);
}

.c8 {
  font-size: 16px;
  font-family: lato,sans-serif;
  font-weight: 600;
  -webkit-font-smoothing: antialiased !important;
  -moz-osx-font-smoothing: grayscale;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 4px 4px;
  border-radius: 4px;
  line-height: 1.5;
  height: 32px;
  min-width: 32px;
  width: 32px;
  white-space: nowrap;
  cursor: pointer;
  -webkit-transition: background 0.3s,color 0.3s,border-color 0.3s;
  transition: background 0.3s,color 0.3s,border-color 0.3s;
  background-color: #fd6a08;
  color: #FFFFFF;
  border: solid 1px rgba(0,0,0,0.16);
  box-shadow: 0px 2px 2px 0px rgba(0,0,0,0.16);
}

.c8 span {
  overflow: hidden;
  text-overflow: ellipsis;
}

.c8:disabled {
  background-color: rgba(0,0,0,0.32);
  color: rgba(0,0,0,0.32);
  border-width: 1px;
  border-color: rgba(0,0,0,0.16);
  box-shadow: none;
  cursor: default;
}

.c8:disabled .icon {
  color: rgba(0,0,0,0.32);
}

.c8 .icon {
  -webkit-transition: color 0.3s ease;
  transition: color 0.3s ease;
  color: rgba(255,255,255,0.48);
  line-height: 1;
}

.c8:not(:disabled):hover,
.c8:not(:disabled).hovered,
.c8:not(:disabled):active,
.c8:not(:disabled).active {
  background-color: #D45806;
  box-shadow: 0px 4px 4px 0px rgba(0,0,0,0.16);
  padding: 4px 4px;
}

.c8:not(:disabled):hover .icon,
.c8:not(:disabled).hovered .icon,
.c8:not(:disabled):active .icon,
.c8:not(:disabled).active .icon,
.c8:not(:disabled):focus .icon,
.c8:not(:disabled).focused .icon {
  color: #FFFFFF;
}

.c8:not(:disabled).active,
.c8:not(:disabled):active {
  box-shadow: none;
}

.c8:focus,
.c8.focused {
  outline: none;
}

.c8.focus-visible,
.c8.focused:not(:disabled) {
  box-shadow: 0 0 0 3px rgba(52,152,219,0.56);
}

.c5 {
  position: relative;
  z-index: 1000;
}

.c6 {
  visibility: hidden;
  position: absolute;
  padding: 8px;
  background-color: #ffffff;
  box-shadow: 0 2px 2px 0 rgba(0,0,0,0.16);
  border: solid 1px rgba(0,0,0,0.16);
  border-radius: 4px;
  white-space: pre;
  color: #2f313a;
  font-family: lato,sans-serif;
  left: 0;
  top: 15px;
}

.c6 .closeButton {
  display: none;
}

.c6:after,
.c6:before {
  border: solid 1px rgba(0,0,0,0.16);
  content: " ";
  height: 0;
  width: 0;
  position: absolute;
  pointer-events: none;
}

.c6:before {
  bottom: 100%;
  border-color: transparent;
  border-bottom-color: rgba(0,0,0,0.16);
  border-width: 8px;
  left: 7px;
}

.c6:after {
  bottom: calc(100% - 1px);
  border-color: transparent;
  border-bottom-color: #ffffff;
  border-width: 7px;
  left: 8px;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-bottom: 0;
  font-family: Lato,sans-serif;
  font-size: 16px;
}

.c7 > .input {
  -webkit-order: 2;
  -ms-flex-order: 2;
  order: 2;
  box-sizing: border-box;
  border: solid 1px;
  border-radius: 16px;
  border-color: rgba(0,0,0,0.16);
  background-color: #ffffff;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  overflow: auto;
}

.c7 > .input .wrapped {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c7 > .input > input,
.select__search .c7 > .input input {
  padding: 4px 16px;
  line-height: 24px;
}

.c7 > .input > textarea {
  padding: 16px;
}

.c7 > .input input,
.c7 > .input textarea,
.c7 > .input select {
  font-family: inherit;
  font-size: inherit;
}

.c7 > .input > input,
.c7 > .input > textarea,
.select__search .c7 > .input input {
  min-width: 0;
  border: 0;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  outline: none;
  color: #2f313a;
  background: none;
}

.c7 > .input > input::-webkit-input-placeholder,
.c7 > .input > textarea::-webkit-input-placeholder,
.select__search .c7 > .input input::-webkit-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c7 > .input > input::-moz-placeholder,
.c7 > .input > textarea::-moz-placeholder,
.select__search .c7 > .input input::-moz-placeholder {
  color: rgba(0,0,0,0.32);
}

.c7 > .input > input:-ms-input-placeholder,
.c7 > .input > textarea:-ms-input-placeholder,
.select__search .c7 > .input input:-ms-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c7 > .input > input::placeholder,
.c7 > .input > textarea::placeholder,
.select__search .c7 > .input input::placeholder {
  color: rgba(0,0,0,0.32);
}

.c7 > .input > input[type="search"],
.c7 > .input > textarea[type="search"],
.select__search .c7 > .input input[type="search"] {
  -webkit-appearance: none;
  -moz-appearance: none;
}

.c7 > .input > input[type="search"]::-webkit-search-cancel-button,
.c7 > .input > textarea[type="search"]::-webkit-search-cancel-button,
.select__search .c7 > .input input[type="search"]::-webkit-search-cancel-button {
  display: none;
}

.c7 > .input > input[type="search"]::-ms-clear,
.c7 > .input > textarea[type="search"]::-ms-clear,
.select__search .c7 > .input input[type="search"]::-ms-clear {
  width: 0;
  height: 0;
}

.c7 > .input > input[role="combobox"],
.c7 > .input > textarea[role="combobox"],
.select__search .c7 > .input input[role="combobox"] {
  cursor: pointer;
}

.c7 > .input > .icon {
  color: rgba(0,0,0,0.16);
}

.c7 > .input > .icon.left {
  margin-left: 8px;
  margin-right: -8px;
}

.c7 > .input > .icon.right {
  margin-right: 8px;
  margin-left: -8px;
}

.c7 > .input > .clear {
  color: rgba(0,0,0,0.16);
}

.c7 > .input > .clear:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #3498db;
}

.c7 > .input > .clear a {
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
}

.c7 .input.dropdown {
  cursor: pointer;
}

.c7 input[type="number"] {
  -moz-appearance: textfield;
}

.c7 input[type="number"]::-webkit-inner-spin-button,
.c7 input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.c7 .prefix {
  margin-left: 16px;
  margin-right: -8px;
}

.c7 .suffix {
  margin-right: 16px;
  margin-left: -8px;
}

.c7 .prefix,
.c7 .suffix {
  font-family: Lato,sans-serif;
  font-size: 16px;
  color: rgba(0,0,0,0.32);
}

.c7 .label {
  margin-bottom: 8px;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.c2 .inputComponent {
  margin: 0 8px;
  min-width: 50px;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.c2 .inputComponent input {
  text-align: center;
}

.c2 .inputComponent input:invalid {
  box-shadow: none;
}

.c2 .button {
  border-radius: 50%;
  min-width: 34px;
  min-height: 34px;
}

.c1 {
  width: 200px;
  margin: 16px;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

@media only screen and (max-width:) {
  .c5 {
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background: rgba(0,0,0,0.32);
    position: fixed;
  }
}

@media only screen and (max-width:) {
  .c6:after,
  .c6:before {
    display: none;
  }
}

@media only screen and (max-width:) {
  .c6 {
    right: 16px;
    left: 16px;
    white-space: pre-wrap;
    top: 50%;
    -webkit-transform: translate(0,-50%);
    -ms-transform: translate(0,-50%);
    transform: translate(0,-50%);
  }

  .c6 .closeButton {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: end;
    -webkit-justify-content: flex-end;
    -ms-flex-pack: end;
    justify-content: flex-end;
    padding-top: 16px;
  }
}

<div
  className="c0"
>
  <div
    className="c1"
    width="200px"
  >
    Mininum amount = 10
    <div
      className="c2"
    >
      <div>
        <button
          className="c3 button button--decrease   "
          data-testid="button--decrease"
          disabled={true}
          onClick={[Function]}
          type="button"
        >
          <div
            className="icon left-icon"
            style={
              Object {
                "transform": "translateX(-0px)",
              }
            }
          >
            <span
              className="c4"
              color="currentColor"
              size="1em"
            >
              <svg
                aria-hidden={true}
                className="farmblocks-icon "
                height={24}
                viewBox="2 2 20 20"
                width={24}
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M7 11a1 1 0 000 2h10a1 1 0 000-2H7z"
                  fill="rgba(0, 0, 0, 0.16)"
                  fillRule="evenodd"
                />
              </svg>
            </span>
          </div>
          <span />
        </button>
        <div
          className="c5 tooltip-content"
          offset="15px"
          onTouchStart={[Function]}
          style={
            Object {
              "opacity": 0,
            }
          }
        >
          <div
            className="c6 tooltip-content"
            offset="15px"
            style={
              Object {
                "opacity": 0,
              }
            }
          >
            Reached minimum amount
          </div>
        </div>
      </div>
      <div
        className="c7 inputComponent"
        onClick={[Function]}
        type="number"
      >
        <div
          className="input "
        >
          <input
            className="wrapped "
            data-testid="input-text"
            max={1.7976931348623157e+308}
            min={10}
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            readOnly={false}
            step={1}
            type="number"
            value="9.00"
          />
        </div>
      </div>
      <button
        className="c8 button button--increase   "
        data-testid="button--increase"
        onClick={[Function]}
        type="button"
      >
        <div
          className="icon left-icon"
          style={
            Object {
              "transform": "translateX(-0px)",
            }
          }
        >
          <span
            className="c4"
            color="currentColor"
            size="1em"
          >
            <svg
              aria-hidden={true}
              className="farmblocks-icon "
              height={24}
              viewBox="2 2 20 20"
              width={24}
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M13 11V7a1 1 0 00-2 0v4H7a1 1 0 000 2h4v4a1 1 0 002 0v-4h4a1 1 0 000-2h-4z"
                fill="white"
                fillRule="evenodd"
              />
            </svg>
          </span>
        </div>
        <span />
      </button>
    </div>
  </div>
  <div
    className="c1"
    width="200px"
  >
    Maximum amount = 10
    <div
      className="c2"
    >
      <div>
        <button
          className="c3 button button--decrease   "
          data-testid="button--decrease"
          onClick={[Function]}
          type="button"
        >
          <div
            className="icon left-icon"
            style={
              Object {
                "transform": "translateX(-0px)",
              }
            }
          >
            <span
              className="c4"
              color="currentColor"
              size="1em"
            >
              <svg
                aria-hidden={true}
                className="farmblocks-icon "
                height={24}
                viewBox="2 2 20 20"
                width={24}
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M7 11a1 1 0 000 2h10a1 1 0 000-2H7z"
                  fill="#ff4411"
                  fillRule="evenodd"
                />
              </svg>
            </span>
          </div>
          <span />
        </button>
        <div
          className="c5 tooltip-content"
          offset="15px"
          onTouchStart={[Function]}
          style={
            Object {
              "opacity": 0,
            }
          }
        >
          <div
            className="c6 tooltip-content"
            offset="15px"
            style={
              Object {
                "opacity": 0,
              }
            }
          >
            Reached maximum amount
          </div>
        </div>
      </div>
      <div
        className="c7 inputComponent"
        onClick={[Function]}
        type="number"
      >
        <div
          className="input "
        >
          <input
            className="wrapped "
            data-testid="input-text"
            max={10}
            min={0}
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            readOnly={false}
            step={1}
            type="number"
            value="11.00"
          />
        </div>
      </div>
      <button
        className="c8 button button--increase   "
        data-testid="button--increase"
        disabled={true}
        onClick={[Function]}
        type="button"
      >
        <div
          className="icon left-icon"
          style={
            Object {
              "transform": "translateX(-0px)",
            }
          }
        >
          <span
            className="c4"
            color="currentColor"
            size="1em"
          >
            <svg
              aria-hidden={true}
              className="farmblocks-icon "
              height={24}
              viewBox="2 2 20 20"
              width={24}
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M13 11V7a1 1 0 00-2 0v4H7a1 1 0 000 2h4v4a1 1 0 002 0v-4h4a1 1 0 000-2h-4z"
                fill="rgba(0, 0, 0, 0.16)"
                fillRule="evenodd"
              />
            </svg>
          </span>
        </div>
        <span />
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots Form|AmountSelectors Removable 1`] = `
.c3 {
  display: inline-block;
  vertical-align: text-bottom;
}

.c3 .farmblocks-icon {
  display: block;
}

.c2 {
  font-size: 16px;
  font-family: lato,sans-serif;
  font-weight: 600;
  -webkit-font-smoothing: antialiased !important;
  -moz-osx-font-smoothing: grayscale;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 4px 4px;
  border-radius: 4px;
  line-height: 1.5;
  height: 32px;
  min-width: 32px;
  width: 32px;
  white-space: nowrap;
  cursor: pointer;
  -webkit-transition: background 0.3s,color 0.3s,border-color 0.3s;
  transition: background 0.3s,color 0.3s,border-color 0.3s;
  background-color: #FFFFFF;
  color: #59636f;
  border: solid 1px rgba(0,0,0,0.16);
  box-shadow: 0px 2px 2px 0px rgba(0,0,0,0.16);
}

.c2 span {
  overflow: hidden;
  text-overflow: ellipsis;
}

.c2:disabled {
  background-color: rgba(0,0,0,0.32);
  color: rgba(0,0,0,0.32);
  border-width: 1px;
  border-color: rgba(0,0,0,0.16);
  box-shadow: none;
  cursor: default;
}

.c2:disabled .icon {
  color: rgba(0,0,0,0.32);
}

.c2 .icon {
  -webkit-transition: color 0.3s ease;
  transition: color 0.3s ease;
  color: rgba(0,0,0,0.32);
  line-height: 1;
}

.c2:not(:disabled):hover,
.c2:not(:disabled).hovered,
.c2:not(:disabled):active,
.c2:not(:disabled).active {
  color: #3498db;
  border-width: 2px;
  border-color: #3498db;
  box-shadow: 0px 4px 4px 0px rgba(0,0,0,0.16);
  padding: 3px 3px;
}

.c2:not(:disabled):hover .icon,
.c2:not(:disabled).hovered .icon,
.c2:not(:disabled):active .icon,
.c2:not(:disabled).active .icon,
.c2:not(:disabled):focus .icon,
.c2:not(:disabled).focused .icon {
  color: #3498db;
}

.c2:not(:disabled).active,
.c2:not(:disabled):active {
  box-shadow: none;
}

.c2:focus,
.c2.focused {
  outline: none;
}

.c2.focus-visible,
.c2.focused:not(:disabled) {
  box-shadow: 0 0 0 3px rgba(52,152,219,0.56);
}

.c6 {
  font-size: 16px;
  font-family: lato,sans-serif;
  font-weight: 600;
  -webkit-font-smoothing: antialiased !important;
  -moz-osx-font-smoothing: grayscale;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 4px 4px;
  border-radius: 4px;
  line-height: 1.5;
  height: 32px;
  min-width: 32px;
  width: 32px;
  white-space: nowrap;
  cursor: pointer;
  -webkit-transition: background 0.3s,color 0.3s,border-color 0.3s;
  transition: background 0.3s,color 0.3s,border-color 0.3s;
  background-color: #fd6a08;
  color: #FFFFFF;
  border: solid 1px rgba(0,0,0,0.16);
  box-shadow: 0px 2px 2px 0px rgba(0,0,0,0.16);
}

.c6 span {
  overflow: hidden;
  text-overflow: ellipsis;
}

.c6:disabled {
  background-color: rgba(0,0,0,0.32);
  color: rgba(0,0,0,0.32);
  border-width: 1px;
  border-color: rgba(0,0,0,0.16);
  box-shadow: none;
  cursor: default;
}

.c6:disabled .icon {
  color: rgba(0,0,0,0.32);
}

.c6 .icon {
  -webkit-transition: color 0.3s ease;
  transition: color 0.3s ease;
  color: rgba(255,255,255,0.48);
  line-height: 1;
}

.c6:not(:disabled):hover,
.c6:not(:disabled).hovered,
.c6:not(:disabled):active,
.c6:not(:disabled).active {
  background-color: #D45806;
  box-shadow: 0px 4px 4px 0px rgba(0,0,0,0.16);
  padding: 4px 4px;
}

.c6:not(:disabled):hover .icon,
.c6:not(:disabled).hovered .icon,
.c6:not(:disabled):active .icon,
.c6:not(:disabled).active .icon,
.c6:not(:disabled):focus .icon,
.c6:not(:disabled).focused .icon {
  color: #FFFFFF;
}

.c6:not(:disabled).active,
.c6:not(:disabled):active {
  box-shadow: none;
}

.c6:focus,
.c6.focused {
  outline: none;
}

.c6.focus-visible,
.c6.focused:not(:disabled) {
  box-shadow: 0 0 0 3px rgba(52,152,219,0.56);
}

.c4 {
  position: relative;
  z-index: 1000;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-bottom: 0;
  font-family: Lato,sans-serif;
  font-size: 16px;
}

.c5 > .input {
  -webkit-order: 2;
  -ms-flex-order: 2;
  order: 2;
  box-sizing: border-box;
  border: solid 1px;
  border-radius: 16px;
  border-color: rgba(0,0,0,0.16);
  background-color: #ffffff;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  overflow: auto;
}

.c5 > .input .wrapped {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c5 > .input > input,
.select__search .c5 > .input input {
  padding: 4px 16px;
  line-height: 24px;
}

.c5 > .input > textarea {
  padding: 16px;
}

.c5 > .input input,
.c5 > .input textarea,
.c5 > .input select {
  font-family: inherit;
  font-size: inherit;
}

.c5 > .input > input,
.c5 > .input > textarea,
.select__search .c5 > .input input {
  min-width: 0;
  border: 0;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  outline: none;
  color: #2f313a;
  background: none;
}

.c5 > .input > input::-webkit-input-placeholder,
.c5 > .input > textarea::-webkit-input-placeholder,
.select__search .c5 > .input input::-webkit-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c5 > .input > input::-moz-placeholder,
.c5 > .input > textarea::-moz-placeholder,
.select__search .c5 > .input input::-moz-placeholder {
  color: rgba(0,0,0,0.32);
}

.c5 > .input > input:-ms-input-placeholder,
.c5 > .input > textarea:-ms-input-placeholder,
.select__search .c5 > .input input:-ms-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c5 > .input > input::placeholder,
.c5 > .input > textarea::placeholder,
.select__search .c5 > .input input::placeholder {
  color: rgba(0,0,0,0.32);
}

.c5 > .input > input[type="search"],
.c5 > .input > textarea[type="search"],
.select__search .c5 > .input input[type="search"] {
  -webkit-appearance: none;
  -moz-appearance: none;
}

.c5 > .input > input[type="search"]::-webkit-search-cancel-button,
.c5 > .input > textarea[type="search"]::-webkit-search-cancel-button,
.select__search .c5 > .input input[type="search"]::-webkit-search-cancel-button {
  display: none;
}

.c5 > .input > input[type="search"]::-ms-clear,
.c5 > .input > textarea[type="search"]::-ms-clear,
.select__search .c5 > .input input[type="search"]::-ms-clear {
  width: 0;
  height: 0;
}

.c5 > .input > input[role="combobox"],
.c5 > .input > textarea[role="combobox"],
.select__search .c5 > .input input[role="combobox"] {
  cursor: pointer;
}

.c5 > .input > .icon {
  color: rgba(0,0,0,0.16);
}

.c5 > .input > .icon.left {
  margin-left: 8px;
  margin-right: -8px;
}

.c5 > .input > .icon.right {
  margin-right: 8px;
  margin-left: -8px;
}

.c5 > .input > .clear {
  color: rgba(0,0,0,0.16);
}

.c5 > .input > .clear:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #3498db;
}

.c5 > .input > .clear a {
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
}

.c5 .input.dropdown {
  cursor: pointer;
}

.c5 input[type="number"] {
  -moz-appearance: textfield;
}

.c5 input[type="number"]::-webkit-inner-spin-button,
.c5 input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.c5 .prefix {
  margin-left: 16px;
  margin-right: -8px;
}

.c5 .suffix {
  margin-right: 16px;
  margin-left: -8px;
}

.c5 .prefix,
.c5 .suffix {
  font-family: Lato,sans-serif;
  font-size: 16px;
  color: rgba(0,0,0,0.32);
}

.c5 .label {
  margin-bottom: 8px;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.c1 .inputComponent {
  margin: 0 8px;
  min-width: 50px;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.c1 .inputComponent input {
  text-align: center;
}

.c1 .inputComponent input:invalid {
  box-shadow: none;
}

.c1 .button {
  border-radius: 50%;
  min-width: 34px;
  min-height: 34px;
}

.c0 {
  width: 200px;
}

@media only screen and (max-width:) {
  .c4 {
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background: rgba(0,0,0,0.32);
    position: fixed;
  }
}

<div
  className="c0"
  width="200px"
>
  <div
    className="c1"
  >
    <div>
      <button
        className="c2 button button--remove   "
        data-testid="button--remove"
        onClick={[Function]}
        type="button"
      >
        <div
          className="icon left-icon"
          style={
            Object {
              "transform": "translateX(-0px)",
            }
          }
        >
          <span
            className="c3"
            color="currentColor"
            size="1em"
          >
            <svg
              aria-hidden={true}
              className="farmblocks-icon "
              height={16}
              viewBox="2 2 20 20"
              width={16}
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M12 1a1 1 0 01.993.883L13 2v1h6a1 1 0 01.993.883L20 4v4a1 1 0 01-.883.993L19 9v11a2 2 0 01-1.85 1.995L17 22H7a2 2 0 01-1.995-1.85L5 20V9a1 1 0 01-.993-.883L4 8V4a1 1 0 01.883-.993L5 3h6V2a1 1 0 011-1zm5 8H7v11h2v-7a1 1 0 011.993-.117L11 13v7h2v-7a1 1 0 011.993-.117L15 13v7h2V9zm1-4H6v2h12V5z"
                fill="#ff4411"
                fillRule="evenodd"
              />
            </svg>
          </span>
        </div>
        <span />
      </button>
      <div
        className="c4 tooltip-content"
        offset="15px"
        onTouchStart={[Function]}
        style={
          Object {
            "opacity": 0,
          }
        }
      />
    </div>
    <div
      className="c5 inputComponent"
      onClick={[Function]}
      type="number"
    >
      <div
        className="input "
      >
        <input
          className="wrapped "
          data-testid="input-text"
          max={1.7976931348623157e+308}
          min={1}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          readOnly={false}
          step={1}
          type="number"
          value="1.00"
        />
      </div>
    </div>
    <button
      className="c6 button button--increase   "
      data-testid="button--increase"
      onClick={[Function]}
      type="button"
    >
      <div
        className="icon left-icon"
        style={
          Object {
            "transform": "translateX(-0px)",
          }
        }
      >
        <span
          className="c3"
          color="currentColor"
          size="1em"
        >
          <svg
            aria-hidden={true}
            className="farmblocks-icon "
            height={24}
            viewBox="2 2 20 20"
            width={24}
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M13 11V7a1 1 0 00-2 0v4H7a1 1 0 000 2h4v4a1 1 0 002 0v-4h4a1 1 0 000-2h-4z"
              fill="white"
              fillRule="evenodd"
            />
          </svg>
        </span>
      </div>
      <span />
    </button>
  </div>
</div>
`;

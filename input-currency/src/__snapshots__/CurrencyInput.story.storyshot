// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Form|Currency Input Basic 1`] = `
.c2 {
  font-family: Lato,sans-serif;
  font-size: 16px;
  font-weight: 600;
  line-height: 1.5;
  color: #2f313a;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-bottom: 24px;
  font-family: Lato,sans-serif;
  font-size: 16px;
}

.c1 > .input {
  -webkit-order: 2;
  -ms-flex-order: 2;
  order: 2;
  box-sizing: border-box;
  border: solid 1px;
  border-radius: 4px;
  border-color: rgba(0,0,0,0.16);
  background-color: #ffffff;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: text;
  overflow: auto;
}

.c1 > .input .wrapped {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c1 > .input > input,
.select__search .c1 > .input input {
  padding: 8px 16px;
  line-height: 22px;
}

.c1 > .input > textarea {
  padding: 16px;
}

.c1 > .input input,
.c1 > .input textarea,
.c1 > .input select {
  font-family: inherit;
  font-size: inherit;
}

.c1 > .input > input,
.c1 > .input > textarea,
.select__search .c1 > .input input {
  min-width: 0;
  border: 0;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  outline: none;
  color: #2f313a;
  background: none;
}

.c1 > .input > input::-webkit-input-placeholder,
.c1 > .input > textarea::-webkit-input-placeholder,
.select__search .c1 > .input input::-webkit-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c1 > .input > input::-moz-placeholder,
.c1 > .input > textarea::-moz-placeholder,
.select__search .c1 > .input input::-moz-placeholder {
  color: rgba(0,0,0,0.32);
}

.c1 > .input > input:-ms-input-placeholder,
.c1 > .input > textarea:-ms-input-placeholder,
.select__search .c1 > .input input:-ms-input-placeholder {
  color: rgba(0,0,0,0.32);
}

.c1 > .input > input::placeholder,
.c1 > .input > textarea::placeholder,
.select__search .c1 > .input input::placeholder {
  color: rgba(0,0,0,0.32);
}

.c1 > .input > input[type="search"],
.c1 > .input > textarea[type="search"],
.select__search .c1 > .input input[type="search"] {
  -webkit-appearance: none;
  -moz-appearance: none;
}

.c1 > .input > input[type="search"]::-webkit-search-cancel-button,
.c1 > .input > textarea[type="search"]::-webkit-search-cancel-button,
.select__search .c1 > .input input[type="search"]::-webkit-search-cancel-button {
  display: none;
}

.c1 > .input > input[type="search"]::-ms-clear,
.c1 > .input > textarea[type="search"]::-ms-clear,
.select__search .c1 > .input input[type="search"]::-ms-clear {
  width: 0;
  height: 0;
}

.c1 > .input > input[role="combobox"],
.c1 > .input > textarea[role="combobox"],
.select__search .c1 > .input input[role="combobox"] {
  cursor: pointer;
}

.c1 > .input > .icon {
  color: rgba(0,0,0,0.16);
}

.c1 > .input > .icon.left {
  margin-left: 8px;
  margin-right: -8px;
}

.c1 > .input > .icon.right {
  margin-right: 8px;
  margin-left: -8px;
}

.c1 > .input > .clear {
  color: rgba(0,0,0,0.16);
}

.c1 > .input > .clear:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #3498db;
}

.c1 > .input > .clear a {
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: pointer;
}

.c1 .input.dropdown {
  cursor: pointer;
}

.c1 input[type="number"] {
  -moz-appearance: textfield;
}

.c1 input[type="number"]::-webkit-inner-spin-button,
.c1 input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.c1 .prefix {
  margin-left: 16px;
  margin-right: -8px;
}

.c1 .suffix {
  margin-right: 16px;
  margin-left: -8px;
}

.c1 .prefix,
.c1 .suffix {
  font-family: Lato,sans-serif;
  font-size: 16px;
  color: rgba(0,0,0,0.32);
}

.c1 .label {
  margin-bottom: 8px;
}

.c0 {
  position: relative;
}

.c0 >:first-child {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

<div>
  <div
    className="c0"
  >
    <div
      className="c1"
      onClick={[Function]}
      type="text"
    >
      <div
        className="input "
      >
        
        <input
          className="wrapped "
          inputMode="numeric"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onMouseUp={[Function]}
          placeholder="Enter number"
          type="text"
          value=""
        />
        
      </div>
    </div>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      onClick={[Function]}
      type="text"
    >
      <div
        className="input "
      >
        
        <input
          className="wrapped "
          inputMode="numeric"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onMouseUp={[Function]}
          type="text"
          value="1,234.00"
        />
        
      </div>
      <label
        className="c2 label"
      >
        Default props
      </label>
    </div>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      onClick={[Function]}
      type="text"
    >
      <div
        className="input "
      >
        
        <input
          className="wrapped "
          inputMode="numeric"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onMouseUp={[Function]}
          type="text"
          value="1,234"
        />
        
      </div>
      <label
        className="c2 label"
      >
        Without decimal scale
      </label>
    </div>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      onClick={[Function]}
      type="text"
    >
      <div
        className="input "
      >
        
        <input
          className="wrapped "
          inputMode="numeric"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onMouseUp={[Function]}
          type="text"
          value="1,234.0000"
        />
        
      </div>
      <label
        className="c2 label"
      >
        Custom decimalScale
      </label>
    </div>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      onClick={[Function]}
      type="text"
    >
      <div
        className="input "
      >
        
        <input
          className="wrapped "
          inputMode="numeric"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onMouseUp={[Function]}
          type="text"
          value="-1,234.00"
        />
        
      </div>
      <label
        className="c2 label"
      >
        Negative
      </label>
    </div>
  </div>
  <div
    className="c0"
  >
    <div
      className="c1"
      onClick={[Function]}
      type="text"
    >
      <div
        className="input "
      >
        
        <input
          className="wrapped "
          inputMode="numeric"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onMouseUp={[Function]}
          type="text"
          value="1.234,00"
        />
        
      </div>
      <label
        className="c2 label"
      >
        Custom decimal an thousand separators
      </label>
    </div>
  </div>
</div>
`;
